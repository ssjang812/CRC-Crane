#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 32-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The '__Interop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 414
// warning CS0414: The private field 'field' is assigned but its value is never used
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace __Interop
{
	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, CharSet=global::System.Runtime.InteropServices.CharSet.Unicode, Size=520)]
	public unsafe partial struct InlineArray_ushort___260
	{
		// Copies characters from this buffer, up to the first null or end of buffer, into a new string.
		public string CopyToString()
		{
			fixed (ushort* ptrFirstElement = &(firstElement))
			{
				char* ptr = ((char*)ptrFirstElement);
				char* end = ptr;
				char* limit = (ptr + 260);
				while (end < limit 
							&& (*(end)) != 0)
				{
					end = end + 1;
				}
				return new string(ptr, 0, ((int)(end - ptr)));
			}
		}

		public ushort this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 260)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_ushort___260* pThis = &(this))
					return ((ushort*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 260)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_ushort___260* pThis = &(this))
					((ushort*)pThis)[index] = value;
			}
		}
		public const int Length = 260;
		ushort firstElement;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, CharSet=global::System.Runtime.InteropServices.CharSet.Unicode, Size=28)]
	public unsafe partial struct InlineArray_ushort___14
	{
		// Copies characters from this buffer, up to the first null or end of buffer, into a new string.
		public string CopyToString()
		{
			fixed (ushort* ptrFirstElement = &(firstElement))
			{
				char* ptr = ((char*)ptrFirstElement);
				char* end = ptr;
				char* limit = (ptr + 14);
				while (end < limit 
							&& (*(end)) != 0)
				{
					end = end + 1;
				}
				return new string(ptr, 0, ((int)(end - ptr)));
			}
		}

		public ushort this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 14)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_ushort___14* pThis = &(this))
					return ((ushort*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 14)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_ushort___14* pThis = &(this))
					((ushort*)pThis)[index] = value;
			}
		}
		public const int Length = 14;
		ushort firstElement;
	}
}

namespace BridgeInterface
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IArrayTools
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetArrayValue(
					long arrayObject, 
					int index, 
					long value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long GetArrayValue(
					long arrayObject, 
					int index);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetArrayStringValue(
					long arrayObject, 
					int index, 
					string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string GetArrayStringValue(
					long arrayObject, 
					int index);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetArrayTypeValue(
					long arrayObject, 
					int index, 
					int typeId);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int GetArrayTypeValue(
					long arrayObject, 
					int index);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetArrayIntPtrValue(
					long arrayObject, 
					int index, 
					long value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long GetArrayIntPtrValue(
					long arrayObject, 
					int index);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int GetArrayLength(long arrayObject);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		object GetArrayObject(long arrayObject);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long GetArrayPointerToElement(long arrayObject);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ExceptionHandler(long exceptionHandle);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ExceptionLogger(
				long exceptionHandle, 
				string message);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IExceptionHandling
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Initialize(
					global::BridgeInterface.ExceptionHandler handler, 
					global::BridgeInterface.ExceptionLogger logger);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void RaiseException(
					int exceptionType, 
					string exceptionMessage);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::BridgeInterface.ExceptionDescription GetExceptionDescription(long handleId);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGCHandledObjects
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long GetPointerToReferences(int blockId);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool ConvertObjectToBool(long handle);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int ConvertObjectToInt32(long handle);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		float ConvertObjectToSingle(long handle);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		double ConvertObjectToDouble(long handle);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string ConvertObjectToString(long handle);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long ConvertObjectToPointer(long handle);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BlockCount")]
		int get_BlockCount();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long ArrayHandleToPinnedGCHandle(long handleId);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void FreeHandles();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllocatedObjectCount")]
		int get_AllocatedObjectCount();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void ValidateBlocks();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void ValidateObject(
					long handleId, 
					int blockId, 
					int handleIdInBlock, 
					int referenceCount, 
					int ptrToReferences);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void FreeAllBlocks(bool checkForLeaks);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGCHandles
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int Create(object objWrapper);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int CreateWeak(object objWrapper);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Release(int handle);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		object GetObject(int handle);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int CreateGC(long objWrapper);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int CreateWeakGC(long objWrapper);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long GetObjectGC(int handle);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int PinArray(
					long objWrapper, 
					out int addr, 
					out int len);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshallNativeMonoAnimationEvent1(
				long target, 
				float time, 
				string functionName, 
				string stringParameter, 
				long objectReferenceParameter, 
				float floatParameter, 
				int intParameter, 
				int messageOptions, 
				int source, 
				long stateSender);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshallNativeMonoAnimationEvent2(
				long target, 
				long animatorStateInfoPtr, 
				long animatorClipInfoPtr);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalSetScriptingLOD(
				long target, 
				float screenRelativeTransitionHeight, 
				float fadeTransitionWidth, 
				long renderers);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalSetNavMeshPath(
				long target, 
				long ptr, 
				long corners);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalSetLightmapDataMono(
				long target, 
				long light, 
				long dir, 
				long shadowMask);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalSetMonoTreePrototype(
				long target, 
				long prefab, 
				float bendFactor);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalSetMonoDetailPrototype1(
				long target, 
				long prototype, 
				long longprototypeTexture, 
				global::BridgeInterface.ColorWrapper healthyColor, 
				global::BridgeInterface.ColorWrapper dryColor);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalSetMonoDetailPrototype2(
				long target, 
				float minWidth, 
				float maxWidth, 
				float minHeight, 
				float maxHeight, 
				float noiseSpread, 
				float bendFactor, 
				int renderMode, 
				int usePrototypeMesh);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalSetMonoSplatPrototype(
				long target, 
				long texture, 
				long normalMap, 
				global::BridgeInterface.Vector2Wrapper tileSize, 
				global::BridgeInterface.Vector2Wrapper tileOffset, 
				global::BridgeInterface.Vector4Wrapper specularMetallic, 
				float smoothness);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalSetScriptingCharacterInfo(
				long target, 
				int index, 
				global::BridgeInterface.RectWrapper uv, 
				global::BridgeInterface.RectWrapper vert, 
				float width, 
				int size, 
				int style, 
				bool flipped);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalSetMonoAnimatorControllerParameter(
				long target, 
				string name, 
				int type, 
				float defaultFloat, 
				float defaultInt, 
				bool defaultBool);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalNavMeshTriangulation(
				long target, 
				long vertices, 
				long indices, 
				long areas);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalConstraintSource(
				long target, 
				long sourceTransform, 
				float weight);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalHPlayable(
				long target, 
				int handle, 
				uint version);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalStructWithStringIntAndFloat(
				long target, 
				long a, 
				int b, 
				float c);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalStructWith8ByteAndBoolFields(
				long target, 
				long intField, 
				bool bool1, 
				bool bool2, 
				bool bool3);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalClassToStruct(
				long target, 
				int intField, 
				long stringField);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalTileData(
				long target, 
				long sprite, 
				global::BridgeInterface.ColorWrapper color, 
				global::BridgeInterface.ColorWrapper row0, 
				global::BridgeInterface.ColorWrapper row1, 
				global::BridgeInterface.ColorWrapper row2, 
				global::BridgeInterface.ColorWrapper row3, 
				long spawnObject, 
				int flags);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalTileAnimationData(
				long target, 
				long animatedSprite, 
				float animationSpeed, 
				float animationTimeOffset);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalRaycastHit(
				long target, 
				global::BridgeInterface.Vector3Wrapper point, 
				global::BridgeInterface.Vector3Wrapper normal, 
				uint faceId, 
				float distance, 
				global::BridgeInterface.Vector2Wrapper uv, 
				int collider);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMarshalling
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int GetMarshalNativePtrIntoFirstFieldDelegatePtr();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int GetMarshalFirstFieldIntoNativePtrDelegatePtr();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshalNativePtrIntoFirstField(
					object instance, 
					int ptr);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int MarshalFirstFieldIntoNativePtr(object instance);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshalNativePtrIntoFirstFieldGC(
					long instance, 
					int ptr);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int MarshalFirstFieldIntoNativePtrGC(long instance);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetupMarshalCallbacks(
					global::BridgeInterface.MarshallNativeMonoAnimationEvent1 marshalSetMonoAnimationEvent1, 
					global::BridgeInterface.MarshallNativeMonoAnimationEvent2 marshalSetMonoAnimationEvent2, 
					global::BridgeInterface.MarshalSetScriptingLOD marshalSetScriptingLOD, 
					global::BridgeInterface.MarshalSetNavMeshPath marshalSetNavMeshPath, 
					global::BridgeInterface.MarshalSetLightmapDataMono marshalSetLightmapDataMono, 
					global::BridgeInterface.MarshalSetMonoTreePrototype marshalSetMonoTreePrototype, 
					global::BridgeInterface.MarshalSetMonoDetailPrototype1 marshalSetMonoDetailPrototype1, 
					global::BridgeInterface.MarshalSetMonoDetailPrototype2 marshalSetMonoDetailPrototype2, 
					global::BridgeInterface.MarshalSetMonoSplatPrototype marshalSetMonoSplatPrototype, 
					global::BridgeInterface.MarshalSetScriptingCharacterInfo marshalSetCharacterInfo, 
					global::BridgeInterface.MarshalSetMonoAnimatorControllerParameter marshalSetMonoAnimatorControllerParameter, 
					global::BridgeInterface.MarshalNavMeshTriangulation marshalNavMeshTriangulation, 
					global::BridgeInterface.MarshalConstraintSource marshalConstraintSource, 
					global::BridgeInterface.MarshalHPlayable marshalSetPlayable, 
					global::BridgeInterface.MarshalStructWithStringIntAndFloat marshalStructWithStringIntAndFloat, 
					global::BridgeInterface.MarshalStructWith8ByteAndBoolFields marshalStructWith8ByteAndBoolFields, 
					global::BridgeInterface.MarshalClassToStruct marshalClassToStruct, 
					global::BridgeInterface.MarshalTileData marshalTileData, 
					global::BridgeInterface.MarshalTileAnimationData marshalTileAnimationData, 
					global::BridgeInterface.MarshalRaycastHit marshalRaycastHit);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int MarshallGetManagedCoroutinePtr(long so);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int MarshallGetManagedUserCustomEventPtr(long so);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		float MarshallGetManagedWaitForSecondsWait(long so);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshalManagedMonoAnimationEvent(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallManagedScriptingLOD(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallManagedMonoNavMeshPath(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallManagedLightmapDataMono(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallManagedMonoTreePrototype(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallManagedMonoDetailPrototype(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallManagedMonoSplatPrototype(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallManagedScriptingCharacterInfo(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallManagedAnimatorControllerParameter(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshalManagedNavMeshTriangulation(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshalManagedConstraintSource(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallManagedHPlayable(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshalManagedStructWithStringIntAndFloat(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshalManagedStructWith8ByteAndBoolFields(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshalManagedClassToStruct(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshalManagedTileData(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshalManagedTileAnimationData(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshalManagedRaycastHit(
					long so, 
					long target);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long MarshallNativeMonoAnimationEventTo(
					float time, 
					string functionName, 
					string stringParameter, 
					long objectReferenceParameter, 
					float floatParameter, 
					int intParameter, 
					int messageOptions, 
					int source, 
					long stateSender, 
					int animatorStateInfoPtr, 
					int animatorClipInfoPtr);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long MarshallNativeLODTo(
					float screenRelativeTransitionHeight, 
					float fadeTransitionWidth, 
					long renderers);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallNativeResourceRequestTo(
					int ptr, 
					object path, 
					int typeId, 
					long dest);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallNativeNavMashPathTo(
					int ptr, 
					long corners, 
					long dest);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallNativeVoidPtrTo(
					int ptr, 
					long dest);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallNativeControllerColliderHitTo(
					long controller, 
					long collider, 
					float px, 
					float py, 
					float pz, 
					float nx, 
					float ny, 
					float nz, 
					float mdx, 
					float mdy, 
					float mdz, 
					float motionLength, 
					int push, 
					long dest);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallNativeAsyncOperationPtrTo(
					int ptr, 
					long dest);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallNativeMonoTreePrototypeTo(
					long prefab, 
					float bendFactor, 
					long dest);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long MarshallNativeMonoWebCamDeviceTo(
					object name, 
					object depthCameraName, 
					int flags, 
					int kind, 
					long resolutions);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallNativeMonoCollisionTo(
					float rvx, 
					float rvy, 
					float rvz, 
					float ix, 
					float iy, 
					float iz, 
					long rigidbody, 
					long collder, 
					int contactCount, 
					long recycledContacts, 
					long legacyContacts, 
					long dest);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallNativeLightmapDataMonoTo(
					long light, 
					long dir, 
					long shadowMask, 
					long dest);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallNativeMonoDetailPrototype1To(
					long prototype, 
					long prototypeTexture, 
					float healthyColorR, 
					float healthyColorG, 
					float healthyColorB, 
					float healthyColorA, 
					float dryColorR, 
					float dryColorG, 
					float dryColorB, 
					float dryColorA, 
					long dest);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallNativeMonoDetailPrototype2To(
					float minWidth, 
					float maxWidth, 
					float minHeight, 
					float maxHeight, 
					float noiseSpread, 
					float bendFactor, 
					int renderMode, 
					int usePrototypeMesh, 
					long dest);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallNativeMonoSplatPrototypeTo(
					long texture, 
					long normalMap, 
					global::BridgeInterface.Vector2Wrapper tileSize, 
					global::BridgeInterface.Vector2Wrapper tileOffset, 
					global::BridgeInterface.Vector4Wrapper specularMetallic, 
					float smoothness, 
					long dest);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long MarshallNativeNavMeshTriangulation(
					long vertices, 
					long indices, 
					long areas, 
					long dest);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long MarshallNativeConstraintSource(
					long sourceTransform, 
					float sourceWeight);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long MarshallNativeRaycastHit(
					global::BridgeInterface.Vector3Wrapper point, 
					global::BridgeInterface.Vector3Wrapper normal, 
					uint faceId, 
					float distance, 
					global::BridgeInterface.Vector2Wrapper uv, 
					int collider);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallNativeCollision2DTo(
					int enabled, 
					int colliderA, 
					int colliderB, 
					int rigidbodyA, 
					int rigidbodyB, 
					float relVelocityX, 
					float relVelocityY, 
					int contactCount, 
					long recycledContacts, 
					long legacyContacts, 
					long dest);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long MarshallNativeScriptingCharacterInfoTo(
					int index, 
					global::BridgeInterface.RectWrapper uv, 
					global::BridgeInterface.RectWrapper vert, 
					float width, 
					int size, 
					int style, 
					bool flipped);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long MarshallNativeMonoAnimatorControllerParameterTo(
					string name, 
					int type, 
					float defaultFloat, 
					int defaultInt, 
					bool defaultBool);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long MarshallNativeMonoReflectionProbeBlendInfoTo(
					long probe, 
					float weight);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallNativeScriptingTilemapProxyTo(
					long tilemap, 
					long dest);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshallNativeClassToStructTo(
					int intField, 
					long stringField, 
					long dest);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long MarshallNativeStructWithStringIntAndFloatTo(
					long a, 
					int b, 
					float c);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long MarshallNativeStructWith8ByteAndBoolFieldsTo(
					long intField, 
					bool bool1, 
					bool bool2, 
					bool bool3);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long CreateBoxedObjectFromPrimitiveBool(bool value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long CreateBoxedObjectFromPrimitiveSInt32(int value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long CreateBoxedObjectFromPrimitiveUInt32(uint value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long ConvertScriptingStringToObject(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string ConvertScriptingObjectToString(long handle);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMethodTools
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void InitializeFunctionTable(int table);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IObjectInstantiation
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long CreateArray(
					int typeId, 
					int size);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long CreateArray2D(
					int typeId, 
					int size1, 
					int size2);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long CreateArray3D(
					int typeId, 
					int size1, 
					int size2, 
					int size3);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IScriptingPinnedArray
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Ptr")]
		long get_Ptr();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Length")]
		int get_Length();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ArrayObject")]
		object get_ArrayObject();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetValue(
					int index, 
					object value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		object GetValue(int index);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITypeInformation
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long CastObjectToArray(long objectHandle);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long CastScriptingObjectToScriptingArray(long objectWrapper);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::BridgeInterface.AppCallbackItemStub CastScriptingObjectToAppCallbackItemStub(long objectWrapper);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int MakeArrayType(
					int typeId, 
					int rank);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetMarshaledTypeSizesAndNames(
					out long marshaledTypeSizes, 
					out long marshaledTypeNames);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetArrayTypesOfBlittableElements(
					int arrayTypes, 
					int typeCount);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetArrayTypesOfEnumElements(
					int arrayTypes, 
					int typeCount);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void AppCallbackItemStub();

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUnityEngineObjectTools
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int ScriptingObjectGetReferenceDataCachedPtr(object objectWrapper);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void ScriptingObjectSetReferenceDataCachedPtr(
					object objectWrapper, 
					int cachedPtr);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int ScriptingObjectGetReferenceDataCachedPtrGC(long objectWrapper);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void ScriptingObjectSetReferenceDataCachedPtrGC(
					long objectWrapper, 
					int cachedPtr);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ScriptingGUIContentToTempNativeDelegate(
				string text, 
				string tooltip, 
				object image);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ScriptingGUIContentToTempNativeDelegateGC(
				string text, 
				string tooltip, 
				long image);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUtils
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int LoadAssemblies(string assemblies);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LoadAssembliesError")]
		string get_LoadAssembliesError();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void ScriptingGUIContentToTempNative(
					object content, 
					global::BridgeInterface.ScriptingGUIContentToTempNativeDelegate callback);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void ScriptingGUIContentToTempNativeGC(
					long content, 
					global::BridgeInterface.ScriptingGUIContentToTempNativeDelegateGC callback);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool CompareObjects(
					long a, 
					long b);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int GCMaxGeneration();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GCCollect(int maxGeneration);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GCWaitForPendingFinalizers();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void CleanUnityRootObjects();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		long GCGetTotalMemory(bool forceFullCollection);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanExecuteSerializationCallbacks")]
		bool get_CanExecuteSerializationCallbacks();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CanExecuteSerializationCallbacks")]
		void set_CanExecuteSerializationCallbacks(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBridge
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ExceptionHandling")]
		global::BridgeInterface.IExceptionHandling get_ExceptionHandling();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GCHandles")]
		global::BridgeInterface.IGCHandles get_GCHandles();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Marshalling")]
		global::BridgeInterface.IMarshalling get_Marshalling();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MethodTools")]
		global::BridgeInterface.IMethodTools get_MethodTools();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ObjectInstantiation")]
		global::BridgeInterface.IObjectInstantiation get_ObjectInstantiation();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TypeInformation")]
		global::BridgeInterface.ITypeInformation get_TypeInformation();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UnityEngineObjectTools")]
		global::BridgeInterface.IUnityEngineObjectTools get_UnityEngineObjectTools();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Utils")]
		global::BridgeInterface.IUtils get_Utils();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GCHandledObjects")]
		global::BridgeInterface.IGCHandledObjects get_GCHandledObjects();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ArrayTools")]
		global::BridgeInterface.IArrayTools get_ArrayTools();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::BridgeInterface.IScriptingPinnedArray CreateArrayFromNativeArray(object[] objs);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetupSerializationReader(
					int serializationReader_Align, 
					int serializationReader_Read, 
					int serializationReader_ReadPPtr, 
					int serializationReader_ReadGUIStyle, 
					int serializationReader_ReadRectOffset, 
					int serializationReader_ReadAnimationCurve, 
					int serializationReader_ReadGradient, 
					int serializationReader_ReadPropertyName);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetupSerializationWriter(
					int serializationWriter_Align, 
					int serializationWriter_Write, 
					int serializationWriter_WritePPtr, 
					int serializationWriter_WriteGUIStyle, 
					int serializationWriter_WriteRectOffset, 
					int serializationWriter_WriteAnimationCurve, 
					int serializationWriter_WriteGradient, 
					int serializationWriter_WritePropertyName);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetupSerializationRemapper(int serializationRemapper_Remapper);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetupNamedSerializationReader(int namedSerializationFunctions);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetupNamedSerializationWriter(int namedSerializationFunctions);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void IncrementEngineVersion();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MarshalHumanDescription(
				long target, 
				long human, 
				long skeleton, 
				float armTwist, 
				float foreArmTwist, 
				float upperLegTwist, 
				float legTwist, 
				float armStretch, 
				float legStretch, 
				float feetSpacing, 
				bool hasTranslationDoF);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SerializationReader_Read(
				int ptr, 
				int size, 
				bool align);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate long SerializationReader_ReadPPtr();

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SerializationReader_ReadStruct(int ptr);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate int SerializationReader_ReadAnimationCurve();

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SerializationReader_Align();

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate long SerializationRemapper_GetScriptingWrapper(int oldInstanceId);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SerializationWriter_Write(
				int ptr, 
				int size, 
				bool align);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SerializationWriter_WritePPtr(int instanceID);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SerializationWriter_WriteStruct(int ptr);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SerializationWriter_WriteAnimationCurve(int ptr);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SerializationWriter_Align();

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISerializationReader
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISerializationWriter
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMonoBehaviourSerialization
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetNativeReader(global::BridgeInterface.ISerializationReader reader);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetNativeWriter(global::BridgeInterface.ISerializationWriter writer);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetNativeRemapper(global::BridgeInterface.SerializationRemapper_GetScriptingWrapper remapper);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Deserialize(long target_);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Serialize(long target_);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Remap(long target_);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string OutputFieldsOfLastSerializable();
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct ExceptionDescription
	{
		public string condition;
		public string strippedStacktrace;
		public string stacktrace;
		public int errorNum;
		public string file;
		public int line;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct ColorWrapper
	{
		public float r;
		public float g;
		public float b;
		public float a;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct Vector2Wrapper
	{
		public float x;
		public float y;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct Vector4Wrapper
	{
		public float x;
		public float y;
		public float z;
		public float w;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct RectWrapper
	{
		public float m_XMin;
		public float m_YMin;
		public float m_Width;
		public float m_Height;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct Vector3Wrapper
	{
		public float x;
		public float y;
		public float z;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct DotNetField
	{
		public int getterMethodPtr;
		public int setterMethodPtr;
		public int name;
		public int type;
		public int attributes;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct DotNetMethod
	{
		public int methodPtr;
		public int name;
		public global::BridgeInterface.DotNetMethodFlag flags;
		public int declaringType;
		public int returnType;
		public uint parameterCount;
		public int parameters;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum DotNetMethodFlag
	{
		kDotNetMethodFlag_Static = 1,
		kDotNetMethodFlag_HasImageEffectOpaqueAttribute = 2,
		kDotNetMethodFlag_HasImageEffectTransformsToLDRAttribute = 4,
		kDotNetMethodFlag_HasImageEffectAfterScaleAttribute = 8,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct DotNetType
	{
		public int managedHandle;
		public int typeId;
		public int nativeType;
		public int assembly;
		public int namespaze;
		public int name;
		public int baseType;
		public uint interfaceCount;
		public int interfaces;
		public uint methodCount;
		public int methods;
		public uint fieldCount;
		public int fields;
		public global::BridgeInterface.DotNetTypeFlag flags;
		public int metadataType;
		public int elementTypeId;
		public int declaringType;
		public uint nestedTypeCount;
		public int nestedTypes;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum DotNetTypeFlag
	{
		kDotNetTypeFlag_SealedOnCppSide = 1,
		kDotNetTypeFlag_HasSharedBetweenAnimatorsAttribute = 2,
		kDotNetTypeFlag_Interface = 4,
		kDotNetTypeFlag_Abstract = 8,
		kDotNetTypeFlag_GenericDefinition = 16,
		kDotNetTypeFlag_GenericInstance = 32,
		kDotNetTypeFlag_ValueType = 64,
		kDotNetTypeFlag_Blittable = 128,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("BridgeInterface, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct DotNetAssembly
	{
		public int getUnityTypeMethodPtr;
		public int name;
		public uint typeCount;
		public int types;
	}
}

namespace Microsoft.MixedReality.Toolkit.OpenVR.Headers
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInitError,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Vers" +
		"ion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRInitError__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		None = 0,
		Unknown = 1,
		Init_InstallationNotFound = 100,
		Init_InstallationCorrupt = 101,
		Init_VRClientDLLNotFound = 102,
		Init_FileNotFound = 103,
		Init_FactoryNotFound = 104,
		Init_InterfaceNotFound = 105,
		Init_InvalidInterface = 106,
		Init_UserConfigDirectoryInvalid = 107,
		Init_HmdNotFound = 108,
		Init_NotInitialized = 109,
		Init_PathRegistryNotFound = 110,
		Init_NoConfigPath = 111,
		Init_NoLogPath = 112,
		Init_PathRegistryNotWritable = 113,
		Init_AppInfoInitFailed = 114,
		Init_Retry = 115,
		Init_InitCanceledByUser = 116,
		Init_AnotherAppLaunching = 117,
		Init_SettingsInitFailed = 118,
		Init_ShuttingDown = 119,
		Init_TooManyObjects = 120,
		Init_NoServerForBackgroundApp = 121,
		Init_NotSupportedWithCompositor = 122,
		Init_NotAvailableToUtilityApps = 123,
		Init_Internal = 124,
		Init_HmdDriverIdIsNone = 125,
		Init_HmdNotFoundPresenceFailed = 126,
		Init_VRMonitorNotFound = 127,
		Init_VRMonitorStartupFailed = 128,
		Init_LowPowerWatchdogNotSupported = 129,
		Init_InvalidApplicationType = 130,
		Init_NotAvailableToWatchdogApps = 131,
		Init_WatchdogDisabledInSettings = 132,
		Init_VRDashboardNotFound = 133,
		Init_VRDashboardStartupFailed = 134,
		Init_VRHomeNotFound = 135,
		Init_VRHomeStartupFailed = 136,
		Init_RebootingBusy = 137,
		Init_FirmwareUpdateBusy = 138,
		Init_FirmwareRecoveryBusy = 139,
		Init_USBServiceBusy = 140,
		Init_VRWebHelperStartupFailed = 141,
		Init_TrackerManagerInitFailed = 142,
		Driver_Failed = 200,
		Driver_Unknown = 201,
		Driver_HmdUnknown = 202,
		Driver_NotLoaded = 203,
		Driver_RuntimeOutOfDate = 204,
		Driver_HmdInUse = 205,
		Driver_NotCalibrated = 206,
		Driver_CalibrationInvalid = 207,
		Driver_HmdDisplayNotFound = 208,
		Driver_TrackedDeviceInterfaceUnknown = 209,
		Driver_HmdDriverIdOutOfBounds = 211,
		Driver_HmdDisplayMirrored = 212,
		IPC_ServerInitFailed = 300,
		IPC_ConnectFailed = 301,
		IPC_SharedStateInitFailed = 302,
		IPC_CompositorInitFailed = 303,
		IPC_MutexInitFailed = 304,
		IPC_Failed = 305,
		IPC_CompositorConnectFailed = 306,
		IPC_CompositorInvalidConnectResponse = 307,
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		Compositor_Failed = 400,
		Compositor_D3D11HardwareRequired = 401,
		Compositor_FirmwareRequiresUpdate = 402,
		Compositor_OverlayInitFailed = 403,
		Compositor_ScreenshotsInitFailed = 404,
		Compositor_UnableToCreateDevice = 405,
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		VendorSpecific_WindowsNotInDevMode = 1001,
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		VendorSpecific_HmdFound_UserDataError = 1112,
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		Steam_SteamInstallationNotFound = 2000,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationType,Microsoft.MixedReality.Toolkit.Providers.OpenVR" +
		", Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRApplicationType__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		VRApplication_Other = 0,
		VRApplication_Scene = 1,
		VRApplication_Overlay = 2,
		VRApplication_Background = 3,
		VRApplication_Utility = 4,
		VRApplication_VRMonitor = 5,
		VRApplication_SteamWatchdog = 6,
		VRApplication_Bootstrapper = 7,
		VRApplication_WebHelper = 8,
		VRApplication_Max = 9,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Version" +
		"=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVRSystem__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetRecommendedRenderTargetSize__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetRecommendedRenderTargetSize;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetProjectionMatrix__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetProjectionMatrix;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetProjectionRaw__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetProjectionRaw;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__ComputeDistortion__Microsoft_MixedReality_Toolkit_Providers_OpenVR ComputeDistortion;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetEyeToHeadTransform__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetEyeToHeadTransform;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetTimeSinceLastVsync__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetTimeSinceLastVsync;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetD3D9AdapterIndex__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetD3D9AdapterIndex;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetDXGIOutputInfo__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetDXGIOutputInfo;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetOutputDevice__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOutputDevice;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__IsDisplayOnDesktop__Microsoft_MixedReality_Toolkit_Providers_OpenVR IsDisplayOnDesktop;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__SetDisplayVisibility__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetDisplayVisibility;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetDeviceToAbsoluteTrackingPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetDeviceToAbsoluteTrackingPose;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__ResetSeatedZeroPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR ResetSeatedZeroPose;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetSeatedZeroPoseToStandingAbsoluteTrackingPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetSeatedZeroPoseToStandingAbsoluteTrackingPose;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetRawZeroPoseToStandingAbsoluteTrackingPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetRawZeroPoseToStandingAbsoluteTrackingPose;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetSortedTrackedDeviceIndicesOfClass__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetSortedTrackedDeviceIndicesOfClass;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetTrackedDeviceActivityLevel__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetTrackedDeviceActivityLevel;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__ApplyTransform__Microsoft_MixedReality_Toolkit_Providers_OpenVR ApplyTransform;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetTrackedDeviceIndexForControllerRole__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetTrackedDeviceIndexForControllerRole;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetControllerRoleForTrackedDeviceIndex__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetControllerRoleForTrackedDeviceIndex;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetTrackedDeviceClass__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetTrackedDeviceClass;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__IsTrackedDeviceConnected__Microsoft_MixedReality_Toolkit_Providers_OpenVR IsTrackedDeviceConnected;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetBoolTrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetBoolTrackedDeviceProperty;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetFloatTrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetFloatTrackedDeviceProperty;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetInt32TrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetInt32TrackedDeviceProperty;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetUint64TrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetUint64TrackedDeviceProperty;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetMatrix34TrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetMatrix34TrackedDeviceProperty;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetArrayTrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetArrayTrackedDeviceProperty;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetStringTrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetStringTrackedDeviceProperty;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetPropErrorNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetPropErrorNameFromEnum;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__PollNextEvent__Microsoft_MixedReality_Toolkit_Providers_OpenVR PollNextEvent;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__PollNextEventWithPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR PollNextEventWithPose;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetEventTypeNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetEventTypeNameFromEnum;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetHiddenAreaMesh__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetHiddenAreaMesh;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetControllerState__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetControllerState;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetControllerStateWithPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetControllerStateWithPose;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__TriggerHapticPulse__Microsoft_MixedReality_Toolkit_Providers_OpenVR TriggerHapticPulse;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetButtonIdNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetButtonIdNameFromEnum;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__GetControllerAxisTypeNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetControllerAxisTypeNameFromEnum;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__IsInputAvailable__Microsoft_MixedReality_Toolkit_Providers_OpenVR IsInputAvailable;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__IsSteamVRDrawingControllers__Microsoft_MixedReality_Toolkit_Providers_OpenVR IsSteamVRDrawingControllers;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__ShouldApplicationPause__Microsoft_MixedReality_Toolkit_Providers_OpenVR ShouldApplicationPause;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__ShouldApplicationReduceRenderingWork__Microsoft_MixedReality_Toolkit_Providers_OpenVR ShouldApplicationReduceRenderingWork;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__DriverDebugRequest__Microsoft_MixedReality_Toolkit_Providers_OpenVR DriverDebugRequest;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__PerformFirmwareUpdate__Microsoft_MixedReality_Toolkit_Providers_OpenVR PerformFirmwareUpdate;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__AcknowledgeQuit_Exiting__Microsoft_MixedReality_Toolkit_Providers_OpenVR AcknowledgeQuit_Exiting;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__AcknowledgeQuit_UserPrompt__Microsoft_MixedReality_Toolkit_Providers_OpenVR AcknowledgeQuit_UserPrompt;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetRecommendedRenderTargetSize,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSystem__GetRecommendedRenderTargetSize__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ref uint pnWidth, 
				ref uint pnHeight);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix44_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Ver" +
		"sion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct HmdMatrix44_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float m0;
		public float m1;
		public float m2;
		public float m3;
		public float m4;
		public float m5;
		public float m6;
		public float m7;
		public float m8;
		public float m9;
		public float m10;
		public float m11;
		public float m12;
		public float m13;
		public float m14;
		public float m15;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Version=2." +
		"4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Eye_Left = 0,
		Eye_Right = 1,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetProjectionMatrix,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix44_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRSystem__GetProjectionMatrix__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR eEye, 
				float fNearZ, 
				float fFarZ);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetProjectionRaw,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSystem__GetProjectionRaw__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR eEye, 
				ref float pfLeft, 
				ref float pfRight, 
				ref float pfTop, 
				ref float pfBottom);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.DistortionCoordinates_t,Microsoft.MixedReality.Toolkit.Providers.O" +
		"penVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct DistortionCoordinates_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float rfRed0;
		public float rfRed1;
		public float rfGreen0;
		public float rfGreen1;
		public float rfBlue0;
		public float rfBlue1;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_ComputeDistortion,Microsoft.MixedReality.Toolkit.Provid" +
		"ers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRSystem__ComputeDistortion__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR eEye, 
				float fU, 
				float fV, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.DistortionCoordinates_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pDistortionCoordinates);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Ver" +
		"sion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float m0;
		public float m1;
		public float m2;
		public float m3;
		public float m4;
		public float m5;
		public float m6;
		public float m7;
		public float m8;
		public float m9;
		public float m10;
		public float m11;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetEyeToHeadTransform,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRSystem__GetEyeToHeadTransform__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR eEye);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetTimeSinceLastVsync,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRSystem__GetTimeSinceLastVsync__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ref float pfSecondsSinceLastVsync, 
				ref ulong pulFrameCounter);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetD3D9AdapterIndex,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IVRSystem__GetD3D9AdapterIndex__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetDXGIOutputInfo,Microsoft.MixedReality.Toolkit.Provid" +
		"ers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSystem__GetDXGIOutputInfo__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ref int pnAdapterIndex);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETextureType,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Vers" +
		"ion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum ETextureType__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Invalid = -1,
		DirectX = 0,
		OpenGL = 1,
		Vulkan = 2,
		IOSurface = 3,
		DirectX12 = 4,
		DXGISharedHandle = 5,
		Metal = 6,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetOutputDevice,Microsoft.MixedReality.Toolkit.Provider" +
		"s.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSystem__GetOutputDevice__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ref ulong pnDevice, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETextureType__Microsoft_MixedReality_Toolkit_Providers_OpenVR textureType, 
				global::System.IntPtr pInstance);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_IsDisplayOnDesktop,Microsoft.MixedReality.Toolkit.Provi" +
		"ders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRSystem__IsDisplayOnDesktop__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_SetDisplayVisibility,Microsoft.MixedReality.Toolkit.Pro" +
		"viders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRSystem__SetDisplayVisibility__Microsoft_MixedReality_Toolkit_Providers_OpenVR(bool bIsVisibleOnDesktop);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin,Microsoft.MixedReality.Toolkit.Providers.O" +
		"penVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		TrackingUniverseSeated = 0,
		TrackingUniverseStanding = 1,
		TrackingUniverseRawAndUncalibrated = 2,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t,Microsoft.MixedReality.Toolkit.Providers.OpenV" +
		"R, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR mDeviceToAbsoluteTracking;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector3_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR vVelocity;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector3_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR vAngularVelocity;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingResult__Microsoft_MixedReality_Toolkit_Providers_OpenVR eTrackingResult;
		public bool bPoseIsValid;
		public bool bDeviceIsConnected;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector3_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Vers" +
		"ion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct HmdVector3_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float v0;
		public float v1;
		public float v2;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingResult,Microsoft.MixedReality.Toolkit.Providers.OpenVR, V" +
		"ersion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum ETrackingResult__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Uninitialized = 1,
		Calibrating_InProgress = 100,
		Calibrating_OutOfRange = 101,
		Running_OK = 200,
		Running_OutOfRange = 201,
		Fallback_RotationOnly = 300,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetDeviceToAbsoluteTrackingPose,Microsoft.MixedReality." +
		"Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSystem__GetDeviceToAbsoluteTrackingPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR eOrigin, 
				float fPredictedSecondsToPhotonsFromNow, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pTrackedDevicePoseArray, 
				uint unTrackedDevicePoseArrayCount);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_ResetSeatedZeroPose,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSystem__ResetSeatedZeroPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetSeatedZeroPoseToStandingAbsoluteTrackingPose,Microso" +
		"ft.MixedReality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRSystem__GetSeatedZeroPoseToStandingAbsoluteTrackingPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetRawZeroPoseToStandingAbsoluteTrackingPose,Microsoft." +
		"MixedReality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRSystem__GetRawZeroPoseToStandingAbsoluteTrackingPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceClass,Microsoft.MixedReality.Toolkit.Providers.OpenV" +
		"R, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum ETrackedDeviceClass__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Invalid = 0,
		HMD = 1,
		Controller = 2,
		GenericTracker = 3,
		TrackingReference = 4,
		DisplayRedirect = 5,
		Max = 6,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetSortedTrackedDeviceIndicesOfClass,Microsoft.MixedRea" +
		"lity.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRSystem__GetSortedTrackedDeviceIndicesOfClass__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceClass__Microsoft_MixedReality_Toolkit_Providers_OpenVR eTrackedDeviceClass, 
				uint[] punTrackedDeviceIndexArray, 
				uint unTrackedDeviceIndexArrayCount, 
				uint unRelativeToTrackedDeviceIndex);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDeviceActivityLevel,Microsoft.MixedReality.Toolkit.Providers.Open" +
		"VR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EDeviceActivityLevel__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		k_EDeviceActivityLevel_Unknown = -1,
		k_EDeviceActivityLevel_Idle = 0,
		k_EDeviceActivityLevel_UserInteraction = 1,
		k_EDeviceActivityLevel_UserInteraction_Timeout = 2,
		k_EDeviceActivityLevel_Standby = 3,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetTrackedDeviceActivityLevel,Microsoft.MixedReality.To" +
		"olkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDeviceActivityLevel__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRSystem__GetTrackedDeviceActivityLevel__Microsoft_MixedReality_Toolkit_Providers_OpenVR(uint unDeviceId);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_ApplyTransform,Microsoft.MixedReality.Toolkit.Providers" +
		".OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSystem__ApplyTransform__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pOutputPose, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pTrackedDevicePose, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pTransform);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedControllerRole,Microsoft.MixedReality.Toolkit.Providers.Op" +
		"enVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum ETrackedControllerRole__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Invalid = 0,
		LeftHand = 1,
		RightHand = 2,
		OptOut = 3,
		Treadmill = 4,
		Max = 4,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetTrackedDeviceIndexForControllerRole,Microsoft.MixedR" +
		"eality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRSystem__GetTrackedDeviceIndexForControllerRole__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedControllerRole__Microsoft_MixedReality_Toolkit_Providers_OpenVR unDeviceType);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetControllerRoleForTrackedDeviceIndex,Microsoft.MixedR" +
		"eality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedControllerRole__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRSystem__GetControllerRoleForTrackedDeviceIndex__Microsoft_MixedReality_Toolkit_Providers_OpenVR(uint unDeviceIndex);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetTrackedDeviceClass,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceClass__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRSystem__GetTrackedDeviceClass__Microsoft_MixedReality_Toolkit_Providers_OpenVR(uint unDeviceIndex);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_IsTrackedDeviceConnected,Microsoft.MixedReality.Toolkit" +
		".Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRSystem__IsTrackedDeviceConnected__Microsoft_MixedReality_Toolkit_Providers_OpenVR(uint unDeviceIndex);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty,Microsoft.MixedReality.Toolkit.Providers.Op" +
		"enVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Prop_Invalid = 0,
		Prop_TrackingSystemName_String = 1000,
		Prop_ModelNumber_String = 1001,
		Prop_SerialNumber_String = 1002,
		Prop_RenderModelName_String = 1003,
		Prop_WillDriftInYaw_Bool = 1004,
		Prop_ManufacturerName_String = 1005,
		Prop_TrackingFirmwareVersion_String = 1006,
		Prop_HardwareRevision_String = 1007,
		Prop_AllWirelessDongleDescriptions_String = 1008,
		Prop_ConnectedWirelessDongle_String = 1009,
		Prop_DeviceIsWireless_Bool = 1010,
		Prop_DeviceIsCharging_Bool = 1011,
		Prop_DeviceBatteryPercentage_Float = 1012,
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		Prop_Firmware_ManualUpdate_Bool = 1015,
		Prop_Firmware_ManualUpdateURL_String = 1016,
		Prop_HardwareRevision_Uint64 = 1017,
		Prop_FirmwareVersion_Uint64 = 1018,
		Prop_FPGAVersion_Uint64 = 1019,
		Prop_VRCVersion_Uint64 = 1020,
		Prop_RadioVersion_Uint64 = 1021,
		Prop_DongleVersion_Uint64 = 1022,
		Prop_BlockServerShutdown_Bool = 1023,
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		Prop_ContainsProximitySensor_Bool = 1025,
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		Prop_DeviceCanPowerOff_Bool = 1027,
		Prop_Firmware_ProgrammingTarget_String = 1028,
		Prop_DeviceClass_Int32 = 1029,
		Prop_HasCamera_Bool = 1030,
		Prop_DriverVersion_String = 1031,
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		Prop_ParentDriver_Uint64 = 1034,
		Prop_ResourceRoot_String = 1035,
		Prop_RegisteredDeviceType_String = 1036,
		Prop_InputProfilePath_String = 1037,
		Prop_NeverTracked_Bool = 1038,
		Prop_NumCameras_Int32 = 1039,
		Prop_CameraFrameLayout_Int32 = 1040,
		Prop_CameraStreamFormat_Int32 = 1041,
		Prop_AdditionalDeviceSettingsPath_String = 1042,
		Prop_Identifiable_Bool = 1043,
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		Prop_DisplayFrequency_Float = 2002,
		Prop_UserIpdMeters_Float = 2003,
		Prop_CurrentUniverseId_Uint64 = 2004,
		Prop_PreviousUniverseId_Uint64 = 2005,
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		Prop_IsOnDesktop_Bool = 2007,
		Prop_DisplayMCType_Int32 = 2008,
		Prop_DisplayMCOffset_Float = 2009,
		Prop_DisplayMCScale_Float = 2010,
		Prop_EdidVendorID_Int32 = 2011,
		Prop_DisplayMCImageLeft_String = 2012,
		Prop_DisplayMCImageRight_String = 2013,
		Prop_DisplayGCBlackClamp_Float = 2014,
		Prop_EdidProductID_Int32 = 2015,
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		Prop_DisplayGCType_Int32 = 2017,
		Prop_DisplayGCOffset_Float = 2018,
		Prop_DisplayGCScale_Float = 2019,
		Prop_DisplayGCPrescale_Float = 2020,
		Prop_DisplayGCImage_String = 2021,
		Prop_LensCenterLeftU_Float = 2022,
		Prop_LensCenterLeftV_Float = 2023,
		Prop_LensCenterRightU_Float = 2024,
		Prop_LensCenterRightV_Float = 2025,
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		Prop_CameraFirmwareDescription_String = 2028,
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		Prop_CameraCompatibilityMode_Int32 = 2033,
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		Prop_DisplaySuppressed_Bool = 2036,
		Prop_DisplayAllowNightMode_Bool = 2037,
		Prop_DisplayMCImageWidth_Int32 = 2038,
		Prop_DisplayMCImageHeight_Int32 = 2039,
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		Prop_DisplayMCImageData_Binary = 2041,
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		Prop_DisplayDebugMode_Bool = 2044,
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		Prop_DriverProvidedChaperonePath_String = 2048,
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		Prop_ExpectedControllerCount_Int32 = 2050,
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		Prop_DoNotApplyPrediction_Bool = 2054,
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		Prop_DistortionMeshResolution_Int32 = 2056,
		Prop_DriverIsDrawingControllers_Bool = 2057,
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		Prop_MinimumIpdStepMeters_Float = 2060,
		Prop_AudioBridgeFirmwareVersion_Uint64 = 2061,
		Prop_ImageBridgeFirmwareVersion_Uint64 = 2062,
		Prop_ImuToHeadTransform_Matrix34 = 2063,
		Prop_ImuFactoryGyroBias_Vector3 = 2064,
		Prop_ImuFactoryGyroScale_Vector3 = 2065,
		Prop_ImuFactoryAccelerometerBias_Vector3 = 2066,
		Prop_ImuFactoryAccelerometerScale_Vector3 = 2067,
		Prop_ConfigurationIncludesLighthouse20Features_Bool = 2069,
		Prop_DriverRequestedMuraCorrectionMode_Int32 = 2200,
		Prop_DriverRequestedMuraFeather_InnerLeft_Int32 = 2201,
		Prop_DriverRequestedMuraFeather_InnerRight_Int32 = 2202,
		Prop_DriverRequestedMuraFeather_InnerTop_Int32 = 2203,
		Prop_DriverRequestedMuraFeather_InnerBottom_Int32 = 2204,
		Prop_DriverRequestedMuraFeather_OuterLeft_Int32 = 2205,
		Prop_DriverRequestedMuraFeather_OuterRight_Int32 = 2206,
		Prop_DriverRequestedMuraFeather_OuterTop_Int32 = 2207,
		Prop_DriverRequestedMuraFeather_OuterBottom_Int32 = 2208,
		Prop_AttachedDeviceId_String = 3000,
		Prop_SupportedButtons_Uint64 = 3001,
		Prop_Axis0Type_Int32 = 3002,
		Prop_Axis1Type_Int32 = 3003,
		Prop_Axis2Type_Int32 = 3004,
		Prop_Axis3Type_Int32 = 3005,
		Prop_Axis4Type_Int32 = 3006,
		Prop_ControllerRoleHint_Int32 = 3007,
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		Prop_FieldOfViewRightDegrees_Float = 4001,
		Prop_FieldOfViewTopDegrees_Float = 4002,
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		Prop_ModeLabel_String = 4006,
		Prop_IconPathName_String = 5000,
		Prop_NamedIconPathDeviceOff_String = 5001,
		Prop_NamedIconPathDeviceSearching_String = 5002,
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		Prop_NamedIconPathDeviceReady_String = 5004,
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		Prop_NamedIconPathDeviceStandby_String = 5007,
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		Prop_DisplayHiddenArea_Binary_End = 5150,
		Prop_ParentContainer = 5151,
		Prop_UserConfigPath_String = 6000,
		Prop_InstallPath_String = 6001,
		Prop_HasDisplayComponent_Bool = 6002,
		Prop_HasControllerComponent_Bool = 6003,
		Prop_HasCameraComponent_Bool = 6004,
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		Prop_HasSpatialAnchorsSupport_Bool = 6007,
		Prop_ControllerType_String = 7000,
		Prop_LegacyInputProfile_String = 7001,
		Prop_ControllerHandSelectionPriority_Int32 = 7002,
		Prop_VendorSpecific_Reserved_Start = 10000,
		Prop_VendorSpecific_Reserved_End = 10999,
		Prop_TrackedDeviceProperty_Max = 1000000,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError,Microsoft.MixedReality.Toolkit.Providers.Ope" +
		"nVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		TrackedProp_Success = 0,
		TrackedProp_WrongDataType = 1,
		TrackedProp_WrongDeviceClass = 2,
		TrackedProp_BufferTooSmall = 3,
		TrackedProp_UnknownProperty = 4,
		TrackedProp_InvalidDevice = 5,
		TrackedProp_CouldNotContactServer = 6,
		TrackedProp_ValueNotProvidedByDevice = 7,
		TrackedProp_StringExceedsMaximumLength = 8,
		TrackedProp_NotYetAvailable = 9,
		TrackedProp_PermissionDenied = 10,
		TrackedProp_InvalidOperation = 11,
		TrackedProp_CannotWriteToWildcards = 12,
		TrackedProp_IPCReadFailure = 13,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetBoolTrackedDeviceProperty,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRSystem__GetBoolTrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unDeviceIndex, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR prop, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR pError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetFloatTrackedDeviceProperty,Microsoft.MixedReality.To" +
		"olkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate float IVRSystem__GetFloatTrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unDeviceIndex, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR prop, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR pError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetInt32TrackedDeviceProperty,Microsoft.MixedReality.To" +
		"olkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IVRSystem__GetInt32TrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unDeviceIndex, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR prop, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR pError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetUint64TrackedDeviceProperty,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate ulong IVRSystem__GetUint64TrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unDeviceIndex, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR prop, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR pError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetMatrix34TrackedDeviceProperty,Microsoft.MixedReality" +
		".Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRSystem__GetMatrix34TrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unDeviceIndex, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR prop, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR pError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetArrayTrackedDeviceProperty,Microsoft.MixedReality.To" +
		"olkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRSystem__GetArrayTrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unDeviceIndex, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR prop, 
				uint propType, 
				global::System.IntPtr pBuffer, 
				uint unBufferSize, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR pError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetStringTrackedDeviceProperty,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRSystem__GetStringTrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unDeviceIndex, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR prop, 
				global::System.Text.StringBuilder pchValue, 
				uint unBufferSize, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR pError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetPropErrorNameFromEnum,Microsoft.MixedReality.Toolkit" +
		".Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::System.IntPtr IVRSystem__GetPropErrorNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR error);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Version" +
		"=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public uint eventType;
		public uint trackedDeviceIndex;
		public float eventAgeSeconds;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Data_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__P data;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=48)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Data_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Ve" +
		"rsion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_Data_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Reserved_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR reserved;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Controller_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR controller;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Mouse_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR mouse;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Scroll_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR scroll;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Process_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR process;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Notification_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR notification;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Overlay_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR overlay;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Status_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR status;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Ipd_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR ipd;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Chaperone_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR chaperone;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_PerformanceTest_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR performanceTest;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_TouchPadMove_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR touchPadMove;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_SeatedZeroPoseReset_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR seatedZeroPoseReset;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Screenshot_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR screenshot;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_ScreenshotProgress_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR screenshotProgress;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_ApplicationLaunch_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR applicationLaunch;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_EditingCameraSurface_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR cameraSurface;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_MessageOverlay_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR messageOverlay;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Property_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR property;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_DualAnalog_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR dualAnalog;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_HapticVibration_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR hapticVibration;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_WebConsole_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR webConsole;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_InputBindingLoad_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR inputBinding;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_SpatialAnchor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR spatialAnchor;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_InputActionManifestLoad_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR actionManifest;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_ProgressUpdate_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR progressUpdate;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_ShowUI_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR showUi;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Keyboard_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR keyboard;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Reserved_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR" +
		", Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_Reserved_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public ulong reserved0;
		public ulong reserved1;
		public ulong reserved2;
		public ulong reserved3;
		public ulong reserved4;
		public ulong reserved5;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Controller_t,Microsoft.MixedReality.Toolkit.Providers.Open" +
		"VR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_Controller_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public uint button;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Mouse_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, V" +
		"ersion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_Mouse_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float x;
		public float y;
		public uint button;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Scroll_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, " +
		"Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_Scroll_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float xdelta;
		public float ydelta;
		public uint repeatCount;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Process_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR," +
		" Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_Process_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public uint pid;
		public uint oldPid;
		public bool bForced;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Notification_t,Microsoft.MixedReality.Toolkit.Providers.Op" +
		"enVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_Notification_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public ulong ulUserValue;
		public uint notificationId;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Overlay_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR," +
		" Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_Overlay_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public ulong overlayHandle;
		public ulong devicePath;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Status_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, " +
		"Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_Status_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public uint statusState;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Ipd_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Ver" +
		"sion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_Ipd_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float ipdMeters;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Chaperone_t,Microsoft.MixedReality.Toolkit.Providers.OpenV" +
		"R, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_Chaperone_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public ulong m_nPreviousUniverse;
		public ulong m_nCurrentUniverse;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_PerformanceTest_t,Microsoft.MixedReality.Toolkit.Providers" +
		".OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_PerformanceTest_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public uint m_nFidelityLevel;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_TouchPadMove_t,Microsoft.MixedReality.Toolkit.Providers.Op" +
		"enVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_TouchPadMove_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public bool bFingerDown;
		public float flSecondsFingerDown;
		public float fValueXFirst;
		public float fValueYFirst;
		public float fValueXRaw;
		public float fValueYRaw;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_SeatedZeroPoseReset_t,Microsoft.MixedReality.Toolkit.Provi" +
		"ders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_SeatedZeroPoseReset_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public bool bResetBySystemMenu;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Screenshot_t,Microsoft.MixedReality.Toolkit.Providers.Open" +
		"VR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_Screenshot_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public uint handle;
		public uint type;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_ScreenshotProgress_t,Microsoft.MixedReality.Toolkit.Provid" +
		"ers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_ScreenshotProgress_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float progress;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_ApplicationLaunch_t,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_ApplicationLaunch_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public uint pid;
		public uint unArgsHandle;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_EditingCameraSurface_t,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_EditingCameraSurface_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public ulong overlayHandle;
		public uint nVisualMode;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_MessageOverlay_t,Microsoft.MixedReality.Toolkit.Providers." +
		"OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_MessageOverlay_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public uint unVRMessageOverlayResponse;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Property_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR" +
		", Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_Property_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public ulong container;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR prop;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_DualAnalog_t,Microsoft.MixedReality.Toolkit.Providers.Open" +
		"VR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_DualAnalog_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float x;
		public float y;
		public float transformedX;
		public float transformedY;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDualAnalogWhich__Microsoft_MixedReality_Toolkit_Providers_OpenVR which;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDualAnalogWhich,Microsoft.MixedReality.Toolkit.Providers.OpenVR, " +
		"Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EDualAnalogWhich__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		k_EDualAnalog_Left = 0,
		k_EDualAnalog_Right = 1,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_HapticVibration_t,Microsoft.MixedReality.Toolkit.Providers" +
		".OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_HapticVibration_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public ulong containerHandle;
		public ulong componentHandle;
		public float fDurationSeconds;
		public float fFrequency;
		public float fAmplitude;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_WebConsole_t,Microsoft.MixedReality.Toolkit.Providers.Open" +
		"VR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_WebConsole_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public ulong webConsoleHandle;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_InputBindingLoad_t,Microsoft.MixedReality.Toolkit.Provider" +
		"s.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_InputBindingLoad_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public ulong ulAppContainer;
		public ulong pathMessage;
		public ulong pathUrl;
		public ulong pathControllerType;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_SpatialAnchor_t,Microsoft.MixedReality.Toolkit.Providers.O" +
		"penVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_SpatialAnchor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public uint unHandle;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_InputActionManifestLoad_t,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_InputActionManifestLoad_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public ulong pathAppKey;
		public ulong pathMessage;
		public ulong pathMessageParam;
		public ulong pathManifestPath;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_ProgressUpdate_t,Microsoft.MixedReality.Toolkit.Providers." +
		"OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_ProgressUpdate_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public ulong ulApplicationPropertyContainer;
		public ulong pathDevice;
		public ulong pathInputSource;
		public ulong pathProgressAction;
		public ulong pathIcon;
		public float fProgress;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_ShowUI_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, " +
		"Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_ShowUI_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EShowUIType__Microsoft_MixedReality_Toolkit_Providers_OpenVR eType;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EShowUIType,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Versi" +
		"on=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EShowUIType__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		ShowUI_ControllerBinding = 0,
		ShowUI_ManageTrackers = 1,
		ShowUI_QuickStart = 2,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Keyboard_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR" +
		", Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VREvent_Keyboard_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public byte cNewInput0;
		public byte cNewInput1;
		public byte cNewInput2;
		public byte cNewInput3;
		public byte cNewInput4;
		public byte cNewInput5;
		public byte cNewInput6;
		public byte cNewInput7;
		public ulong uUserValue;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Data_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Ve" +
		"rsion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe class VREvent_Data_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__P
	{
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_PollNextEvent,Microsoft.MixedReality.Toolkit.Providers." +
		"OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRSystem__PollNextEvent__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pEvent, 
				uint uncbVREvent);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_PollNextEventWithPose,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRSystem__PollNextEventWithPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR eOrigin, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pEvent, 
				uint uncbVREvent, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pTrackedDevicePose);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREventType,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Vers" +
		"ion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVREventType__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		VREvent_None = 0,
		VREvent_TrackedDeviceActivated = 100,
		VREvent_TrackedDeviceDeactivated = 101,
		VREvent_TrackedDeviceUpdated = 102,
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		VREvent_IpdChanged = 105,
		VREvent_EnterStandbyMode = 106,
		VREvent_LeaveStandbyMode = 107,
		VREvent_TrackedDeviceRoleChanged = 108,
		VREvent_WatchdogWakeUpRequested = 109,
		VREvent_LensDistortionChanged = 110,
		VREvent_PropertyChanged = 111,
		VREvent_WirelessDisconnect = 112,
		VREvent_WirelessReconnect = 113,
		VREvent_ButtonPress = 200,
		VREvent_ButtonUnpress = 201,
		VREvent_ButtonTouch = 202,
		VREvent_ButtonUntouch = 203,
		VREvent_DualAnalog_Press = 250,
		VREvent_DualAnalog_Unpress = 251,
		VREvent_DualAnalog_Touch = 252,
		VREvent_DualAnalog_Untouch = 253,
		VREvent_DualAnalog_Move = 254,
		VREvent_DualAnalog_ModeSwitch1 = 255,
		VREvent_DualAnalog_ModeSwitch2 = 256,
		VREvent_DualAnalog_Cancel = 257,
		VREvent_MouseMove = 300,
		VREvent_MouseButtonDown = 301,
		VREvent_MouseButtonUp = 302,
		VREvent_FocusEnter = 303,
		VREvent_FocusLeave = 304,
		VREvent_Scroll = 305,
		VREvent_TouchPadMove = 306,
		VREvent_OverlayFocusChanged = 307,
		VREvent_ReloadOverlays = 308,
		VREvent_InputFocusCaptured = 400,
		VREvent_InputFocusReleased = 401,
		VREvent_SceneFocusLost = 402,
		VREvent_SceneFocusGained = 403,
		VREvent_SceneApplicationChanged = 404,
		VREvent_SceneFocusChanged = 405,
		VREvent_InputFocusChanged = 406,
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		VREvent_SceneApplicationUsingWrongGraphicsAdapter = 408,
		VREvent_ActionBindingReloaded = 409,
		VREvent_HideRenderModels = 410,
		VREvent_ShowRenderModels = 411,
		VREvent_ConsoleOpened = 420,
		VREvent_ConsoleClosed = 421,
		VREvent_OverlayShown = 500,
		VREvent_OverlayHidden = 501,
		VREvent_DashboardActivated = 502,
		VREvent_DashboardDeactivated = 503,
		VREvent_DashboardThumbSelected = 504,
		VREvent_DashboardRequested = 505,
		VREvent_ResetDashboard = 506,
		VREvent_RenderToast = 507,
		VREvent_ImageLoaded = 508,
		VREvent_ShowKeyboard = 509,
		VREvent_HideKeyboard = 510,
		VREvent_OverlayGamepadFocusGained = 511,
		VREvent_OverlayGamepadFocusLost = 512,
		VREvent_OverlaySharedTextureChanged = 513,
		VREvent_ScreenshotTriggered = 516,
		VREvent_ImageFailed = 517,
		VREvent_DashboardOverlayCreated = 518,
		VREvent_SwitchGamepadFocus = 519,
		VREvent_RequestScreenshot = 520,
		VREvent_ScreenshotTaken = 521,
		VREvent_ScreenshotFailed = 522,
		VREvent_SubmitScreenshotToDashboard = 523,
		VREvent_ScreenshotProgressToDashboard = 524,
		VREvent_PrimaryDashboardDeviceChanged = 525,
		VREvent_RoomViewShown = 526,
		VREvent_RoomViewHidden = 527,
		VREvent_ShowUI = 528,
		VREvent_Notification_Shown = 600,
		VREvent_Notification_Hidden = 601,
		VREvent_Notification_BeginInteraction = 602,
		VREvent_Notification_Destroyed = 603,
		VREvent_Quit = 700,
		VREvent_ProcessQuit = 701,
		VREvent_QuitAborted_UserPrompt = 702,
		VREvent_QuitAcknowledged = 703,
		VREvent_DriverRequestedQuit = 704,
		VREvent_ChaperoneDataHasChanged = 800,
		VREvent_ChaperoneUniverseHasChanged = 801,
		VREvent_ChaperoneTempDataHasChanged = 802,
		VREvent_ChaperoneSettingsHaveChanged = 803,
		VREvent_SeatedZeroPoseReset = 804,
		VREvent_ChaperoneFlushCache = 805,
		VREvent_AudioSettingsHaveChanged = 820,
		VREvent_BackgroundSettingHasChanged = 850,
		VREvent_CameraSettingsHaveChanged = 851,
		VREvent_ReprojectionSettingHasChanged = 852,
		VREvent_ModelSkinSettingsHaveChanged = 853,
		VREvent_EnvironmentSettingsHaveChanged = 854,
		VREvent_PowerSettingsHaveChanged = 855,
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		VREvent_SteamVRSectionSettingChanged = 857,
		VREvent_LighthouseSectionSettingChanged = 858,
		VREvent_NullSectionSettingChanged = 859,
		VREvent_UserInterfaceSectionSettingChanged = 860,
		VREvent_NotificationsSectionSettingChanged = 861,
		VREvent_KeyboardSectionSettingChanged = 862,
		VREvent_PerfSectionSettingChanged = 863,
		VREvent_DashboardSectionSettingChanged = 864,
		VREvent_WebInterfaceSectionSettingChanged = 865,
		VREvent_TrackersSectionSettingChanged = 866,
		VREvent_LastKnownSectionSettingChanged = 867,
		VREvent_StatusUpdate = 900,
		VREvent_WebInterface_InstallDriverCompleted = 950,
		VREvent_MCImageUpdated = 1000,
		VREvent_FirmwareUpdateStarted = 1100,
		VREvent_FirmwareUpdateFinished = 1101,
		VREvent_KeyboardClosed = 1200,
		VREvent_KeyboardCharInput = 1201,
		VREvent_KeyboardDone = 1202,
		VREvent_ApplicationTransitionStarted = 1300,
		VREvent_ApplicationTransitionAborted = 1301,
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		VREvent_ApplicationListUpdated = 1303,
		VREvent_ApplicationMimeTypeLoad = 1304,
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		VREvent_ProcessConnected = 1306,
		VREvent_ProcessDisconnected = 1307,
		VREvent_Compositor_MirrorWindowShown = 1400,
		VREvent_Compositor_MirrorWindowHidden = 1401,
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		VREvent_TrackedCamera_StartVideoStream = 1500,
		VREvent_TrackedCamera_StopVideoStream = 1501,
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		VREvent_TrackedCamera_EditingSurface = 1550,
		VREvent_PerformanceTest_EnableCapture = 1600,
		VREvent_PerformanceTest_DisableCapture = 1601,
		VREvent_PerformanceTest_FidelityLevel = 1602,
		VREvent_MessageOverlay_Closed = 1650,
		VREvent_MessageOverlayCloseRequested = 1651,
		VREvent_Input_HapticVibration = 1700,
		VREvent_Input_BindingLoadFailed = 1701,
		VREvent_Input_BindingLoadSuccessful = 1702,
		VREvent_Input_ActionManifestReloaded = 1703,
		VREvent_Input_ActionManifestLoadFailed = 1704,
		VREvent_Input_ProgressUpdate = 1705,
		VREvent_Input_TrackerActivated = 1706,
		VREvent_SpatialAnchors_PoseUpdated = 1800,
		VREvent_SpatialAnchors_DescriptorUpdated = 1801,
		VREvent_SpatialAnchors_RequestPoseUpdate = 1802,
		VREvent_SpatialAnchors_RequestDescriptorUpdate = 1803,
		VREvent_VendorSpecific_Reserved_Start = 10000,
		VREvent_VendorSpecific_Reserved_End = 19999,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetEventTypeNameFromEnum,Microsoft.MixedReality.Toolkit" +
		".Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::System.IntPtr IVRSystem__GetEventTypeNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREventType__Microsoft_MixedReality_Toolkit_Providers_OpenVR eType);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.HiddenAreaMesh_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, " +
		"Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct HiddenAreaMesh_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::System.IntPtr pVertexData;
		public uint unTriangleCount;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EHiddenAreaMeshType,Microsoft.MixedReality.Toolkit.Providers.OpenV" +
		"R, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EHiddenAreaMeshType__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		k_eHiddenAreaMesh_Standard = 0,
		k_eHiddenAreaMesh_Inverse = 1,
		k_eHiddenAreaMesh_LineLoop = 2,
		k_eHiddenAreaMesh_Max = 3,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetHiddenAreaMesh,Microsoft.MixedReality.Toolkit.Provid" +
		"ers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HiddenAreaMesh_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRSystem__GetHiddenAreaMesh__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR eEye, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EHiddenAreaMeshType__Microsoft_MixedReality_Toolkit_Providers_OpenVR type);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRControllerState_t,Microsoft.MixedReality.Toolkit.Providers.OpenV" +
		"R, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VRControllerState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public uint unPacketNum;
		public ulong ulButtonPressed;
		public ulong ulButtonTouched;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRControllerAxis_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR rAxis0;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRControllerAxis_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR rAxis1;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRControllerAxis_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR rAxis2;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRControllerAxis_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR rAxis3;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRControllerAxis_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR rAxis4;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRControllerAxis_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR" +
		", Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VRControllerAxis_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float x;
		public float y;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetControllerState,Microsoft.MixedReality.Toolkit.Provi" +
		"ders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRSystem__GetControllerState__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unControllerDeviceIndex, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRControllerState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pControllerState, 
				uint unControllerStateSize);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetControllerStateWithPose,Microsoft.MixedReality.Toolk" +
		"it.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRSystem__GetControllerStateWithPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR eOrigin, 
				uint unControllerDeviceIndex, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRControllerState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pControllerState, 
				uint unControllerStateSize, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pTrackedDevicePose);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_TriggerHapticPulse,Microsoft.MixedReality.Toolkit.Provi" +
		"ders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSystem__TriggerHapticPulse__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unControllerDeviceIndex, 
				uint unAxisId, 
				ushort usDurationMicroSec);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRButtonId,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Versi" +
		"on=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRButtonId__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		k_EButton_System = 0,
		k_EButton_ApplicationMenu = 1,
		k_EButton_Knuckles_B = 1,
		k_EButton_Grip = 2,
		k_EButton_Dashboard_Back = 2,
		k_EButton_Knuckles_A = 2,
		k_EButton_DPad_Left = 3,
		k_EButton_DPad_Up = 4,
		k_EButton_DPad_Right = 5,
		k_EButton_DPad_Down = 6,
		k_EButton_A = 7,
		k_EButton_ProximitySensor = 31,
		k_EButton_Axis0 = 32,
		k_EButton_SteamVR_Touchpad = 32,
		k_EButton_Axis1 = 33,
		k_EButton_SteamVR_Trigger = 33,
		k_EButton_Axis2 = 34,
		k_EButton_Axis3 = 35,
		k_EButton_Knuckles_JoyStick = 35,
		k_EButton_Axis4 = 36,
		k_EButton_Max = 64,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetButtonIdNameFromEnum,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::System.IntPtr IVRSystem__GetButtonIdNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRButtonId__Microsoft_MixedReality_Toolkit_Providers_OpenVR eButtonId);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRControllerAxisType,Microsoft.MixedReality.Toolkit.Providers.Ope" +
		"nVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRControllerAxisType__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		k_eControllerAxis_None = 0,
		k_eControllerAxis_TrackPad = 1,
		k_eControllerAxis_Joystick = 2,
		k_eControllerAxis_Trigger = 3,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_GetControllerAxisTypeNameFromEnum,Microsoft.MixedRealit" +
		"y.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::System.IntPtr IVRSystem__GetControllerAxisTypeNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRControllerAxisType__Microsoft_MixedReality_Toolkit_Providers_OpenVR eAxisType);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_IsInputAvailable,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRSystem__IsInputAvailable__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_IsSteamVRDrawingControllers,Microsoft.MixedReality.Tool" +
		"kit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRSystem__IsSteamVRDrawingControllers__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_ShouldApplicationPause,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRSystem__ShouldApplicationPause__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_ShouldApplicationReduceRenderingWork,Microsoft.MixedRea" +
		"lity.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRSystem__ShouldApplicationReduceRenderingWork__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_DriverDebugRequest,Microsoft.MixedReality.Toolkit.Provi" +
		"ders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRSystem__DriverDebugRequest__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unDeviceIndex, 
				string pchRequest, 
				global::System.Text.StringBuilder pchResponseBuffer, 
				uint unResponseBufferSize);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRFirmwareError,Microsoft.MixedReality.Toolkit.Providers.OpenVR, " +
		"Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRFirmwareError__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		None = 0,
		Success = 1,
		Fail = 2,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_PerformFirmwareUpdate,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRFirmwareError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRSystem__PerformFirmwareUpdate__Microsoft_MixedReality_Toolkit_Providers_OpenVR(uint unDeviceIndex);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_AcknowledgeQuit_Exiting,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSystem__AcknowledgeQuit_Exiting__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem+_AcknowledgeQuit_UserPrompt,Microsoft.MixedReality.Toolk" +
		"it.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSystem__AcknowledgeQuit_UserPrompt__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRExtendedDisplay,Microsoft.MixedReality.Toolkit.Providers.OpenVR" +
		", Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVRExtendedDisplay__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRExtendedDisplay__GetWindowBounds__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetWindowBounds;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRExtendedDisplay__GetEyeOutputViewport__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetEyeOutputViewport;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRExtendedDisplay__GetDXGIOutputInfo__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetDXGIOutputInfo;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRExtendedDisplay+_GetWindowBounds,Microsoft.MixedReality.Toolkit" +
		".Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRExtendedDisplay__GetWindowBounds__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ref int pnX, 
				ref int pnY, 
				ref uint pnWidth, 
				ref uint pnHeight);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRExtendedDisplay+_GetEyeOutputViewport,Microsoft.MixedReality.To" +
		"olkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRExtendedDisplay__GetEyeOutputViewport__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR eEye, 
				ref uint pnX, 
				ref uint pnY, 
				ref uint pnWidth, 
				ref uint pnHeight);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRExtendedDisplay+_GetDXGIOutputInfo,Microsoft.MixedReality.Toolk" +
		"it.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRExtendedDisplay__GetDXGIOutputInfo__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ref int pnAdapterIndex, 
				ref int pnAdapterOutputIndex);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera,Microsoft.MixedReality.Toolkit.Providers.OpenVR, " +
		"Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVRTrackedCamera__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera__GetCameraErrorNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetCameraErrorNameFromEnum;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera__HasCamera__Microsoft_MixedReality_Toolkit_Providers_OpenVR HasCamera;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera__GetCameraFrameSize__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetCameraFrameSize;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera__GetCameraIntrinsics__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetCameraIntrinsics;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera__GetCameraProjection__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetCameraProjection;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera__AcquireVideoStreamingService__Microsoft_MixedReality_Toolkit_Providers_OpenVR AcquireVideoStreamingService;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera__ReleaseVideoStreamingService__Microsoft_MixedReality_Toolkit_Providers_OpenVR ReleaseVideoStreamingService;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera__GetVideoStreamFrameBuffer__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetVideoStreamFrameBuffer;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera__GetVideoStreamTextureSize__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetVideoStreamTextureSize;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera__GetVideoStreamTextureD3D11__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetVideoStreamTextureD3D11;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera__GetVideoStreamTextureGL__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetVideoStreamTextureGL;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera__ReleaseVideoStreamTextureGL__Microsoft_MixedReality_Toolkit_Providers_OpenVR ReleaseVideoStreamTextureGL;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError,Microsoft.MixedReality.Toolkit.Providers.Ope" +
		"nVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		None = 0,
		OperationFailed = 100,
		InvalidHandle = 101,
		InvalidFrameHeaderVersion = 102,
		OutOfHandles = 103,
		IPCFailure = 104,
		NotSupportedForThisDevice = 105,
		SharedMemoryFailure = 106,
		FrameBufferingFailure = 107,
		StreamSetupFailure = 108,
		InvalidGLTextureId = 109,
		InvalidSharedTextureHandle = 110,
		FailedToGetGLTextureId = 111,
		SharedTextureFailure = 112,
		NoFrameAvailable = 113,
		InvalidArgument = 114,
		InvalidFrameBufferSize = 115,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera+_GetCameraErrorNameFromEnum,Microsoft.MixedRealit" +
		"y.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::System.IntPtr IVRTrackedCamera__GetCameraErrorNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR eCameraError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera+_HasCamera,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRTrackedCamera__HasCamera__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint nDeviceIndex, 
				ref bool pHasCamera);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType,Microsoft.MixedReality.Toolkit.Providers" +
		".OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Distorted = 0,
		Undistorted = 1,
		MaximumUndistorted = 2,
		MAX_CAMERA_FRAME_TYPES = 3,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera+_GetCameraFrameSize,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRTrackedCamera__GetCameraFrameSize__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint nDeviceIndex, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR eFrameType, 
				ref uint pnWidth, 
				ref uint pnHeight, 
				ref uint pnFrameBufferSize);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Vers" +
		"ion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float v0;
		public float v1;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera+_GetCameraIntrinsics,Microsoft.MixedReality.Toolk" +
		"it.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRTrackedCamera__GetCameraIntrinsics__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint nDeviceIndex, 
				uint nCameraIndex, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR eFrameType, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pFocalLength, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pCenter);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera+_GetCameraProjection,Microsoft.MixedReality.Toolk" +
		"it.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRTrackedCamera__GetCameraProjection__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint nDeviceIndex, 
				uint nCameraIndex, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR eFrameType, 
				float flZNear, 
				float flZFar, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix44_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pProjection);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera+_AcquireVideoStreamingService,Microsoft.MixedReal" +
		"ity.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRTrackedCamera__AcquireVideoStreamingService__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint nDeviceIndex, 
				ref ulong pHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera+_ReleaseVideoStreamingService,Microsoft.MixedReal" +
		"ity.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRTrackedCamera__ReleaseVideoStreamingService__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ulong hTrackedCamera);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.CameraVideoStreamFrameHeader_t,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct CameraVideoStreamFrameHeader_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR eFrameType;
		public uint nWidth;
		public uint nHeight;
		public uint nBytesPerPixel;
		public uint nFrameSequence;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR standingTrackedDevicePose;
		public ulong ulFrameExposureTime;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera+_GetVideoStreamFrameBuffer,Microsoft.MixedReality" +
		".Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRTrackedCamera__GetVideoStreamFrameBuffer__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong hTrackedCamera, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR eFrameType, 
				global::System.IntPtr pFrameBuffer, 
				uint nFrameBufferSize, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.CameraVideoStreamFrameHeader_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pFrameHeader, 
				uint nFrameHeaderSize);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRTextureBounds_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR," +
		" Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VRTextureBounds_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float uMin;
		public float vMin;
		public float uMax;
		public float vMax;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera+_GetVideoStreamTextureSize,Microsoft.MixedReality" +
		".Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRTrackedCamera__GetVideoStreamTextureSize__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint nDeviceIndex, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR eFrameType, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRTextureBounds_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pTextureBounds, 
				ref uint pnWidth, 
				ref uint pnHeight);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera+_GetVideoStreamTextureD3D11,Microsoft.MixedRealit" +
		"y.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRTrackedCamera__GetVideoStreamTextureD3D11__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong hTrackedCamera, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR eFrameType, 
				global::System.IntPtr pD3D11DeviceOrResource, 
				ref global::System.IntPtr ppD3D11ShaderResourceView, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.CameraVideoStreamFrameHeader_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pFrameHeader, 
				uint nFrameHeaderSize);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera+_GetVideoStreamTextureGL,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRTrackedCamera__GetVideoStreamTextureGL__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong hTrackedCamera, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR eFrameType, 
				ref uint pglTextureId, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.CameraVideoStreamFrameHeader_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pFrameHeader, 
				uint nFrameHeaderSize);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera+_ReleaseVideoStreamTextureGL,Microsoft.MixedReali" +
		"ty.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRTrackedCamera__ReleaseVideoStreamTextureGL__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong hTrackedCamera, 
				uint glTextureId);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications,Microsoft.MixedReality.Toolkit.Providers.OpenVR, V" +
		"ersion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVRApplications__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__AddApplicationManifest__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddApplicationManifest;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__RemoveApplicationManifest__Microsoft_MixedReality_Toolkit_Providers_OpenVR RemoveApplicationManifest;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__IsApplicationInstalled__Microsoft_MixedReality_Toolkit_Providers_OpenVR IsApplicationInstalled;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetApplicationCount__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetApplicationCount;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetApplicationKeyByIndex__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetApplicationKeyByIndex;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetApplicationKeyByProcessId__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetApplicationKeyByProcessId;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__LaunchApplication__Microsoft_MixedReality_Toolkit_Providers_OpenVR LaunchApplication;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__LaunchTemplateApplication__Microsoft_MixedReality_Toolkit_Providers_OpenVR LaunchTemplateApplication;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__LaunchApplicationFromMimeType__Microsoft_MixedReality_Toolkit_Providers_OpenVR LaunchApplicationFromMimeType;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__LaunchDashboardOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR LaunchDashboardOverlay;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__CancelApplicationLaunch__Microsoft_MixedReality_Toolkit_Providers_OpenVR CancelApplicationLaunch;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__IdentifyApplication__Microsoft_MixedReality_Toolkit_Providers_OpenVR IdentifyApplication;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetApplicationProcessId__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetApplicationProcessId;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetApplicationsErrorNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetApplicationsErrorNameFromEnum;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetApplicationPropertyString__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetApplicationPropertyString;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetApplicationPropertyBool__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetApplicationPropertyBool;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetApplicationPropertyUint64__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetApplicationPropertyUint64;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__SetApplicationAutoLaunch__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetApplicationAutoLaunch;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetApplicationAutoLaunch__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetApplicationAutoLaunch;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__SetDefaultApplicationForMimeType__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetDefaultApplicationForMimeType;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetDefaultApplicationForMimeType__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetDefaultApplicationForMimeType;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetApplicationSupportedMimeTypes__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetApplicationSupportedMimeTypes;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetApplicationsThatSupportMimeType__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetApplicationsThatSupportMimeType;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetApplicationLaunchArguments__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetApplicationLaunchArguments;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetStartingApplication__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetStartingApplication;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetTransitionState__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetTransitionState;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__PerformApplicationPrelaunchCheck__Microsoft_MixedReality_Toolkit_Providers_OpenVR PerformApplicationPrelaunchCheck;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetApplicationsTransitionStateNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetApplicationsTransitionStateNameFromEnum;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__IsQuitUserPromptRequested__Microsoft_MixedReality_Toolkit_Providers_OpenVR IsQuitUserPromptRequested;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__LaunchInternalProcess__Microsoft_MixedReality_Toolkit_Providers_OpenVR LaunchInternalProcess;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__GetCurrentSceneProcessId__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetCurrentSceneProcessId;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError,Microsoft.MixedReality.Toolkit.Providers.OpenV" +
		"R, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		None = 0,
		AppKeyAlreadyExists = 100,
		NoManifest = 101,
		NoApplication = 102,
		InvalidIndex = 103,
		UnknownApplication = 104,
		IPCFailed = 105,
		ApplicationAlreadyRunning = 106,
		InvalidManifest = 107,
		InvalidApplication = 108,
		LaunchFailed = 109,
		ApplicationAlreadyStarting = 110,
		LaunchInProgress = 111,
		OldApplicationQuitting = 112,
		TransitionAborted = 113,
		IsTemplate = 114,
		SteamVRIsExiting = 115,
		BufferTooSmall = 200,
		PropertyNotSet = 201,
		UnknownProperty = 202,
		InvalidParameter = 203,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_AddApplicationManifest,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRApplications__AddApplicationManifest__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchApplicationManifestFullPath, 
				bool bTemporary);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_RemoveApplicationManifest,Microsoft.MixedReality." +
		"Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRApplications__RemoveApplicationManifest__Microsoft_MixedReality_Toolkit_Providers_OpenVR(string pchApplicationManifestFullPath);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_IsApplicationInstalled,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRApplications__IsApplicationInstalled__Microsoft_MixedReality_Toolkit_Providers_OpenVR(string pchAppKey);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetApplicationCount,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRApplications__GetApplicationCount__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetApplicationKeyByIndex,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRApplications__GetApplicationKeyByIndex__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unApplicationIndex, 
				global::System.Text.StringBuilder pchAppKeyBuffer, 
				uint unAppKeyBufferLen);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetApplicationKeyByProcessId,Microsoft.MixedReali" +
		"ty.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRApplications__GetApplicationKeyByProcessId__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unProcessId, 
				global::System.Text.StringBuilder pchAppKeyBuffer, 
				uint unAppKeyBufferLen);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_LaunchApplication,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRApplications__LaunchApplication__Microsoft_MixedReality_Toolkit_Providers_OpenVR(string pchAppKey);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.AppOverrideKeys_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR," +
		" Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct AppOverrideKeys_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::System.IntPtr pchKey;
		public global::System.IntPtr pchValue;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_LaunchTemplateApplication,Microsoft.MixedReality." +
		"Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRApplications__LaunchTemplateApplication__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchTemplateAppKey, 
				string pchNewAppKey, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.AppOverrideKeys_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pKeys, 
				uint unKeys);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_LaunchApplicationFromMimeType,Microsoft.MixedReal" +
		"ity.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRApplications__LaunchApplicationFromMimeType__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchMimeType, 
				string pchArgs);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_LaunchDashboardOverlay,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRApplications__LaunchDashboardOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR(string pchAppKey);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_CancelApplicationLaunch,Microsoft.MixedReality.To" +
		"olkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRApplications__CancelApplicationLaunch__Microsoft_MixedReality_Toolkit_Providers_OpenVR(string pchAppKey);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_IdentifyApplication,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRApplications__IdentifyApplication__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unProcessId, 
				string pchAppKey);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetApplicationProcessId,Microsoft.MixedReality.To" +
		"olkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRApplications__GetApplicationProcessId__Microsoft_MixedReality_Toolkit_Providers_OpenVR(string pchAppKey);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetApplicationsErrorNameFromEnum,Microsoft.MixedR" +
		"eality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::System.IntPtr IVRApplications__GetApplicationsErrorNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR error);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationProperty,Microsoft.MixedReality.Toolkit.Providers.Op" +
		"enVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRApplicationProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Name_String = 0,
		LaunchType_String = 11,
		WorkingDirectory_String = 12,
		BinaryPath_String = 13,
		Arguments_String = 14,
		URL_String = 15,
		Description_String = 50,
		NewsURL_String = 51,
		ImagePath_String = 52,
		Source_String = 53,
		ActionManifestURL_String = 54,
		IsDashboardOverlay_Bool = 60,
		IsTemplate_Bool = 61,
		IsInstanced_Bool = 62,
		IsInternal_Bool = 63,
		WantsCompositorPauseInStandby_Bool = 64,
		LastLaunchTime_Uint64 = 70,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetApplicationPropertyString,Microsoft.MixedReali" +
		"ty.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRApplications__GetApplicationPropertyString__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchAppKey, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR eProperty, 
				global::System.Text.StringBuilder pchPropertyValueBuffer, 
				uint unPropertyValueBufferLen, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR peError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetApplicationPropertyBool,Microsoft.MixedReality" +
		".Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRApplications__GetApplicationPropertyBool__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchAppKey, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR eProperty, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR peError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetApplicationPropertyUint64,Microsoft.MixedReali" +
		"ty.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate ulong IVRApplications__GetApplicationPropertyUint64__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchAppKey, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR eProperty, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR peError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_SetApplicationAutoLaunch,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRApplications__SetApplicationAutoLaunch__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchAppKey, 
				bool bAutoLaunch);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetApplicationAutoLaunch,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRApplications__GetApplicationAutoLaunch__Microsoft_MixedReality_Toolkit_Providers_OpenVR(string pchAppKey);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_SetDefaultApplicationForMimeType,Microsoft.MixedR" +
		"eality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRApplications__SetDefaultApplicationForMimeType__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchAppKey, 
				string pchMimeType);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetDefaultApplicationForMimeType,Microsoft.MixedR" +
		"eality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRApplications__GetDefaultApplicationForMimeType__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchMimeType, 
				global::System.Text.StringBuilder pchAppKeyBuffer, 
				uint unAppKeyBufferLen);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetApplicationSupportedMimeTypes,Microsoft.MixedR" +
		"eality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRApplications__GetApplicationSupportedMimeTypes__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchAppKey, 
				global::System.Text.StringBuilder pchMimeTypesBuffer, 
				uint unMimeTypesBuffer);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetApplicationsThatSupportMimeType,Microsoft.Mixe" +
		"dReality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRApplications__GetApplicationsThatSupportMimeType__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchMimeType, 
				global::System.Text.StringBuilder pchAppKeysThatSupportBuffer, 
				uint unAppKeysThatSupportBuffer);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetApplicationLaunchArguments,Microsoft.MixedReal" +
		"ity.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRApplications__GetApplicationLaunchArguments__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unHandle, 
				global::System.Text.StringBuilder pchArgs, 
				uint unArgs);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetStartingApplication,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRApplications__GetStartingApplication__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::System.Text.StringBuilder pchAppKeyBuffer, 
				uint unAppKeyBufferLen);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationTransitionState,Microsoft.MixedReality.Toolkit.Provi" +
		"ders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRApplicationTransitionState__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		VRApplicationTransition_None = 0,
		VRApplicationTransition_OldAppQuitSent = 10,
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		VRApplicationTransition_NewAppLaunched = 20,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetTransitionState,Microsoft.MixedReality.Toolkit" +
		".Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationTransitionState__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRApplications__GetTransitionState__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_PerformApplicationPrelaunchCheck,Microsoft.MixedR" +
		"eality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRApplications__PerformApplicationPrelaunchCheck__Microsoft_MixedReality_Toolkit_Providers_OpenVR(string pchAppKey);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetApplicationsTransitionStateNameFromEnum,Micros" +
		"oft.MixedReality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::System.IntPtr IVRApplications__GetApplicationsTransitionStateNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationTransitionState__Microsoft_MixedReality_Toolkit_Providers_OpenVR state);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_IsQuitUserPromptRequested,Microsoft.MixedReality." +
		"Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRApplications__IsQuitUserPromptRequested__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_LaunchInternalProcess,Microsoft.MixedReality.Tool" +
		"kit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRApplications__LaunchInternalProcess__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchBinaryPath, 
				string pchArguments, 
				string pchWorkingDirectory);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications+_GetCurrentSceneProcessId,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRApplications__GetCurrentSceneProcessId__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Vers" +
		"ion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVRChaperone__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone__GetCalibrationState__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetCalibrationState;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone__GetPlayAreaSize__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetPlayAreaSize;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone__GetPlayAreaRect__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetPlayAreaRect;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone__ReloadInfo__Microsoft_MixedReality_Toolkit_Providers_OpenVR ReloadInfo;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone__SetSceneColor__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetSceneColor;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone__GetBoundsColor__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetBoundsColor;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone__AreBoundsVisible__Microsoft_MixedReality_Toolkit_Providers_OpenVR AreBoundsVisible;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone__ForceBoundsVisible__Microsoft_MixedReality_Toolkit_Providers_OpenVR ForceBoundsVisible;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.ChaperoneCalibrationState,Microsoft.MixedReality.Toolkit.Providers" +
		".OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum ChaperoneCalibrationState__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		OK = 1,
		Warning = 100,
		Warning_BaseStationMayHaveMoved = 101,
		Warning_BaseStationRemoved = 102,
		Warning_SeatedBoundsInvalid = 103,
		Error = 200,
		Error_BaseStationUninitialized = 201,
		Error_BaseStationConflict = 202,
		Error_PlayAreaInvalid = 203,
		Error_CollisionBoundsInvalid = 204,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone+_GetCalibrationState,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ChaperoneCalibrationState__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRChaperone__GetCalibrationState__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone+_GetPlayAreaSize,Microsoft.MixedReality.Toolkit.Provi" +
		"ders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRChaperone__GetPlayAreaSize__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ref float pSizeX, 
				ref float pSizeZ);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdQuad_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Version" +
		"=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct HmdQuad_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector3_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR vCorners0;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector3_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR vCorners1;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector3_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR vCorners2;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector3_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR vCorners3;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone+_GetPlayAreaRect,Microsoft.MixedReality.Toolkit.Provi" +
		"ders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRChaperone__GetPlayAreaRect__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdQuad_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR rect);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone+_ReloadInfo,Microsoft.MixedReality.Toolkit.Providers." +
		"OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRChaperone__ReloadInfo__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Versio" +
		"n=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float r;
		public float g;
		public float b;
		public float a;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone+_SetSceneColor,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRChaperone__SetSceneColor__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR color);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone+_GetBoundsColor,Microsoft.MixedReality.Toolkit.Provid" +
		"ers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRChaperone__GetBoundsColor__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pOutputColorArray, 
				int nNumOutputColors, 
				float flCollisionBoundsFadeDistance, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pOutputCameraColor);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone+_AreBoundsVisible,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRChaperone__AreBoundsVisible__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone+_ForceBoundsVisible,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRChaperone__ForceBoundsVisible__Microsoft_MixedReality_Toolkit_Providers_OpenVR(bool bForce);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup,Microsoft.MixedReality.Toolkit.Providers.OpenVR," +
		" Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVRChaperoneSetup__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__CommitWorkingCopy__Microsoft_MixedReality_Toolkit_Providers_OpenVR CommitWorkingCopy;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__RevertWorkingCopy__Microsoft_MixedReality_Toolkit_Providers_OpenVR RevertWorkingCopy;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__GetWorkingPlayAreaSize__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetWorkingPlayAreaSize;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__GetWorkingPlayAreaRect__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetWorkingPlayAreaRect;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__GetWorkingCollisionBoundsInfo__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetWorkingCollisionBoundsInfo;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__GetLiveCollisionBoundsInfo__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetLiveCollisionBoundsInfo;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__GetWorkingSeatedZeroPoseToRawTrackingPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetWorkingSeatedZeroPoseToRawTrackingPose;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__GetWorkingStandingZeroPoseToRawTrackingPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetWorkingStandingZeroPoseToRawTrackingPose;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__SetWorkingPlayAreaSize__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetWorkingPlayAreaSize;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__SetWorkingCollisionBoundsInfo__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetWorkingCollisionBoundsInfo;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__SetWorkingPerimeter__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetWorkingPerimeter;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__SetWorkingSeatedZeroPoseToRawTrackingPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetWorkingSeatedZeroPoseToRawTrackingPose;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__SetWorkingStandingZeroPoseToRawTrackingPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetWorkingStandingZeroPoseToRawTrackingPose;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__ReloadFromDisk__Microsoft_MixedReality_Toolkit_Providers_OpenVR ReloadFromDisk;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__GetLiveSeatedZeroPoseToRawTrackingPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetLiveSeatedZeroPoseToRawTrackingPose;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__ExportLiveToBuffer__Microsoft_MixedReality_Toolkit_Providers_OpenVR ExportLiveToBuffer;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__ImportFromBufferToWorking__Microsoft_MixedReality_Toolkit_Providers_OpenVR ImportFromBufferToWorking;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__ShowWorkingSetPreview__Microsoft_MixedReality_Toolkit_Providers_OpenVR ShowWorkingSetPreview;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__HideWorkingSetPreview__Microsoft_MixedReality_Toolkit_Providers_OpenVR HideWorkingSetPreview;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EChaperoneConfigFile,Microsoft.MixedReality.Toolkit.Providers.Open" +
		"VR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EChaperoneConfigFile__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Live = 1,
		Temp = 2,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_CommitWorkingCopy,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRChaperoneSetup__CommitWorkingCopy__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EChaperoneConfigFile__Microsoft_MixedReality_Toolkit_Providers_OpenVR configFile);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_RevertWorkingCopy,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRChaperoneSetup__RevertWorkingCopy__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_GetWorkingPlayAreaSize,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRChaperoneSetup__GetWorkingPlayAreaSize__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ref float pSizeX, 
				ref float pSizeZ);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_GetWorkingPlayAreaRect,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRChaperoneSetup__GetWorkingPlayAreaRect__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdQuad_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR rect);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_GetWorkingCollisionBoundsInfo,Microsoft.MixedRe" +
		"ality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRChaperoneSetup__GetWorkingCollisionBoundsInfo__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdQuad_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pQuadsBuffer, 
				ref uint punQuadsCount);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_GetLiveCollisionBoundsInfo,Microsoft.MixedReali" +
		"ty.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRChaperoneSetup__GetLiveCollisionBoundsInfo__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdQuad_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pQuadsBuffer, 
				ref uint punQuadsCount);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_GetWorkingSeatedZeroPoseToRawTrackingPose,Micro" +
		"soft.MixedReality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRChaperoneSetup__GetWorkingSeatedZeroPoseToRawTrackingPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pmatSeatedZeroPoseToRawTrackingPose);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_GetWorkingStandingZeroPoseToRawTrackingPose,Mic" +
		"rosoft.MixedReality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRChaperoneSetup__GetWorkingStandingZeroPoseToRawTrackingPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pmatStandingZeroPoseToRawTrackingPose);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_SetWorkingPlayAreaSize,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRChaperoneSetup__SetWorkingPlayAreaSize__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				float sizeX, 
				float sizeZ);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_SetWorkingCollisionBoundsInfo,Microsoft.MixedRe" +
		"ality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRChaperoneSetup__SetWorkingCollisionBoundsInfo__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdQuad_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pQuadsBuffer, 
				uint unQuadsCount);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_SetWorkingPerimeter,Microsoft.MixedReality.Tool" +
		"kit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRChaperoneSetup__SetWorkingPerimeter__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pPointBuffer, 
				uint unPointCount);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_SetWorkingSeatedZeroPoseToRawTrackingPose,Micro" +
		"soft.MixedReality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRChaperoneSetup__SetWorkingSeatedZeroPoseToRawTrackingPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pMatSeatedZeroPoseToRawTrackingPose);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_SetWorkingStandingZeroPoseToRawTrackingPose,Mic" +
		"rosoft.MixedReality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRChaperoneSetup__SetWorkingStandingZeroPoseToRawTrackingPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pMatStandingZeroPoseToRawTrackingPose);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_ReloadFromDisk,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRChaperoneSetup__ReloadFromDisk__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EChaperoneConfigFile__Microsoft_MixedReality_Toolkit_Providers_OpenVR configFile);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_GetLiveSeatedZeroPoseToRawTrackingPose,Microsof" +
		"t.MixedReality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRChaperoneSetup__GetLiveSeatedZeroPoseToRawTrackingPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pmatSeatedZeroPoseToRawTrackingPose);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_ExportLiveToBuffer,Microsoft.MixedReality.Toolk" +
		"it.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRChaperoneSetup__ExportLiveToBuffer__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::System.Text.StringBuilder pBuffer, 
				ref uint pnBufferLength);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_ImportFromBufferToWorking,Microsoft.MixedRealit" +
		"y.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRChaperoneSetup__ImportFromBufferToWorking__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pBuffer, 
				uint nImportFlags);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_ShowWorkingSetPreview,Microsoft.MixedReality.To" +
		"olkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRChaperoneSetup__ShowWorkingSetPreview__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup+_HideWorkingSetPreview,Microsoft.MixedReality.To" +
		"olkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRChaperoneSetup__HideWorkingSetPreview__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Ver" +
		"sion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVRCompositor__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__SetTrackingSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetTrackingSpace;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__GetTrackingSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetTrackingSpace;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__WaitGetPoses__Microsoft_MixedReality_Toolkit_Providers_OpenVR WaitGetPoses;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__GetLastPoses__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetLastPoses;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__GetLastPoseForTrackedDeviceIndex__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetLastPoseForTrackedDeviceIndex;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__Submit__Microsoft_MixedReality_Toolkit_Providers_OpenVR Submit;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__ClearLastSubmittedFrame__Microsoft_MixedReality_Toolkit_Providers_OpenVR ClearLastSubmittedFrame;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__PostPresentHandoff__Microsoft_MixedReality_Toolkit_Providers_OpenVR PostPresentHandoff;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__GetFrameTiming__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetFrameTiming;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__GetFrameTimings__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetFrameTimings;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__GetFrameTimeRemaining__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetFrameTimeRemaining;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__GetCumulativeStats__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetCumulativeStats;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__FadeToColor__Microsoft_MixedReality_Toolkit_Providers_OpenVR FadeToColor;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__GetCurrentFadeColor__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetCurrentFadeColor;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__FadeGrid__Microsoft_MixedReality_Toolkit_Providers_OpenVR FadeGrid;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__GetCurrentGridAlpha__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetCurrentGridAlpha;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__SetSkyboxOverride__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetSkyboxOverride;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__ClearSkyboxOverride__Microsoft_MixedReality_Toolkit_Providers_OpenVR ClearSkyboxOverride;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__CompositorBringToFront__Microsoft_MixedReality_Toolkit_Providers_OpenVR CompositorBringToFront;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__CompositorGoToBack__Microsoft_MixedReality_Toolkit_Providers_OpenVR CompositorGoToBack;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__CompositorQuit__Microsoft_MixedReality_Toolkit_Providers_OpenVR CompositorQuit;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__IsFullscreen__Microsoft_MixedReality_Toolkit_Providers_OpenVR IsFullscreen;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__GetCurrentSceneFocusProcess__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetCurrentSceneFocusProcess;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__GetLastFrameRenderer__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetLastFrameRenderer;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__CanRenderScene__Microsoft_MixedReality_Toolkit_Providers_OpenVR CanRenderScene;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__ShowMirrorWindow__Microsoft_MixedReality_Toolkit_Providers_OpenVR ShowMirrorWindow;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__HideMirrorWindow__Microsoft_MixedReality_Toolkit_Providers_OpenVR HideMirrorWindow;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__IsMirrorWindowVisible__Microsoft_MixedReality_Toolkit_Providers_OpenVR IsMirrorWindowVisible;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__CompositorDumpImages__Microsoft_MixedReality_Toolkit_Providers_OpenVR CompositorDumpImages;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__ShouldAppRenderWithLowResources__Microsoft_MixedReality_Toolkit_Providers_OpenVR ShouldAppRenderWithLowResources;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__ForceInterleavedReprojectionOn__Microsoft_MixedReality_Toolkit_Providers_OpenVR ForceInterleavedReprojectionOn;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__ForceReconnectProcess__Microsoft_MixedReality_Toolkit_Providers_OpenVR ForceReconnectProcess;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__SuspendRendering__Microsoft_MixedReality_Toolkit_Providers_OpenVR SuspendRendering;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__GetMirrorTextureD3D11__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetMirrorTextureD3D11;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__ReleaseMirrorTextureD3D11__Microsoft_MixedReality_Toolkit_Providers_OpenVR ReleaseMirrorTextureD3D11;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__GetMirrorTextureGL__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetMirrorTextureGL;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__ReleaseSharedGLTexture__Microsoft_MixedReality_Toolkit_Providers_OpenVR ReleaseSharedGLTexture;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__LockGLSharedTextureForAccess__Microsoft_MixedReality_Toolkit_Providers_OpenVR LockGLSharedTextureForAccess;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__UnlockGLSharedTextureForAccess__Microsoft_MixedReality_Toolkit_Providers_OpenVR UnlockGLSharedTextureForAccess;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__GetVulkanInstanceExtensionsRequired__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetVulkanInstanceExtensionsRequired;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__GetVulkanDeviceExtensionsRequired__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetVulkanDeviceExtensionsRequired;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__SetExplicitTimingMode__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetExplicitTimingMode;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__SubmitExplicitTimingData__Microsoft_MixedReality_Toolkit_Providers_OpenVR SubmitExplicitTimingData;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__IsMotionSmoothingEnabled__Microsoft_MixedReality_Toolkit_Providers_OpenVR IsMotionSmoothingEnabled;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_SetTrackingSpace,Microsoft.MixedReality.Toolkit.Pro" +
		"viders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__SetTrackingSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR eOrigin);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_GetTrackingSpace,Microsoft.MixedReality.Toolkit.Pro" +
		"viders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRCompositor__GetTrackingSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError,Microsoft.MixedReality.Toolkit.Providers.OpenVR" +
		", Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		None = 0,
		RequestFailed = 1,
		IncompatibleVersion = 100,
		DoNotHaveFocus = 101,
		InvalidTexture = 102,
		IsNotSceneApplication = 103,
		TextureIsOnWrongDevice = 104,
		TextureUsesUnsupportedFormat = 105,
		SharedTexturesNotSupported = 106,
		IndexOutOfRange = 107,
		AlreadySubmitted = 108,
		InvalidBounds = 109,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_WaitGetPoses,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRCompositor__WaitGetPoses__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pRenderPoseArray, 
				uint unRenderPoseArrayCount, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pGamePoseArray, 
				uint unGamePoseArrayCount);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_GetLastPoses,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRCompositor__GetLastPoses__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pRenderPoseArray, 
				uint unRenderPoseArrayCount, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pGamePoseArray, 
				uint unGamePoseArrayCount);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_GetLastPoseForTrackedDeviceIndex,Microsoft.MixedRea" +
		"lity.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRCompositor__GetLastPoseForTrackedDeviceIndex__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unDeviceIndex, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pOutputPose, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pOutputGamePose);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.Texture_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Version" +
		"=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct Texture_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::System.IntPtr handle;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETextureType__Microsoft_MixedReality_Toolkit_Providers_OpenVR eType;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EColorSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR eColorSpace;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EColorSpace,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Versi" +
		"on=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EColorSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Auto = 0,
		Gamma = 1,
		Linear = 2,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSubmitFlags,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Ve" +
		"rsion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRSubmitFlags__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Submit_Default = 0,
		Submit_LensDistortionAlreadyApplied = 1,
		Submit_GlRenderBuffer = 2,
		Submit_Reserved = 4,
		Submit_TextureWithPose = 8,
		Submit_TextureWithDepth = 16,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_Submit,Microsoft.MixedReality.Toolkit.Providers.Ope" +
		"nVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRCompositor__Submit__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR eEye, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Texture_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pTexture, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRTextureBounds_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pBounds, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSubmitFlags__Microsoft_MixedReality_Toolkit_Providers_OpenVR nSubmitFlags);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_ClearLastSubmittedFrame,Microsoft.MixedReality.Tool" +
		"kit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__ClearLastSubmittedFrame__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_PostPresentHandoff,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__PostPresentHandoff__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.Compositor_FrameTiming,Microsoft.MixedReality.Toolkit.Providers.Op" +
		"enVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct Compositor_FrameTiming__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public uint m_nSize;
		public uint m_nFrameIndex;
		public uint m_nNumFramePresents;
		public uint m_nNumMisPresented;
		public uint m_nNumDroppedFrames;
		public uint m_nReprojectionFlags;
		public double m_flSystemTimeInSeconds;
		public float m_flPreSubmitGpuMs;
		public float m_flPostSubmitGpuMs;
		public float m_flTotalRenderGpuMs;
		public float m_flCompositorRenderGpuMs;
		public float m_flCompositorRenderCpuMs;
		public float m_flCompositorIdleCpuMs;
		public float m_flClientFrameIntervalMs;
		public float m_flPresentCallCpuMs;
		public float m_flWaitForPresentCpuMs;
		public float m_flSubmitFrameMs;
		public float m_flWaitGetPosesCalledMs;
		public float m_flNewPosesReadyMs;
		public float m_flNewFrameReadyMs;
		public float m_flCompositorUpdateStartMs;
		public float m_flCompositorUpdateEndMs;
		public float m_flCompositorRenderStartMs;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR m_HmdPose;
		public uint m_nNumVSyncsReadyForUse;
		public uint m_nNumVSyncsToFirstView;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_GetFrameTiming,Microsoft.MixedReality.Toolkit.Provi" +
		"ders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRCompositor__GetFrameTiming__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Compositor_FrameTiming__Microsoft_MixedReality_Toolkit_Providers_OpenVR pTiming, 
				uint unFramesAgo);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_GetFrameTimings,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRCompositor__GetFrameTimings__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Compositor_FrameTiming__Microsoft_MixedReality_Toolkit_Providers_OpenVR pTiming, 
				uint nFrames);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_GetFrameTimeRemaining,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate float IVRCompositor__GetFrameTimeRemaining__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.Compositor_CumulativeStats,Microsoft.MixedReality.Toolkit.Provider" +
		"s.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct Compositor_CumulativeStats__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public uint m_nPid;
		public uint m_nNumFramePresents;
		public uint m_nNumDroppedFrames;
		public uint m_nNumReprojectedFrames;
		public uint m_nNumFramePresentsOnStartup;
		public uint m_nNumDroppedFramesOnStartup;
		public uint m_nNumReprojectedFramesOnStartup;
		public uint m_nNumLoading;
		public uint m_nNumFramePresentsLoading;
		public uint m_nNumDroppedFramesLoading;
		public uint m_nNumReprojectedFramesLoading;
		public uint m_nNumTimedOut;
		public uint m_nNumFramePresentsTimedOut;
		public uint m_nNumDroppedFramesTimedOut;
		public uint m_nNumReprojectedFramesTimedOut;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_GetCumulativeStats,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__GetCumulativeStats__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Compositor_CumulativeStats__Microsoft_MixedReality_Toolkit_Providers_OpenVR pStats, 
				uint nStatsSizeInBytes);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_FadeToColor,Microsoft.MixedReality.Toolkit.Provider" +
		"s.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__FadeToColor__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				float fSeconds, 
				float fRed, 
				float fGreen, 
				float fBlue, 
				float fAlpha, 
				bool bBackground);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_GetCurrentFadeColor,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRCompositor__GetCurrentFadeColor__Microsoft_MixedReality_Toolkit_Providers_OpenVR(bool bBackground);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_FadeGrid,Microsoft.MixedReality.Toolkit.Providers.O" +
		"penVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__FadeGrid__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				float fSeconds, 
				bool bFadeIn);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_GetCurrentGridAlpha,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate float IVRCompositor__GetCurrentGridAlpha__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_SetSkyboxOverride,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRCompositor__SetSkyboxOverride__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Texture_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pTextures, 
				uint unTextureCount);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_ClearSkyboxOverride,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__ClearSkyboxOverride__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_CompositorBringToFront,Microsoft.MixedReality.Toolk" +
		"it.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__CompositorBringToFront__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_CompositorGoToBack,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__CompositorGoToBack__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_CompositorQuit,Microsoft.MixedReality.Toolkit.Provi" +
		"ders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__CompositorQuit__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_IsFullscreen,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRCompositor__IsFullscreen__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_GetCurrentSceneFocusProcess,Microsoft.MixedReality." +
		"Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRCompositor__GetCurrentSceneFocusProcess__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_GetLastFrameRenderer,Microsoft.MixedReality.Toolkit" +
		".Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRCompositor__GetLastFrameRenderer__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_CanRenderScene,Microsoft.MixedReality.Toolkit.Provi" +
		"ders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRCompositor__CanRenderScene__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_ShowMirrorWindow,Microsoft.MixedReality.Toolkit.Pro" +
		"viders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__ShowMirrorWindow__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_HideMirrorWindow,Microsoft.MixedReality.Toolkit.Pro" +
		"viders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__HideMirrorWindow__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_IsMirrorWindowVisible,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRCompositor__IsMirrorWindowVisible__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_CompositorDumpImages,Microsoft.MixedReality.Toolkit" +
		".Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__CompositorDumpImages__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_ShouldAppRenderWithLowResources,Microsoft.MixedReal" +
		"ity.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRCompositor__ShouldAppRenderWithLowResources__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_ForceInterleavedReprojectionOn,Microsoft.MixedReali" +
		"ty.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__ForceInterleavedReprojectionOn__Microsoft_MixedReality_Toolkit_Providers_OpenVR(bool bOverride);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_ForceReconnectProcess,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__ForceReconnectProcess__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_SuspendRendering,Microsoft.MixedReality.Toolkit.Pro" +
		"viders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__SuspendRendering__Microsoft_MixedReality_Toolkit_Providers_OpenVR(bool bSuspend);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_GetMirrorTextureD3D11,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRCompositor__GetMirrorTextureD3D11__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR eEye, 
				global::System.IntPtr pD3D11DeviceOrResource, 
				ref global::System.IntPtr ppD3D11ShaderResourceView);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_ReleaseMirrorTextureD3D11,Microsoft.MixedReality.To" +
		"olkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__ReleaseMirrorTextureD3D11__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::System.IntPtr pD3D11ShaderResourceView);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_GetMirrorTextureGL,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRCompositor__GetMirrorTextureGL__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR eEye, 
				ref uint pglTextureId, 
				global::System.IntPtr pglSharedTextureHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_ReleaseSharedGLTexture,Microsoft.MixedReality.Toolk" +
		"it.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRCompositor__ReleaseSharedGLTexture__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint glTextureId, 
				global::System.IntPtr glSharedTextureHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_LockGLSharedTextureForAccess,Microsoft.MixedReality" +
		".Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__LockGLSharedTextureForAccess__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::System.IntPtr glSharedTextureHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_UnlockGLSharedTextureForAccess,Microsoft.MixedReali" +
		"ty.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__UnlockGLSharedTextureForAccess__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::System.IntPtr glSharedTextureHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_GetVulkanInstanceExtensionsRequired,Microsoft.Mixed" +
		"Reality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRCompositor__GetVulkanInstanceExtensionsRequired__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::System.Text.StringBuilder pchValue, 
				uint unBufferSize);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_GetVulkanDeviceExtensionsRequired,Microsoft.MixedRe" +
		"ality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRCompositor__GetVulkanDeviceExtensionsRequired__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::System.IntPtr pPhysicalDevice, 
				global::System.Text.StringBuilder pchValue, 
				uint unBufferSize);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorTimingMode,Microsoft.MixedReality.Toolkit.Providers.O" +
		"penVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRCompositorTimingMode__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Implicit = 0,
		Explicit_RuntimePerformsPostPresentHandoff = 1,
		Explicit_ApplicationPerformsPostPresentHandoff = 2,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_SetExplicitTimingMode,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRCompositor__SetExplicitTimingMode__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorTimingMode__Microsoft_MixedReality_Toolkit_Providers_OpenVR eTimingMode);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_SubmitExplicitTimingData,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRCompositor__SubmitExplicitTimingData__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor+_IsMotionSmoothingEnabled,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRCompositor__IsMotionSmoothingEnabled__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Versio" +
		"n=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVROverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__FindOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR FindOverlay;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__CreateOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR CreateOverlay;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__DestroyOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR DestroyOverlay;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetHighQualityOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetHighQualityOverlay;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetHighQualityOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetHighQualityOverlay;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayKey__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayKey;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayName__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayName;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayName__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayName;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayImageData__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayImageData;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayErrorNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayErrorNameFromEnum;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayRenderingPid__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayRenderingPid;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayRenderingPid__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayRenderingPid;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayFlag__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayFlag;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayFlag__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayFlag;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayColor__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayColor;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayColor__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayColor;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayAlpha__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayAlpha;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayAlpha__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayAlpha;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayTexelAspect__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayTexelAspect;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayTexelAspect__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayTexelAspect;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlaySortOrder__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlaySortOrder;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlaySortOrder__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlaySortOrder;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayWidthInMeters__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayWidthInMeters;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayWidthInMeters__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayWidthInMeters;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayAutoCurveDistanceRangeInMeters__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayAutoCurveDistanceRangeInMeters;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayAutoCurveDistanceRangeInMeters__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayAutoCurveDistanceRangeInMeters;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayTextureColorSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayTextureColorSpace;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayTextureColorSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayTextureColorSpace;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayTextureBounds__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayTextureBounds;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayTextureBounds__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayTextureBounds;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayRenderModel__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayRenderModel;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayRenderModel__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayRenderModel;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayTransformType__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayTransformType;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayTransformAbsolute__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayTransformAbsolute;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayTransformAbsolute__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayTransformAbsolute;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayTransformTrackedDeviceRelative__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayTransformTrackedDeviceRelative;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayTransformTrackedDeviceRelative__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayTransformTrackedDeviceRelative;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayTransformTrackedDeviceComponent__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayTransformTrackedDeviceComponent;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayTransformTrackedDeviceComponent__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayTransformTrackedDeviceComponent;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayTransformOverlayRelative__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayTransformOverlayRelative;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayTransformOverlayRelative__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayTransformOverlayRelative;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__ShowOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR ShowOverlay;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__HideOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR HideOverlay;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__IsOverlayVisible__Microsoft_MixedReality_Toolkit_Providers_OpenVR IsOverlayVisible;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetTransformForOverlayCoordinates__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetTransformForOverlayCoordinates;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__PollNextOverlayEvent__Microsoft_MixedReality_Toolkit_Providers_OpenVR PollNextOverlayEvent;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayInputMethod__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayInputMethod;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayInputMethod__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayInputMethod;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayMouseScale__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayMouseScale;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayMouseScale__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayMouseScale;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__ComputeOverlayIntersection__Microsoft_MixedReality_Toolkit_Providers_OpenVR ComputeOverlayIntersection;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__IsHoverTargetOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR IsHoverTargetOverlay;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetGamepadFocusOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetGamepadFocusOverlay;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetGamepadFocusOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetGamepadFocusOverlay;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayNeighbor__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayNeighbor;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__MoveGamepadFocusToNeighbor__Microsoft_MixedReality_Toolkit_Providers_OpenVR MoveGamepadFocusToNeighbor;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayDualAnalogTransform__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayDualAnalogTransform;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayDualAnalogTransform__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayDualAnalogTransform;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayTexture__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayTexture;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__ClearOverlayTexture__Microsoft_MixedReality_Toolkit_Providers_OpenVR ClearOverlayTexture;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayRaw__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayRaw;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayFromFile__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayFromFile;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayTexture__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayTexture;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__ReleaseNativeOverlayHandle__Microsoft_MixedReality_Toolkit_Providers_OpenVR ReleaseNativeOverlayHandle;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayTextureSize__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayTextureSize;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__CreateDashboardOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR CreateDashboardOverlay;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__IsDashboardVisible__Microsoft_MixedReality_Toolkit_Providers_OpenVR IsDashboardVisible;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__IsActiveDashboardOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR IsActiveDashboardOverlay;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetDashboardOverlaySceneProcess__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetDashboardOverlaySceneProcess;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetDashboardOverlaySceneProcess__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetDashboardOverlaySceneProcess;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__ShowDashboard__Microsoft_MixedReality_Toolkit_Providers_OpenVR ShowDashboard;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetPrimaryDashboardDevice__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetPrimaryDashboardDevice;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__ShowKeyboard__Microsoft_MixedReality_Toolkit_Providers_OpenVR ShowKeyboard;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__ShowKeyboardForOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR ShowKeyboardForOverlay;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetKeyboardText__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetKeyboardText;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__HideKeyboard__Microsoft_MixedReality_Toolkit_Providers_OpenVR HideKeyboard;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetKeyboardTransformAbsolute__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetKeyboardTransformAbsolute;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetKeyboardPositionForOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetKeyboardPositionForOverlay;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__SetOverlayIntersectionMask__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetOverlayIntersectionMask;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__GetOverlayFlags__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOverlayFlags;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__ShowMessageOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR ShowMessageOverlay;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__CloseMessageOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR CloseMessageOverlay;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError,Microsoft.MixedReality.Toolkit.Providers.OpenVR, V" +
		"ersion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		None = 0,
		UnknownOverlay = 10,
		InvalidHandle = 11,
		PermissionDenied = 12,
		OverlayLimitExceeded = 13,
		WrongVisibilityType = 14,
		KeyTooLong = 15,
		NameTooLong = 16,
		KeyInUse = 17,
		WrongTransformType = 18,
		InvalidTrackedDevice = 19,
		InvalidParameter = 20,
		ThumbnailCantBeDestroyed = 21,
		ArrayTooSmall = 22,
		RequestFailed = 23,
		InvalidTexture = 24,
		UnableToLoadFile = 25,
		KeyboardAlreadyInUse = 26,
		NoNeighbor = 27,
		TooManyMaskPrimitives = 29,
		BadMaskPrimitive = 30,
		TextureAlreadyLocked = 31,
		TextureLockCapacityReached = 32,
		TextureNotLocked = 33,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_FindOverlay,Microsoft.MixedReality.Toolkit.Providers.O" +
		"penVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__FindOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchOverlayKey, 
				ref ulong pOverlayHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_CreateOverlay,Microsoft.MixedReality.Toolkit.Providers" +
		".OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__CreateOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchOverlayKey, 
				string pchOverlayName, 
				ref ulong pOverlayHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_DestroyOverlay,Microsoft.MixedReality.Toolkit.Provider" +
		"s.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__DestroyOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ulong ulOverlayHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetHighQualityOverlay,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetHighQualityOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ulong ulOverlayHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetHighQualityOverlay,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate ulong IVROverlay__GetHighQualityOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayKey,Microsoft.MixedReality.Toolkit.Providers" +
		".OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVROverlay__GetOverlayKey__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				global::System.Text.StringBuilder pchValue, 
				uint unBufferSize, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR pError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayName,Microsoft.MixedReality.Toolkit.Provider" +
		"s.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVROverlay__GetOverlayName__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				global::System.Text.StringBuilder pchValue, 
				uint unBufferSize, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR pError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayName,Microsoft.MixedReality.Toolkit.Provider" +
		"s.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayName__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				string pchName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayImageData,Microsoft.MixedReality.Toolkit.Pro" +
		"viders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayImageData__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				global::System.IntPtr pvBuffer, 
				uint unBufferSize, 
				ref uint punWidth, 
				ref uint punHeight);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayErrorNameFromEnum,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::System.IntPtr IVROverlay__GetOverlayErrorNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR error);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayRenderingPid,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayRenderingPid__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				uint unPID);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayRenderingPid,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVROverlay__GetOverlayRenderingPid__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ulong ulOverlayHandle);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayFlags,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Ve" +
		"rsion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum VROverlayFlags__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		None = 0,
		Curved = 1,
		RGSS4X = 2,
		NoDashboardTab = 3,
		AcceptsGamepadEvents = 4,
		ShowGamepadFocus = 5,
		SendVRScrollEvents = 6,
		SendVRTouchpadEvents = 7,
		ShowTouchPadScrollWheel = 8,
		TransferOwnershipToInternalProcess = 9,
		SideBySide_Parallel = 10,
		SideBySide_Crossed = 11,
		Panorama = 12,
		StereoPanorama = 13,
		SortWithNonSceneOverlays = 14,
		VisibleInDashboard = 15,
		MakeOverlaysInteractiveIfVisible = 16,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayFlag,Microsoft.MixedReality.Toolkit.Provider" +
		"s.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayFlag__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayFlags__Microsoft_MixedReality_Toolkit_Providers_OpenVR eOverlayFlag, 
				bool bEnabled);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayFlag,Microsoft.MixedReality.Toolkit.Provider" +
		"s.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayFlag__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayFlags__Microsoft_MixedReality_Toolkit_Providers_OpenVR eOverlayFlag, 
				ref bool pbEnabled);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayColor,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayColor__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				float fRed, 
				float fGreen, 
				float fBlue);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayColor,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayColor__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref float pfRed, 
				ref float pfGreen, 
				ref float pfBlue);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayAlpha,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayAlpha__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				float fAlpha);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayAlpha,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayAlpha__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref float pfAlpha);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayTexelAspect,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayTexelAspect__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				float fTexelAspect);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayTexelAspect,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayTexelAspect__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref float pfTexelAspect);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlaySortOrder,Microsoft.MixedReality.Toolkit.Pro" +
		"viders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlaySortOrder__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				uint unSortOrder);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlaySortOrder,Microsoft.MixedReality.Toolkit.Pro" +
		"viders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlaySortOrder__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref uint punSortOrder);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayWidthInMeters,Microsoft.MixedReality.Toolkit" +
		".Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayWidthInMeters__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				float fWidthInMeters);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayWidthInMeters,Microsoft.MixedReality.Toolkit" +
		".Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayWidthInMeters__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref float pfWidthInMeters);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayAutoCurveDistanceRangeInMeters,Microsoft.Mix" +
		"edReality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayAutoCurveDistanceRangeInMeters__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				float fMinDistanceInMeters, 
				float fMaxDistanceInMeters);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayAutoCurveDistanceRangeInMeters,Microsoft.Mix" +
		"edReality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayAutoCurveDistanceRangeInMeters__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref float pfMinDistanceInMeters, 
				ref float pfMaxDistanceInMeters);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayTextureColorSpace,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayTextureColorSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EColorSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR eTextureColorSpace);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayTextureColorSpace,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayTextureColorSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EColorSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR peTextureColorSpace);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayTextureBounds,Microsoft.MixedReality.Toolkit" +
		".Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayTextureBounds__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRTextureBounds_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pOverlayTextureBounds);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayTextureBounds,Microsoft.MixedReality.Toolkit" +
		".Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayTextureBounds__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRTextureBounds_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pOverlayTextureBounds);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayRenderModel,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVROverlay__GetOverlayRenderModel__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				global::System.Text.StringBuilder pchValue, 
				uint unBufferSize, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pColor, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR pError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayRenderModel,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayRenderModel__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				string pchRenderModel, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pColor);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayTransformType,Microsoft.MixedReality.Toolkit.Providers.Op" +
		"enVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum VROverlayTransformType__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		VROverlayTransform_Absolute = 0,
		VROverlayTransform_TrackedDeviceRelative = 1,
		VROverlayTransform_SystemOverlay = 2,
		VROverlayTransform_TrackedComponent = 3,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayTransformType,Microsoft.MixedReality.Toolkit" +
		".Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayTransformType__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayTransformType__Microsoft_MixedReality_Toolkit_Providers_OpenVR peTransformType);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayTransformAbsolute,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayTransformAbsolute__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR eTrackingOrigin, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pmatTrackingOriginToOverlayTransform);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayTransformAbsolute,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayTransformAbsolute__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR peTrackingOrigin, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pmatTrackingOriginToOverlayTransform);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayTransformTrackedDeviceRelative,Microsoft.Mix" +
		"edReality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayTransformTrackedDeviceRelative__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				uint unTrackedDevice, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pmatTrackedDeviceToOverlayTransform);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayTransformTrackedDeviceRelative,Microsoft.Mix" +
		"edReality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayTransformTrackedDeviceRelative__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref uint punTrackedDevice, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pmatTrackedDeviceToOverlayTransform);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayTransformTrackedDeviceComponent,Microsoft.Mi" +
		"xedReality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayTransformTrackedDeviceComponent__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				uint unDeviceIndex, 
				string pchComponentName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayTransformTrackedDeviceComponent,Microsoft.Mi" +
		"xedReality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayTransformTrackedDeviceComponent__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref uint punDeviceIndex, 
				global::System.Text.StringBuilder pchComponentName, 
				uint unComponentNameSize);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayTransformOverlayRelative,Microsoft.MixedReal" +
		"ity.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayTransformOverlayRelative__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref ulong ulOverlayHandleParent, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pmatParentOverlayToOverlayTransform);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayTransformOverlayRelative,Microsoft.MixedReal" +
		"ity.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayTransformOverlayRelative__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ulong ulOverlayHandleParent, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pmatParentOverlayToOverlayTransform);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_ShowOverlay,Microsoft.MixedReality.Toolkit.Providers.O" +
		"penVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__ShowOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ulong ulOverlayHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_HideOverlay,Microsoft.MixedReality.Toolkit.Providers.O" +
		"penVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__HideOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ulong ulOverlayHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_IsOverlayVisible,Microsoft.MixedReality.Toolkit.Provid" +
		"ers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVROverlay__IsOverlayVisible__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ulong ulOverlayHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetTransformForOverlayCoordinates,Microsoft.MixedReali" +
		"ty.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetTransformForOverlayCoordinates__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR eTrackingOrigin, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR coordinatesInOverlay, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pmatTransform);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_PollNextOverlayEvent,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVROverlay__PollNextOverlayEvent__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pEvent, 
				uint uncbVREvent);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayInputMethod,Microsoft.MixedReality.Toolkit.Providers.Open" +
		"VR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum VROverlayInputMethod__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		None = 0,
		Mouse = 1,
		DualAnalog = 2,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayInputMethod,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayInputMethod__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayInputMethod__Microsoft_MixedReality_Toolkit_Providers_OpenVR peInputMethod);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayInputMethod,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayInputMethod__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayInputMethod__Microsoft_MixedReality_Toolkit_Providers_OpenVR eInputMethod);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayMouseScale,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayMouseScale__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pvecMouseScale);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayMouseScale,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayMouseScale__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pvecMouseScale);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayIntersectionParams_t,Microsoft.MixedReality.Toolkit.Provi" +
		"ders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VROverlayIntersectionParams_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector3_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR vSource;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector3_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR vDirection;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR eOrigin;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayIntersectionResults_t,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VROverlayIntersectionResults_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector3_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR vPoint;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector3_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR vNormal;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR vUVs;
		public float fDistance;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_ComputeOverlayIntersection,Microsoft.MixedReality.Tool" +
		"kit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVROverlay__ComputeOverlayIntersection__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayIntersectionParams_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pParams, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayIntersectionResults_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pResults);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_IsHoverTargetOverlay,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVROverlay__IsHoverTargetOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ulong ulOverlayHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetGamepadFocusOverlay,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate ulong IVROverlay__GetGamepadFocusOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetGamepadFocusOverlay,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetGamepadFocusOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ulong ulNewFocusOverlay);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EOverlayDirection,Microsoft.MixedReality.Toolkit.Providers.OpenVR," +
		" Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EOverlayDirection__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Up = 0,
		Down = 1,
		Left = 2,
		Right = 3,
		Count = 4,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayNeighbor,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayNeighbor__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EOverlayDirection__Microsoft_MixedReality_Toolkit_Providers_OpenVR eDirection, 
				ulong ulFrom, 
				ulong ulTo);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_MoveGamepadFocusToNeighbor,Microsoft.MixedReality.Tool" +
		"kit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__MoveGamepadFocusToNeighbor__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EOverlayDirection__Microsoft_MixedReality_Toolkit_Providers_OpenVR eDirection, 
				ulong ulFrom);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayDualAnalogTransform,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayDualAnalogTransform__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlay, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDualAnalogWhich__Microsoft_MixedReality_Toolkit_Providers_OpenVR eWhich, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pvCenter, 
				float fRadius);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayDualAnalogTransform,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayDualAnalogTransform__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlay, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDualAnalogWhich__Microsoft_MixedReality_Toolkit_Providers_OpenVR eWhich, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pvCenter, 
				ref float pfRadius);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayTexture,Microsoft.MixedReality.Toolkit.Provi" +
		"ders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayTexture__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Texture_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pTexture);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_ClearOverlayTexture,Microsoft.MixedReality.Toolkit.Pro" +
		"viders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__ClearOverlayTexture__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ulong ulOverlayHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayRaw,Microsoft.MixedReality.Toolkit.Providers" +
		".OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayRaw__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				global::System.IntPtr pvBuffer, 
				uint unWidth, 
				uint unHeight, 
				uint unDepth);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayFromFile,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayFromFile__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				string pchFilePath);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayTexture,Microsoft.MixedReality.Toolkit.Provi" +
		"ders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayTexture__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref global::System.IntPtr pNativeTextureHandle, 
				global::System.IntPtr pNativeTextureRef, 
				ref uint pWidth, 
				ref uint pHeight, 
				ref uint pNativeFormat, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETextureType__Microsoft_MixedReality_Toolkit_Providers_OpenVR pAPIType, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EColorSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR pColorSpace, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRTextureBounds_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pTextureBounds);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_ReleaseNativeOverlayHandle,Microsoft.MixedReality.Tool" +
		"kit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__ReleaseNativeOverlayHandle__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				global::System.IntPtr pNativeTextureHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayTextureSize,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayTextureSize__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref uint pWidth, 
				ref uint pHeight);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_CreateDashboardOverlay,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__CreateDashboardOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchOverlayKey, 
				string pchOverlayFriendlyName, 
				ref ulong pMainHandle, 
				ref ulong pThumbnailHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_IsDashboardVisible,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVROverlay__IsDashboardVisible__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_IsActiveDashboardOverlay,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVROverlay__IsActiveDashboardOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ulong ulOverlayHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetDashboardOverlaySceneProcess,Microsoft.MixedReality" +
		".Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetDashboardOverlaySceneProcess__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				uint unProcessId);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetDashboardOverlaySceneProcess,Microsoft.MixedReality" +
		".Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetDashboardOverlaySceneProcess__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref uint punProcessId);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_ShowDashboard,Microsoft.MixedReality.Toolkit.Providers" +
		".OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVROverlay__ShowDashboard__Microsoft_MixedReality_Toolkit_Providers_OpenVR(string pchOverlayToShow);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetPrimaryDashboardDevice,Microsoft.MixedReality.Toolk" +
		"it.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVROverlay__GetPrimaryDashboardDevice__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_ShowKeyboard,Microsoft.MixedReality.Toolkit.Providers." +
		"OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__ShowKeyboard__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				int eInputMode, 
				int eLineInputMode, 
				string pchDescription, 
				uint unCharMax, 
				string pchExistingText, 
				bool bUseMinimalMode, 
				ulong uUserValue);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_ShowKeyboardForOverlay,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__ShowKeyboardForOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				int eInputMode, 
				int eLineInputMode, 
				string pchDescription, 
				uint unCharMax, 
				string pchExistingText, 
				bool bUseMinimalMode, 
				ulong uUserValue);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetKeyboardText,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVROverlay__GetKeyboardText__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::System.Text.StringBuilder pchText, 
				uint cchText);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_HideKeyboard,Microsoft.MixedReality.Toolkit.Providers." +
		"OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVROverlay__HideKeyboard__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetKeyboardTransformAbsolute,Microsoft.MixedReality.To" +
		"olkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVROverlay__SetKeyboardTransformAbsolute__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR eTrackingOrigin, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pmatTrackingOriginToKeyboardTransform);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdRect2_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Versio" +
		"n=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct HmdRect2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR vTopLeft;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR vBottomRight;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetKeyboardPositionForOverlay,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVROverlay__SetKeyboardPositionForOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdRect2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR avoidRect);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayIntersectionMaskPrimitive_t,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VROverlayIntersectionMaskPrimitive_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayIntersectionMaskPrimitiveType__Microsoft_MixedReality_Toolkit_Providers_OpenVR m_nPrimitiveType;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayIntersectionMaskPrimitive_Data_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR m_Primitive;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayIntersectionMaskPrimitiveType,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVROverlayIntersectionMaskPrimitiveType__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		OverlayIntersectionPrimitiveType_Rectangle = 0,
		OverlayIntersectionPrimitiveType_Circle = 1,
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=16)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayIntersectionMaskPrimitive_Data_t,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VROverlayIntersectionMaskPrimitive_Data_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IntersectionMaskRectangle_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR m_Rectangle;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IntersectionMaskCircle_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR m_Circle;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IntersectionMaskRectangle_t,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IntersectionMaskRectangle_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float m_flTopLeftX;
		public float m_flTopLeftY;
		public float m_flWidth;
		public float m_flHeight;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IntersectionMaskCircle_t,Microsoft.MixedReality.Toolkit.Providers." +
		"OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IntersectionMaskCircle_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float m_flCenterX;
		public float m_flCenterY;
		public float m_flRadius;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_SetOverlayIntersectionMask,Microsoft.MixedReality.Tool" +
		"kit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__SetOverlayIntersectionMask__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayIntersectionMaskPrimitive_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pMaskPrimitives, 
				uint unNumMaskPrimitives, 
				uint unPrimitiveSize);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_GetOverlayFlags,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__GetOverlayFlags__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ref uint pFlags);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRMessageOverlayResponse,Microsoft.MixedReality.Toolkit.Providers." +
		"OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum VRMessageOverlayResponse__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		ButtonPress_0 = 0,
		ButtonPress_1 = 1,
		ButtonPress_2 = 2,
		ButtonPress_3 = 3,
		CouldntFindSystemOverlay = 4,
		CouldntFindOrCreateClientOverlay = 5,
		ApplicationQuit = 6,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_ShowMessageOverlay,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRMessageOverlayResponse__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVROverlay__ShowMessageOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchText, 
				string pchCaption, 
				string pchButton0Text, 
				string pchButton1Text, 
				string pchButton2Text, 
				string pchButton3Text);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay+_CloseMessageOverlay,Microsoft.MixedReality.Toolkit.Pro" +
		"viders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVROverlay__CloseMessageOverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels,Microsoft.MixedReality.Toolkit.Providers.OpenVR, V" +
		"ersion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVRRenderModels__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__LoadRenderModel_Async__Microsoft_MixedReality_Toolkit_Providers_OpenVR LoadRenderModel_Async;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__FreeRenderModel__Microsoft_MixedReality_Toolkit_Providers_OpenVR FreeRenderModel;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__LoadTexture_Async__Microsoft_MixedReality_Toolkit_Providers_OpenVR LoadTexture_Async;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__FreeTexture__Microsoft_MixedReality_Toolkit_Providers_OpenVR FreeTexture;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__LoadTextureD3D11_Async__Microsoft_MixedReality_Toolkit_Providers_OpenVR LoadTextureD3D11_Async;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__LoadIntoTextureD3D11_Async__Microsoft_MixedReality_Toolkit_Providers_OpenVR LoadIntoTextureD3D11_Async;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__FreeTextureD3D11__Microsoft_MixedReality_Toolkit_Providers_OpenVR FreeTextureD3D11;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__GetRenderModelName__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetRenderModelName;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__GetRenderModelCount__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetRenderModelCount;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__GetComponentCount__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetComponentCount;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__GetComponentName__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetComponentName;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__GetComponentButtonMask__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetComponentButtonMask;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__GetComponentRenderModelName__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetComponentRenderModelName;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__GetComponentStateForDevicePath__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetComponentStateForDevicePath;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__GetComponentState__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetComponentState;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__RenderModelHasComponent__Microsoft_MixedReality_Toolkit_Providers_OpenVR RenderModelHasComponent;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__GetRenderModelThumbnailURL__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetRenderModelThumbnailURL;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__GetRenderModelOriginalPath__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetRenderModelOriginalPath;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__GetRenderModelErrorNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetRenderModelErrorNameFromEnum;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError,Microsoft.MixedReality.Toolkit.Providers.OpenV" +
		"R, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		None = 0,
		Loading = 100,
		NotSupported = 200,
		InvalidArg = 300,
		InvalidModel = 301,
		NoShapes = 302,
		MultipleShapes = 303,
		TooManyVertices = 304,
		MultipleTextures = 305,
		BufferTooSmall = 306,
		NotEnoughNormals = 307,
		NotEnoughTexCoords = 308,
		InvalidTexture = 400,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_LoadRenderModel_Async,Microsoft.MixedReality.Tool" +
		"kit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRRenderModels__LoadRenderModel_Async__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchRenderModelName, 
				ref global::System.IntPtr ppRenderModel);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_FreeRenderModel,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRRenderModels__FreeRenderModel__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::System.IntPtr pRenderModel);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_LoadTexture_Async,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRRenderModels__LoadTexture_Async__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				int textureId, 
				ref global::System.IntPtr ppTexture);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_FreeTexture,Microsoft.MixedReality.Toolkit.Provid" +
		"ers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRRenderModels__FreeTexture__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::System.IntPtr pTexture);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_LoadTextureD3D11_Async,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRRenderModels__LoadTextureD3D11_Async__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				int textureId, 
				global::System.IntPtr pD3D11Device, 
				ref global::System.IntPtr ppD3D11Texture2D);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_LoadIntoTextureD3D11_Async,Microsoft.MixedReality" +
		".Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRRenderModels__LoadIntoTextureD3D11_Async__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				int textureId, 
				global::System.IntPtr pDstTexture);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_FreeTextureD3D11,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRRenderModels__FreeTextureD3D11__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::System.IntPtr pD3D11Texture2D);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_GetRenderModelName,Microsoft.MixedReality.Toolkit" +
		".Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRRenderModels__GetRenderModelName__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unRenderModelIndex, 
				global::System.Text.StringBuilder pchRenderModelName, 
				uint unRenderModelNameLen);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_GetRenderModelCount,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRRenderModels__GetRenderModelCount__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_GetComponentCount,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRRenderModels__GetComponentCount__Microsoft_MixedReality_Toolkit_Providers_OpenVR(string pchRenderModelName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_GetComponentName,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRRenderModels__GetComponentName__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchRenderModelName, 
				uint unComponentIndex, 
				global::System.Text.StringBuilder pchComponentName, 
				uint unComponentNameLen);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_GetComponentButtonMask,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate ulong IVRRenderModels__GetComponentButtonMask__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchRenderModelName, 
				string pchComponentName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_GetComponentRenderModelName,Microsoft.MixedRealit" +
		"y.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRRenderModels__GetComponentRenderModelName__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchRenderModelName, 
				string pchComponentName, 
				global::System.Text.StringBuilder pchComponentRenderModelName, 
				uint unComponentRenderModelNameLen);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ControllerMode_State_t,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct RenderModel_ControllerMode_State_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public bool bScrollWheelVisible;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ComponentState_t,Microsoft.MixedReality.Toolkit.Provid" +
		"ers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct RenderModel_ComponentState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR mTrackingToComponentRenderModel;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR mTrackingToComponentLocal;
		public uint uProperties;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_GetComponentStateForDevicePath,Microsoft.MixedRea" +
		"lity.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRRenderModels__GetComponentStateForDevicePath__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchRenderModelName, 
				string pchComponentName, 
				ulong devicePath, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ControllerMode_State_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pState, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ComponentState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pComponentState);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_GetComponentState,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRRenderModels__GetComponentState__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchRenderModelName, 
				string pchComponentName, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRControllerState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pControllerState, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ControllerMode_State_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pState, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ComponentState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pComponentState);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_RenderModelHasComponent,Microsoft.MixedReality.To" +
		"olkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRRenderModels__RenderModelHasComponent__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchRenderModelName, 
				string pchComponentName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_GetRenderModelThumbnailURL,Microsoft.MixedReality" +
		".Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRRenderModels__GetRenderModelThumbnailURL__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchRenderModelName, 
				global::System.Text.StringBuilder pchThumbnailURL, 
				uint unThumbnailURLLen, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR peError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_GetRenderModelOriginalPath,Microsoft.MixedReality" +
		".Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRRenderModels__GetRenderModelOriginalPath__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchRenderModelName, 
				global::System.Text.StringBuilder pchOriginalPath, 
				uint unOriginalPathLen, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR peError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels+_GetRenderModelErrorNameFromEnum,Microsoft.MixedRe" +
		"ality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::System.IntPtr IVRRenderModels__GetRenderModelErrorNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR error);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRNotifications,Microsoft.MixedReality.Toolkit.Providers.OpenVR, " +
		"Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVRNotifications__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRNotifications__CreateNotification__Microsoft_MixedReality_Toolkit_Providers_OpenVR CreateNotification;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRNotifications__RemoveNotification__Microsoft_MixedReality_Toolkit_Providers_OpenVR RemoveNotification;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationError,Microsoft.MixedReality.Toolkit.Providers.Open" +
		"VR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRNotificationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		OK = 0,
		InvalidNotificationId = 100,
		NotificationQueueFull = 101,
		InvalidOverlayHandle = 102,
		SystemWithUserValueAlreadyExists = 103,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationType,Microsoft.MixedReality.Toolkit.Providers.OpenV" +
		"R, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRNotificationType__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Transient = 0,
		Persistent = 1,
		Transient_SystemWithUserValue = 2,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationStyle,Microsoft.MixedReality.Toolkit.Providers.Open" +
		"VR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRNotificationStyle__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		None = 0,
		Application = 100,
		Contact_Disabled = 200,
		Contact_Enabled = 201,
		Contact_Active = 202,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.NotificationBitmap_t,Microsoft.MixedReality.Toolkit.Providers.Open" +
		"VR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct NotificationBitmap_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::System.IntPtr m_pImageData;
		public int m_nWidth;
		public int m_nHeight;
		public int m_nBytesPerPixel;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRNotifications+_CreateNotification,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRNotifications__CreateNotification__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulOverlayHandle, 
				ulong ulUserValue, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationType__Microsoft_MixedReality_Toolkit_Providers_OpenVR type, 
				string pchText, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationStyle__Microsoft_MixedReality_Toolkit_Providers_OpenVR style, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.NotificationBitmap_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pImage, 
				ref uint pNotificationId);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRNotifications+_RemoveNotification,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRNotifications__RemoveNotification__Microsoft_MixedReality_Toolkit_Providers_OpenVR(uint notificationId);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Versi" +
		"on=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVRSettings__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings__GetSettingsErrorNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetSettingsErrorNameFromEnum;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings__Sync__Microsoft_MixedReality_Toolkit_Providers_OpenVR Sync;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings__SetBool__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetBool;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings__SetInt32__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetInt32;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings__SetFloat__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetFloat;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings__SetString__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetString;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings__GetBool__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetBool;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings__GetInt32__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetInt32;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings__GetFloat__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetFloat;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings__GetString__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetString;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings__RemoveSection__Microsoft_MixedReality_Toolkit_Providers_OpenVR RemoveSection;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings__RemoveKeyInSection__Microsoft_MixedReality_Toolkit_Providers_OpenVR RemoveKeyInSection;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError,Microsoft.MixedReality.Toolkit.Providers.OpenVR, " +
		"Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		None = 0,
		IPCFailed = 1,
		WriteFailed = 2,
		ReadFailed = 3,
		JsonParseFailed = 4,
		UnsetSettingHasNoDefault = 5,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings+_GetSettingsErrorNameFromEnum,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::System.IntPtr IVRSettings__GetSettingsErrorNameFromEnum__Microsoft_MixedReality_Toolkit_Providers_OpenVR(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR eError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings+_Sync,Microsoft.MixedReality.Toolkit.Providers.OpenVR," +
		" Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRSettings__Sync__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				bool bForce, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR peError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings+_SetBool,Microsoft.MixedReality.Toolkit.Providers.Open" +
		"VR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSettings__SetBool__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchSection, 
				string pchSettingsKey, 
				bool bValue, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR peError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings+_SetInt32,Microsoft.MixedReality.Toolkit.Providers.Ope" +
		"nVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSettings__SetInt32__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchSection, 
				string pchSettingsKey, 
				int nValue, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR peError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings+_SetFloat,Microsoft.MixedReality.Toolkit.Providers.Ope" +
		"nVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSettings__SetFloat__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchSection, 
				string pchSettingsKey, 
				float flValue, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR peError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings+_SetString,Microsoft.MixedReality.Toolkit.Providers.Op" +
		"enVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSettings__SetString__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchSection, 
				string pchSettingsKey, 
				string pchValue, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR peError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings+_GetBool,Microsoft.MixedReality.Toolkit.Providers.Open" +
		"VR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate bool IVRSettings__GetBool__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchSection, 
				string pchSettingsKey, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR peError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings+_GetInt32,Microsoft.MixedReality.Toolkit.Providers.Ope" +
		"nVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IVRSettings__GetInt32__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchSection, 
				string pchSettingsKey, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR peError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings+_GetFloat,Microsoft.MixedReality.Toolkit.Providers.Ope" +
		"nVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate float IVRSettings__GetFloat__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchSection, 
				string pchSettingsKey, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR peError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings+_GetString,Microsoft.MixedReality.Toolkit.Providers.Op" +
		"enVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSettings__GetString__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchSection, 
				string pchSettingsKey, 
				global::System.Text.StringBuilder pchValue, 
				uint unValueLen, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR peError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings+_RemoveSection,Microsoft.MixedReality.Toolkit.Provider" +
		"s.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSettings__RemoveSection__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchSection, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR peError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings+_RemoveKeyInSection,Microsoft.MixedReality.Toolkit.Pro" +
		"viders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void IVRSettings__RemoveKeyInSection__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchSection, 
				string pchSettingsKey, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR peError);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Ve" +
		"rsion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVRScreenshots__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots__RequestScreenshot__Microsoft_MixedReality_Toolkit_Providers_OpenVR RequestScreenshot;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots__HookScreenshot__Microsoft_MixedReality_Toolkit_Providers_OpenVR HookScreenshot;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots__GetScreenshotPropertyType__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetScreenshotPropertyType;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots__GetScreenshotPropertyFilename__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetScreenshotPropertyFilename;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots__UpdateScreenshotProgress__Microsoft_MixedReality_Toolkit_Providers_OpenVR UpdateScreenshotProgress;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots__TakeStereoScreenshot__Microsoft_MixedReality_Toolkit_Providers_OpenVR TakeStereoScreenshot;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots__SubmitScreenshot__Microsoft_MixedReality_Toolkit_Providers_OpenVR SubmitScreenshot;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError,Microsoft.MixedReality.Toolkit.Providers.OpenVR" +
		", Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		None = 0,
		RequestFailed = 1,
		IncompatibleVersion = 100,
		NotFound = 101,
		BufferTooSmall = 102,
		ScreenshotAlreadyInProgress = 108,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType,Microsoft.MixedReality.Toolkit.Providers.OpenVR," +
		" Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		None = 0,
		Mono = 1,
		Stereo = 2,
		Cubemap = 3,
		MonoPanorama = 4,
		StereoPanorama = 5,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots+_RequestScreenshot,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRScreenshots__RequestScreenshot__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ref uint pOutScreenshotHandle, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR type, 
				string pchPreviewFilename, 
				string pchVRFilename);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots+_HookScreenshot,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRScreenshots__HookScreenshot__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pSupportedTypes, 
				int numTypes);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots+_GetScreenshotPropertyType,Microsoft.MixedReality.T" +
		"oolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRScreenshots__GetScreenshotPropertyType__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint screenshotHandle, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR pError);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotPropertyFilenames,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRScreenshotPropertyFilenames__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Preview = 0,
		VR = 1,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots+_GetScreenshotPropertyFilename,Microsoft.MixedReali" +
		"ty.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRScreenshots__GetScreenshotPropertyFilename__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint screenshotHandle, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotPropertyFilenames__Microsoft_MixedReality_Toolkit_Providers_OpenVR filenameType, 
				global::System.Text.StringBuilder pchFilename, 
				uint cchFilename, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR pError);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots+_UpdateScreenshotProgress,Microsoft.MixedReality.To" +
		"olkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRScreenshots__UpdateScreenshotProgress__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint screenshotHandle, 
				float flProgress);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots+_TakeStereoScreenshot,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRScreenshots__TakeStereoScreenshot__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ref uint pOutScreenshotHandle, 
				string pchPreviewFilename, 
				string pchVRFilename);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots+_SubmitScreenshot,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRScreenshots__SubmitScreenshot__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint screenshotHandle, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR type, 
				string pchSourcePreviewFilename, 
				string pchSourceVRFilename);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRResources,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Vers" +
		"ion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVRResources__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRResources__LoadSharedResource__Microsoft_MixedReality_Toolkit_Providers_OpenVR LoadSharedResource;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRResources__GetResourceFullPath__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetResourceFullPath;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRResources+_LoadSharedResource,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRResources__LoadSharedResource__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchResourceName, 
				string pchBuffer, 
				uint unBufferLen);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRResources+_GetResourceFullPath,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRResources__GetResourceFullPath__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchResourceName, 
				string pchResourceTypeDirectory, 
				global::System.Text.StringBuilder pchPathBuffer, 
				uint unBufferLen);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRDriverManager,Microsoft.MixedReality.Toolkit.Providers.OpenVR, " +
		"Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVRDriverManager__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRDriverManager__GetDriverCount__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetDriverCount;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRDriverManager__GetDriverName__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetDriverName;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRDriverManager__GetDriverHandle__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetDriverHandle;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRDriverManager+_GetDriverCount,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRDriverManager__GetDriverCount__Microsoft_MixedReality_Toolkit_Providers_OpenVR();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRDriverManager+_GetDriverName,Microsoft.MixedReality.Toolkit.Pro" +
		"viders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint IVRDriverManager__GetDriverName__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint nDriver, 
				global::System.Text.StringBuilder pchValue, 
				uint unBufferSize);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRDriverManager+_GetDriverHandle,Microsoft.MixedReality.Toolkit.P" +
		"roviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate ulong IVRDriverManager__GetDriverHandle__Microsoft_MixedReality_Toolkit_Providers_OpenVR(string pchDriverName);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Version=" +
		"2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVRInput__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__SetActionManifestPath__Microsoft_MixedReality_Toolkit_Providers_OpenVR SetActionManifestPath;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetActionSetHandle__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetActionSetHandle;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetActionHandle__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetActionHandle;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetInputSourceHandle__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetInputSourceHandle;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__UpdateActionState__Microsoft_MixedReality_Toolkit_Providers_OpenVR UpdateActionState;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetDigitalActionData__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetDigitalActionData;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetAnalogActionData__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetAnalogActionData;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetPoseActionData__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetPoseActionData;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetSkeletalActionData__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetSkeletalActionData;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetBoneCount__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetBoneCount;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetBoneHierarchy__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetBoneHierarchy;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetBoneName__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetBoneName;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetSkeletalReferenceTransforms__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetSkeletalReferenceTransforms;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetSkeletalTrackingLevel__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetSkeletalTrackingLevel;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetSkeletalBoneData__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetSkeletalBoneData;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetSkeletalSummaryData__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetSkeletalSummaryData;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetSkeletalBoneDataCompressed__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetSkeletalBoneDataCompressed;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__DecompressSkeletalBoneData__Microsoft_MixedReality_Toolkit_Providers_OpenVR DecompressSkeletalBoneData;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__TriggerHapticVibrationAction__Microsoft_MixedReality_Toolkit_Providers_OpenVR TriggerHapticVibrationAction;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetActionOrigins__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetActionOrigins;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetOriginLocalizedName__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOriginLocalizedName;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__GetOriginTrackedDeviceInfo__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetOriginTrackedDeviceInfo;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__ShowActionOrigins__Microsoft_MixedReality_Toolkit_Providers_OpenVR ShowActionOrigins;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__ShowBindingsForActionSet__Microsoft_MixedReality_Toolkit_Providers_OpenVR ShowBindingsForActionSet;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Ver" +
		"sion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		None = 0,
		NameNotFound = 1,
		WrongType = 2,
		InvalidHandle = 3,
		InvalidParam = 4,
		NoSteam = 5,
		MaxCapacityReached = 6,
		IPCError = 7,
		NoActiveActionSet = 8,
		InvalidDevice = 9,
		InvalidSkeleton = 10,
		InvalidBoneCount = 11,
		InvalidCompressedData = 12,
		NoData = 13,
		BufferTooSmall = 14,
		MismatchedActionManifest = 15,
		MissingSkeletonData = 16,
		InvalidBoneIndex = 17,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_SetActionManifestPath,Microsoft.MixedReality.Toolkit.Pro" +
		"viders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__SetActionManifestPath__Microsoft_MixedReality_Toolkit_Providers_OpenVR(string pchActionManifestPath);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetActionSetHandle,Microsoft.MixedReality.Toolkit.Provid" +
		"ers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetActionSetHandle__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchActionSetName, 
				ref ulong pHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetActionHandle,Microsoft.MixedReality.Toolkit.Providers" +
		".OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetActionHandle__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchActionName, 
				ref ulong pHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetInputSourceHandle,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetInputSourceHandle__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchInputSourcePath, 
				ref ulong pHandle);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRActiveActionSet_t,Microsoft.MixedReality.Toolkit.Providers.OpenV" +
		"R, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VRActiveActionSet_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public ulong ulActionSet;
		public ulong ulRestrictedToDevice;
		public ulong ulSecondaryActionSet;
		public uint unPadding;
		public int nPriority;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_UpdateActionState,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__UpdateActionState__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRActiveActionSet_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pSets, 
				uint unSizeOfVRSelectedActionSet_t, 
				uint unSetCount);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputDigitalActionData_t,Microsoft.MixedReality.Toolkit.Providers." +
		"OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct InputDigitalActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public bool bActive;
		public ulong activeOrigin;
		public bool bState;
		public bool bChanged;
		public float fUpdateTime;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetDigitalActionData,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetDigitalActionData__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong action, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputDigitalActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pActionData, 
				uint unActionDataSize, 
				ulong ulRestrictToDevice);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputAnalogActionData_t,Microsoft.MixedReality.Toolkit.Providers.O" +
		"penVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct InputAnalogActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public bool bActive;
		public ulong activeOrigin;
		public float x;
		public float y;
		public float z;
		public float deltaX;
		public float deltaY;
		public float deltaZ;
		public float fUpdateTime;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetAnalogActionData,Microsoft.MixedReality.Toolkit.Provi" +
		"ders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetAnalogActionData__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong action, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputAnalogActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pActionData, 
				uint unActionDataSize, 
				ulong ulRestrictToDevice);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputPoseActionData_t,Microsoft.MixedReality.Toolkit.Providers.Ope" +
		"nVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct InputPoseActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public bool bActive;
		public ulong activeOrigin;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pose;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetPoseActionData,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetPoseActionData__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong action, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR eOrigin, 
				float fPredictedSecondsFromNow, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputPoseActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pActionData, 
				uint unActionDataSize, 
				ulong ulRestrictToDevice);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputSkeletalActionData_t,Microsoft.MixedReality.Toolkit.Providers" +
		".OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct InputSkeletalActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public bool bActive;
		public ulong activeOrigin;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetSkeletalActionData,Microsoft.MixedReality.Toolkit.Pro" +
		"viders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetSkeletalActionData__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong action, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputSkeletalActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pActionData, 
				uint unActionDataSize);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetBoneCount,Microsoft.MixedReality.Toolkit.Providers.Op" +
		"enVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetBoneCount__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong action, 
				ref uint pBoneCount);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetBoneHierarchy,Microsoft.MixedReality.Toolkit.Provider" +
		"s.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetBoneHierarchy__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong action, 
				int[] pParentIndices, 
				uint unIndexArayCount);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetBoneName,Microsoft.MixedReality.Toolkit.Providers.Ope" +
		"nVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetBoneName__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong action, 
				int nBoneIndex, 
				global::System.Text.StringBuilder pchBoneName, 
				uint unNameBufferSize);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTransformSpace,Microsoft.MixedReality.Toolkit.Providers" +
		".OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRSkeletalTransformSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Model = 0,
		Parent = 1,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalReferencePose,Microsoft.MixedReality.Toolkit.Providers." +
		"OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRSkeletalReferencePose__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		BindPose = 0,
		OpenHand = 1,
		Fist = 2,
		GripLimit = 3,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRBoneTransform_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR," +
		" Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VRBoneTransform_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector4_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR position;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdQuaternionf_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR orientation;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector4_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Vers" +
		"ion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct HmdVector4_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float v0;
		public float v1;
		public float v2;
		public float v3;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdQuaternionf_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, " +
		"Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct HmdQuaternionf_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float w;
		public float x;
		public float y;
		public float z;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetSkeletalReferenceTransforms,Microsoft.MixedReality.To" +
		"olkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetSkeletalReferenceTransforms__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong action, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTransformSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR eTransformSpace, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalReferencePose__Microsoft_MixedReality_Toolkit_Providers_OpenVR eReferencePose, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRBoneTransform_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pTransformArray, 
				uint unTransformArrayCount);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTrackingLevel,Microsoft.MixedReality.Toolkit.Providers." +
		"OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRSkeletalTrackingLevel__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		VRSkeletalTracking_Estimated = 0,
		VRSkeletalTracking_Partial = 1,
		VRSkeletalTracking_Full = 2,
		Max = 2,
		Count = 3,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetSkeletalTrackingLevel,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetSkeletalTrackingLevel__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong action, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTrackingLevel__Microsoft_MixedReality_Toolkit_Providers_OpenVR pSkeletalTrackingLevel);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalMotionRange,Microsoft.MixedReality.Toolkit.Providers.Op" +
		"enVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRSkeletalMotionRange__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		WithController = 0,
		WithoutController = 1,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetSkeletalBoneData,Microsoft.MixedReality.Toolkit.Provi" +
		"ders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetSkeletalBoneData__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong action, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTransformSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR eTransformSpace, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalMotionRange__Microsoft_MixedReality_Toolkit_Providers_OpenVR eMotionRange, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRBoneTransform_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pTransformArray, 
				uint unTransformArrayCount);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRSkeletalSummaryData_t,Microsoft.MixedReality.Toolkit.Providers.O" +
		"penVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct VRSkeletalSummaryData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public float flFingerCurl0;
		public float flFingerCurl1;
		public float flFingerCurl2;
		public float flFingerCurl3;
		public float flFingerCurl4;
		public float flFingerSplay0;
		public float flFingerSplay1;
		public float flFingerSplay2;
		public float flFingerSplay3;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetSkeletalSummaryData,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetSkeletalSummaryData__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong action, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRSkeletalSummaryData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pSkeletalSummaryData);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetSkeletalBoneDataCompressed,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetSkeletalBoneDataCompressed__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong action, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalMotionRange__Microsoft_MixedReality_Toolkit_Providers_OpenVR eMotionRange, 
				global::System.IntPtr pvCompressedData, 
				uint unCompressedSize, 
				ref uint punRequiredCompressedSize);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_DecompressSkeletalBoneData,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__DecompressSkeletalBoneData__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::System.IntPtr pvCompressedBuffer, 
				uint unCompressedBufferSize, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTransformSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR eTransformSpace, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRBoneTransform_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pTransformArray, 
				uint unTransformArrayCount);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_TriggerHapticVibrationAction,Microsoft.MixedReality.Tool" +
		"kit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__TriggerHapticVibrationAction__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong action, 
				float fStartSecondsFromNow, 
				float fDurationSeconds, 
				float fFrequency, 
				float fAmplitude, 
				ulong ulRestrictToDevice);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetActionOrigins,Microsoft.MixedReality.Toolkit.Provider" +
		"s.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetActionOrigins__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong actionSetHandle, 
				ulong digitalActionHandle, 
				ulong[] originsOut, 
				uint originOutCount);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetOriginLocalizedName,Microsoft.MixedReality.Toolkit.Pr" +
		"oviders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetOriginLocalizedName__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong origin, 
				global::System.Text.StringBuilder pchNameArray, 
				uint unNameArraySize, 
				int unStringSectionsToInclude);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputOriginInfo_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR," +
		" Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct InputOriginInfo_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public ulong devicePath;
		public uint trackedDeviceIndex;
		public byte rchRenderModelComponentName0;
		public byte rchRenderModelComponentName1;
		public byte rchRenderModelComponentName2;
		public byte rchRenderModelComponentName3;
		public byte rchRenderModelComponentName4;
		public byte rchRenderModelComponentName5;
		public byte rchRenderModelComponentName6;
		public byte rchRenderModelComponentName7;
		public byte rchRenderModelComponentName8;
		public byte rchRenderModelComponentName9;
		public byte rchRenderModelComponentName10;
		public byte rchRenderModelComponentName11;
		public byte rchRenderModelComponentName12;
		public byte rchRenderModelComponentName13;
		public byte rchRenderModelComponentName14;
		public byte rchRenderModelComponentName15;
		public byte rchRenderModelComponentName16;
		public byte rchRenderModelComponentName17;
		public byte rchRenderModelComponentName18;
		public byte rchRenderModelComponentName19;
		public byte rchRenderModelComponentName20;
		public byte rchRenderModelComponentName21;
		public byte rchRenderModelComponentName22;
		public byte rchRenderModelComponentName23;
		public byte rchRenderModelComponentName24;
		public byte rchRenderModelComponentName25;
		public byte rchRenderModelComponentName26;
		public byte rchRenderModelComponentName27;
		public byte rchRenderModelComponentName28;
		public byte rchRenderModelComponentName29;
		public byte rchRenderModelComponentName30;
		public byte rchRenderModelComponentName31;
		public byte rchRenderModelComponentName32;
		public byte rchRenderModelComponentName33;
		public byte rchRenderModelComponentName34;
		public byte rchRenderModelComponentName35;
		public byte rchRenderModelComponentName36;
		public byte rchRenderModelComponentName37;
		public byte rchRenderModelComponentName38;
		public byte rchRenderModelComponentName39;
		public byte rchRenderModelComponentName40;
		public byte rchRenderModelComponentName41;
		public byte rchRenderModelComponentName42;
		public byte rchRenderModelComponentName43;
		public byte rchRenderModelComponentName44;
		public byte rchRenderModelComponentName45;
		public byte rchRenderModelComponentName46;
		public byte rchRenderModelComponentName47;
		public byte rchRenderModelComponentName48;
		public byte rchRenderModelComponentName49;
		public byte rchRenderModelComponentName50;
		public byte rchRenderModelComponentName51;
		public byte rchRenderModelComponentName52;
		public byte rchRenderModelComponentName53;
		public byte rchRenderModelComponentName54;
		public byte rchRenderModelComponentName55;
		public byte rchRenderModelComponentName56;
		public byte rchRenderModelComponentName57;
		public byte rchRenderModelComponentName58;
		public byte rchRenderModelComponentName59;
		public byte rchRenderModelComponentName60;
		public byte rchRenderModelComponentName61;
		public byte rchRenderModelComponentName62;
		public byte rchRenderModelComponentName63;
		public byte rchRenderModelComponentName64;
		public byte rchRenderModelComponentName65;
		public byte rchRenderModelComponentName66;
		public byte rchRenderModelComponentName67;
		public byte rchRenderModelComponentName68;
		public byte rchRenderModelComponentName69;
		public byte rchRenderModelComponentName70;
		public byte rchRenderModelComponentName71;
		public byte rchRenderModelComponentName72;
		public byte rchRenderModelComponentName73;
		public byte rchRenderModelComponentName74;
		public byte rchRenderModelComponentName75;
		public byte rchRenderModelComponentName76;
		public byte rchRenderModelComponentName77;
		public byte rchRenderModelComponentName78;
		public byte rchRenderModelComponentName79;
		public byte rchRenderModelComponentName80;
		public byte rchRenderModelComponentName81;
		public byte rchRenderModelComponentName82;
		public byte rchRenderModelComponentName83;
		public byte rchRenderModelComponentName84;
		public byte rchRenderModelComponentName85;
		public byte rchRenderModelComponentName86;
		public byte rchRenderModelComponentName87;
		public byte rchRenderModelComponentName88;
		public byte rchRenderModelComponentName89;
		public byte rchRenderModelComponentName90;
		public byte rchRenderModelComponentName91;
		public byte rchRenderModelComponentName92;
		public byte rchRenderModelComponentName93;
		public byte rchRenderModelComponentName94;
		public byte rchRenderModelComponentName95;
		public byte rchRenderModelComponentName96;
		public byte rchRenderModelComponentName97;
		public byte rchRenderModelComponentName98;
		public byte rchRenderModelComponentName99;
		public byte rchRenderModelComponentName100;
		public byte rchRenderModelComponentName101;
		public byte rchRenderModelComponentName102;
		public byte rchRenderModelComponentName103;
		public byte rchRenderModelComponentName104;
		public byte rchRenderModelComponentName105;
		public byte rchRenderModelComponentName106;
		public byte rchRenderModelComponentName107;
		public byte rchRenderModelComponentName108;
		public byte rchRenderModelComponentName109;
		public byte rchRenderModelComponentName110;
		public byte rchRenderModelComponentName111;
		public byte rchRenderModelComponentName112;
		public byte rchRenderModelComponentName113;
		public byte rchRenderModelComponentName114;
		public byte rchRenderModelComponentName115;
		public byte rchRenderModelComponentName116;
		public byte rchRenderModelComponentName117;
		public byte rchRenderModelComponentName118;
		public byte rchRenderModelComponentName119;
		public byte rchRenderModelComponentName120;
		public byte rchRenderModelComponentName121;
		public byte rchRenderModelComponentName122;
		public byte rchRenderModelComponentName123;
		public byte rchRenderModelComponentName124;
		public byte rchRenderModelComponentName125;
		public byte rchRenderModelComponentName126;
		public byte rchRenderModelComponentName127;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_GetOriginTrackedDeviceInfo,Microsoft.MixedReality.Toolki" +
		"t.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__GetOriginTrackedDeviceInfo__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong origin, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputOriginInfo_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pOriginInfo, 
				uint unOriginInfoSize);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_ShowActionOrigins,Microsoft.MixedReality.Toolkit.Provide" +
		"rs.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__ShowActionOrigins__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong actionSetHandle, 
				ulong ulActionHandle);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput+_ShowBindingsForActionSet,Microsoft.MixedReality.Toolkit." +
		"Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRInput__ShowBindingsForActionSet__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRActiveActionSet_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] pSets, 
				uint unSizeOfVRSelectedActionSet_t, 
				uint unSetCount, 
				ulong originToHighlight);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRIOBuffer,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Versi" +
		"on=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVRIOBuffer__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRIOBuffer__Open__Microsoft_MixedReality_Toolkit_Providers_OpenVR Open;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRIOBuffer__Close__Microsoft_MixedReality_Toolkit_Providers_OpenVR Close;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRIOBuffer__Read__Microsoft_MixedReality_Toolkit_Providers_OpenVR Read;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRIOBuffer__Write__Microsoft_MixedReality_Toolkit_Providers_OpenVR Write;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRIOBuffer__PropertyContainer__Microsoft_MixedReality_Toolkit_Providers_OpenVR PropertyContainer;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Ve" +
		"rsion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		IOBuffer_Success = 0,
		IOBuffer_OperationFailed = 100,
		IOBuffer_InvalidHandle = 101,
		IOBuffer_InvalidArgument = 102,
		IOBuffer_PathExists = 103,
		IOBuffer_PathDoesNotExist = 104,
		IOBuffer_Permission = 105,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferMode,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Ver" +
		"sion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EIOBufferMode__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Read = 1,
		Write = 2,
		Create = 512,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRIOBuffer+_Open,Microsoft.MixedReality.Toolkit.Providers.OpenVR," +
		" Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRIOBuffer__Open__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchPath, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferMode__Microsoft_MixedReality_Toolkit_Providers_OpenVR mode, 
				uint unElementSize, 
				uint unElements, 
				ref ulong pulBuffer);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRIOBuffer+_Close,Microsoft.MixedReality.Toolkit.Providers.OpenVR" +
		", Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRIOBuffer__Close__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ulong ulBuffer);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRIOBuffer+_Read,Microsoft.MixedReality.Toolkit.Providers.OpenVR," +
		" Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRIOBuffer__Read__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulBuffer, 
				global::System.IntPtr pDst, 
				uint unBytes, 
				ref uint punRead);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRIOBuffer+_Write,Microsoft.MixedReality.Toolkit.Providers.OpenVR" +
		", Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRIOBuffer__Write__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				ulong ulBuffer, 
				global::System.IntPtr pSrc, 
				uint unBytes);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRIOBuffer+_PropertyContainer,Microsoft.MixedReality.Toolkit.Prov" +
		"iders.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate ulong IVRIOBuffer__PropertyContainer__Microsoft_MixedReality_Toolkit_Providers_OpenVR(ulong ulBuffer);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSpatialAnchors,Microsoft.MixedReality.Toolkit.Providers.OpenVR," +
		" Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IVRSpatialAnchors__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSpatialAnchors__CreateSpatialAnchorFromDescriptor__Microsoft_MixedReality_Toolkit_Providers_OpenVR CreateSpatialAnchorFromDescriptor;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSpatialAnchors__CreateSpatialAnchorFromPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR CreateSpatialAnchorFromPose;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSpatialAnchors__GetSpatialAnchorPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetSpatialAnchorPose;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSpatialAnchors__GetSpatialAnchorDescriptor__Microsoft_MixedReality_Toolkit_Providers_OpenVR GetSpatialAnchorDescriptor;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError,Microsoft.MixedReality.Toolkit.Providers.Ope" +
		"nVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		Success = 0,
		Internal = 1,
		UnknownHandle = 2,
		ArrayTooSmall = 3,
		InvalidDescriptorChar = 4,
		NotYetAvailable = 5,
		NotAvailableInThisUniverse = 6,
		PermanentlyUnavailable = 7,
		WrongDriver = 8,
		DescriptorTooLong = 9,
		Unknown = 10,
		NoRoomCalibration = 11,
		InvalidArgument = 12,
		UnknownDriver = 13,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSpatialAnchors+_CreateSpatialAnchorFromDescriptor,Microsoft.Mix" +
		"edReality.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRSpatialAnchors__CreateSpatialAnchorFromDescriptor__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				string pchDescriptor, 
				ref uint pHandleOut);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.SpatialAnchorPose_t,Microsoft.MixedReality.Toolkit.Providers.OpenV" +
		"R, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct SpatialAnchorPose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR mAnchorToAbsoluteTracking;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSpatialAnchors+_CreateSpatialAnchorFromPose,Microsoft.MixedReal" +
		"ity.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRSpatialAnchors__CreateSpatialAnchorFromPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unDeviceIndex, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR eOrigin, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.SpatialAnchorPose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pPose, 
				ref uint pHandleOut);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSpatialAnchors+_GetSpatialAnchorPose,Microsoft.MixedReality.Too" +
		"lkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRSpatialAnchors__GetSpatialAnchorPose__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unHandle, 
				global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR eOrigin, 
				ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.SpatialAnchorPose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR pPoseOut);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSpatialAnchors+_GetSpatialAnchorDescriptor,Microsoft.MixedReali" +
		"ty.Toolkit.Providers.OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR IVRSpatialAnchors__GetSpatialAnchorDescriptor__Microsoft_MixedReality_Toolkit_Providers_OpenVR(
				uint unHandle, 
				global::System.Text.StringBuilder pchDescriptorOut, 
				ref uint punDescriptorBufferLenInOut);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_Vertex_t,Microsoft.MixedReality.Toolkit.Providers.Open" +
		"VR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct RenderModel_Vertex_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector3_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR vPosition;
		public global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector3_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR vNormal;
		public float rfTextureCoord0;
		public float rfTextureCoord1;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_TextureMap_t,Microsoft.MixedReality.Toolkit.Providers." +
		"OpenVR, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct RenderModel_TextureMap_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public ushort unWidth;
		public ushort unHeight;
		public global::System.IntPtr rubTextureMapData;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_t,Microsoft.MixedReality.Toolkit.Providers.OpenVR, Ver" +
		"sion=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct RenderModel_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR
	{
		public global::System.IntPtr rVertexData;
		public uint unVertexCount;
		public global::System.IntPtr rIndexData;
		public uint unTriangleCount;
		public int diffuseTextureId;
	}
}

namespace Microsoft.MixedReality.Toolkit.WindowsMixedReality
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.MixedReality.Toolkit.WindowsMixedReality.HolographicFrameNativeData,Microsoft.MixedReality.Toolkit.Pro" +
		"viders.WindowsMixedReality, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct HolographicFrameNativeData__Microsoft_MixedReality_Toolkit_Providers_WindowsMixedReality
	{
		public uint VersionNumber;
		public uint MaxNumberOfCameras;
		public global::System.IntPtr ISpatialCoordinateSystemPtr;
		public global::System.IntPtr IHolographicFramePtr;
		public global::System.IntPtr IHolographicCameraPtr;
	}
}

namespace Microsoft.Win32.SafeHandles
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeFindHandle,System.IO.FileSystem, Version=4.0.1.0, Culture=neutral, PublicKeyToke" +
		"n=b03f5f7f11d50a3a")]
	public unsafe class SafeFindHandle__System_IO_FileSystem : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeFindHandle__System_IO_FileSystem() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileSystem, Version=4.0.1.0, Culture=neutral, PublicKeyToke" +
		"n=b03f5f7f11d50a3a")]
	public unsafe class SafeFileHandle__System_IO_FileSystem : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeFileHandle__System_IO_FileSystem() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeThreadPoolIOHandle,System.Threading.Overlapped, Version=4.0.1.0, Culture=neutral" +
		", PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeThreadPoolIOHandle__System_Threading_Overlapped : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeThreadPoolIOHandle__System_Threading_Overlapped() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}
}

namespace Microsoft.Windows.ApplicationModel.Holographic
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboard+Vftbl,Microsoft.Windows.MixedReality.DotNetW" +
		"inRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHolographicKeyboard_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboard_Vftbl__SetPlacementOverride__Microsoft_Windows_MixedReality_DotNetWinRT SetPlacementOverride;
		public global::Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboard_Vftbl__SetPlacementOverrideWithMaxSize__Microsoft_Windows_MixedReality_DotNetWinRT SetPlacementOverrideWithMaxSize;
		public global::Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboard_Vftbl__ResetPlacementOverride__Microsoft_Windows_MixedReality_DotNetWinRT ResetPlacementOverride;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboard+Vftbl+_SetPlacementOverride,Microsoft.Window" +
		"s.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IHolographicKeyboard_Vftbl__SetPlacementOverride__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr spatialCoordinateSystemPtr, 
				global::System.Numerics.Vector3__System_Numerics_Vectors topCenterPosition, 
				global::System.Numerics.Quaternion__System_Numerics_Vectors orientation);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboard+Vftbl+_SetPlacementOverrideWithMaxSize,Micro" +
		"soft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IHolographicKeyboard_Vftbl__SetPlacementOverrideWithMaxSize__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr spatialCoordinateSystemPtr, 
				global::System.Numerics.Vector3__System_Numerics_Vectors topCenterPosition, 
				global::System.Numerics.Quaternion__System_Numerics_Vectors orientation, 
				global::System.Numerics.Vector2__System_Numerics_Vectors maxSize);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboard+Vftbl+_ResetPlacementOverride,Microsoft.Wind" +
		"ows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IHolographicKeyboard_Vftbl__ResetPlacementOverride__Microsoft_Windows_MixedReality_DotNetWinRT(global::System.IntPtr thisPtr);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboardStatics+Vftbl,Microsoft.Windows.MixedReality." +
		"DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHolographicKeyboardStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboardStatics_Vftbl__GetDefault__Microsoft_Windows_MixedReality_DotNetWinRT GetDefault;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboardStatics+Vftbl+_GetDefault,Microsoft.Windows.M" +
		"ixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IHolographicKeyboardStatics_Vftbl__GetDefault__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr* resultPtr);
}

namespace Microsoft.Windows.Devices.Haptics
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Devices.Haptics.ISimpleHapticsController+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Ver" +
		"sion=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISimpleHapticsController_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_Id;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_SupportedFeedback;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsIntensitySupported;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsPlayCountSupported;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsPlayDurationSupported;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsReplayPauseIntervalSupported;
		public global::Microsoft.Windows.Devices.Haptics.ISimpleHapticsController_Vftbl__StopFeedback__Microsoft_Windows_MixedReality_DotNetWinRT StopFeedback;
		public global::Microsoft.Windows.Devices.Haptics.ISimpleHapticsController_Vftbl__SendHapticFeedback__Microsoft_Windows_MixedReality_DotNetWinRT SendHapticFeedback;
		public global::Microsoft.Windows.Devices.Haptics.ISimpleHapticsController_Vftbl__SendHapticFeedbackWithIntensity__Microsoft_Windows_MixedReality_DotNetWinRT SendHapticFeedbackWithIntensity;
		public global::Microsoft.Windows.Devices.Haptics.ISimpleHapticsController_Vftbl__SendHapticFeedbackForDuration__Microsoft_Windows_MixedReality_DotNetWinRT SendHapticFeedbackForDuration;
		public global::Microsoft.Windows.Devices.Haptics.ISimpleHapticsController_Vftbl__SendHapticFeedbackForPlayCount__Microsoft_Windows_MixedReality_DotNetWinRT SendHapticFeedbackForPlayCount;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Devices.Haptics.ISimpleHapticsController+Vftbl+_StopFeedback,Microsoft.Windows.MixedReality.Do" +
		"tNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISimpleHapticsController_Vftbl__StopFeedback__Microsoft_Windows_MixedReality_DotNetWinRT(global::System.IntPtr thisPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Devices.Haptics.ISimpleHapticsController+Vftbl+_SendHapticFeedback,Microsoft.Windows.MixedReal" +
		"ity.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISimpleHapticsController_Vftbl__SendHapticFeedback__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr feedbackPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Devices.Haptics.ISimpleHapticsController+Vftbl+_SendHapticFeedbackWithIntensity,Microsoft.Wind" +
		"ows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISimpleHapticsController_Vftbl__SendHapticFeedbackWithIntensity__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr feedbackPtr, 
				double intensity);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Devices.Haptics.ISimpleHapticsController+Vftbl+_SendHapticFeedbackForDuration,Microsoft.Window" +
		"s.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISimpleHapticsController_Vftbl__SendHapticFeedbackForDuration__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr feedbackPtr, 
				double intensity, 
				global::WinRT.Interop._TimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT playDuration);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Devices.Haptics.ISimpleHapticsController+Vftbl+_SendHapticFeedbackForPlayCount,Microsoft.Windo" +
		"ws.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISimpleHapticsController_Vftbl__SendHapticFeedbackForPlayCount__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr feedbackPtr, 
				double intensity, 
				int playCount, 
				global::WinRT.Interop._TimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT replayPauseInterval);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Devices.Haptics.ISimpleHapticsControllerFeedback+Vftbl,Microsoft.Windows.MixedReality.DotNetWi" +
		"nRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISimpleHapticsControllerFeedback_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsUShort__Microsoft_Windows_MixedReality_DotNetWinRT get_Waveform;
		public global::WinRT.Interop._get_PropertyAsTimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT get_Duration;
	}
}

namespace Microsoft.Windows.Devices.Power
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Devices.Power.IBatteryReport+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0" +
		", Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IBatteryReport_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsInt__Microsoft_Windows_MixedReality_DotNetWinRT get_ChargeRateInMilliwatts;
		public global::WinRT.Interop._get_PropertyAsInt__Microsoft_Windows_MixedReality_DotNetWinRT get_DesignCapacityInMilliwattHours;
		public global::WinRT.Interop._get_PropertyAsInt__Microsoft_Windows_MixedReality_DotNetWinRT get_FullChargeCapacityInMilliwattHours;
		public global::WinRT.Interop._get_PropertyAsInt__Microsoft_Windows_MixedReality_DotNetWinRT get_RemainingCapacityInMilliwattHours;
		public global::WinRT.Interop._get_PropertyAsEnum__Microsoft_Windows_MixedReality_DotNetWinRT get_Status;
	}
}

namespace Microsoft.Windows.Foundation.Metadata
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Foundation.Metadata.IApiInformationStatics+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, V" +
		"ersion=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IApiInformationStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.Foundation.Metadata.IApiInformationStatics_Vftbl__IsTypePresent__Microsoft_Windows_MixedReality_DotNetWinRT IsTypePresent;
		public global::Microsoft.Windows.Foundation.Metadata.IApiInformationStatics_Vftbl__IsMethodPresent__Microsoft_Windows_MixedReality_DotNetWinRT IsMethodPresent;
		public global::Microsoft.Windows.Foundation.Metadata.IApiInformationStatics_Vftbl__IsMethodPresentWithArity__Microsoft_Windows_MixedReality_DotNetWinRT IsMethodPresentWithArity;
		public global::Microsoft.Windows.Foundation.Metadata.IApiInformationStatics_Vftbl__IsEventPresent__Microsoft_Windows_MixedReality_DotNetWinRT IsEventPresent;
		public global::Microsoft.Windows.Foundation.Metadata.IApiInformationStatics_Vftbl__IsPropertyPresent__Microsoft_Windows_MixedReality_DotNetWinRT IsPropertyPresent;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Foundation.Metadata.IApiInformationStatics+Vftbl+_IsTypePresent,Microsoft.Windows.MixedReality" +
		".DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IApiInformationStatics_Vftbl__IsTypePresent__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr typeNamePtr, 
				global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* resultPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Foundation.Metadata.IApiInformationStatics+Vftbl+_IsMethodPresent,Microsoft.Windows.MixedReali" +
		"ty.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IApiInformationStatics_Vftbl__IsMethodPresent__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr typeNamePtr, 
				global::System.IntPtr methodNamePtr, 
				global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* resultPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Foundation.Metadata.IApiInformationStatics+Vftbl+_IsMethodPresentWithArity,Microsoft.Windows.M" +
		"ixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IApiInformationStatics_Vftbl__IsMethodPresentWithArity__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr typeNamePtr, 
				global::System.IntPtr methodNamePtr, 
				uint inputParameterCount, 
				global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* resultPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Foundation.Metadata.IApiInformationStatics+Vftbl+_IsEventPresent,Microsoft.Windows.MixedRealit" +
		"y.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IApiInformationStatics_Vftbl__IsEventPresent__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr typeNamePtr, 
				global::System.IntPtr eventNamePtr, 
				global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* resultPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Foundation.Metadata.IApiInformationStatics+Vftbl+_IsPropertyPresent,Microsoft.Windows.MixedRea" +
		"lity.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IApiInformationStatics_Vftbl__IsPropertyPresent__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr typeNamePtr, 
				global::System.IntPtr propertyNamePtr, 
				global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* resultPtr);
}

namespace Microsoft.Windows.Graphics.Holographic
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.IHolographicFrame+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Versi" +
		"on=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHolographicFrame_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::System.IntPtr get_AddedCameras;
		public global::System.IntPtr get_RemovedCameras;
		public global::Microsoft.Windows.Graphics.Holographic.IHolographicFrame_Vftbl__GetRenderingParameters__Microsoft_Windows_MixedReality_DotNetWinRT GetRenderingParameters;
		public global::System.IntPtr get_Duration;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_CurrentPrediction;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.IHolographicFrame+Vftbl+_GetRenderingParameters,Microsoft.Windows.MixedRe" +
		"ality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IHolographicFrame_Vftbl__GetRenderingParameters__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr cameraPosePtr, 
				global::System.IntPtr* resultPtr);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.IHolographicCamera+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Vers" +
		"ion=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHolographicCamera_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::System.IntPtr get_RenderTargetSize;
		public global::System.IntPtr get_ViewportScaleFactor;
		public global::System.IntPtr put_ViewportScaleFactor;
		public global::System.IntPtr get_IsStereo;
		public global::WinRT.Interop._get_PropertyAsUInt__Microsoft_Windows_MixedReality_DotNetWinRT get_Id;
		public global::System.IntPtr SetNearPlaneDistance;
		public global::System.IntPtr SetFarPlaneDistance;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.IHolographicCamera6+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Ver" +
		"sion=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHolographicCamera6_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_ViewConfiguration;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.IHolographicViewConfiguration+Vftbl,Microsoft.Windows.MixedReality.DotNet" +
		"WinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHolographicViewConfiguration_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::System.IntPtr get_NativeRenderTargetSize;
		public global::System.IntPtr get_RenderTargetSize;
		public global::System.IntPtr RequestRenderTargetSize;
		public global::System.IntPtr get_SupportedPixelFormats;
		public global::System.IntPtr get_PixelFormat;
		public global::System.IntPtr put_PixelFormat;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsStereo;
		public global::WinRT.Interop._get_PropertyAsDouble__Microsoft_Windows_MixedReality_DotNetWinRT get_RefreshRate;
		public global::WinRT.Interop._get_PropertyAsEnum__Microsoft_Windows_MixedReality_DotNetWinRT get_Kind;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_Display;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsEnabled;
		public global::WinRT.Interop._put_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT put_IsEnabled;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.IHolographicViewConfiguration2+Vftbl,Microsoft.Windows.MixedReality.DotNe" +
		"tWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHolographicViewConfiguration2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_SupportedDepthReprojectionMethods;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.IHolographicFramePrediction+Vftbl,Microsoft.Windows.MixedReality.DotNetWi" +
		"nRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHolographicFramePrediction_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_CameraPoses;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.IHolographicCameraPose+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, " +
		"Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHolographicCameraPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_HolographicCamera;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.IHolographicCameraRenderingParameters4+Vftbl,Microsoft.Windows.MixedReali" +
		"ty.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHolographicCameraRenderingParameters4_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsEnum__Microsoft_Windows_MixedReality_DotNetWinRT get_DepthReprojectionMethod;
		public global::WinRT.Interop._put_PropertyAsEnum__Microsoft_Windows_MixedReality_DotNetWinRT put_DepthReprojectionMethod;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.IHolographicDisplay+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Ver" +
		"sion=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHolographicDisplay_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_DisplayName;
		public global::WinRT.Interop._get_PropertyAsSize__Microsoft_Windows_MixedReality_DotNetWinRT get_MaxViewportSize;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsStereo;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsOpaque;
		public global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplay_Vftbl__get_AdapterId__Microsoft_Windows_MixedReality_DotNetWinRT get_AdapterId;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_SpatialLocator;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.HolographicAdapterId,Microsoft.Windows.MixedReality.DotNetWinRT, Version=" +
		"1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct HolographicAdapterId__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public uint LowPart;
		public int HighPart;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.IHolographicDisplay+Vftbl+_get_AdapterId,Microsoft.Windows.MixedReality.D" +
		"otNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IHolographicDisplay_Vftbl__get_AdapterId__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::Microsoft.Windows.Graphics.Holographic.HolographicAdapterId__Microsoft_Windows_MixedReality_DotNetWinRT* value);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.IHolographicDisplay2+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Ve" +
		"rsion=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHolographicDisplay2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsDouble__Microsoft_Windows_MixedReality_DotNetWinRT get_RefreshRate;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.IHolographicDisplay3+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Ve" +
		"rsion=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHolographicDisplay3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplay3_Vftbl__TryGetViewConfiguration__Microsoft_Windows_MixedReality_DotNetWinRT TryGetViewConfiguration;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.HolographicViewConfigurationKind,Microsoft.Windows.MixedReality.DotNetWin" +
		"RT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum HolographicViewConfigurationKind__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		Display = 0,
		PhotoVideoCamera = 1,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.IHolographicDisplay3+Vftbl+_TryGetViewConfiguration,Microsoft.Windows.Mix" +
		"edReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IHolographicDisplay3_Vftbl__TryGetViewConfiguration__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::Microsoft.Windows.Graphics.Holographic.HolographicViewConfigurationKind__Microsoft_Windows_MixedReality_DotNetWinRT kind, 
				global::System.IntPtr* result);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.IHolographicDisplayStatics+Vftbl,Microsoft.Windows.MixedReality.DotNetWin" +
		"RT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHolographicDisplayStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT GetDefault;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Graphics.Holographic.IHolographicCameraRenderingParameters+Vftbl,Microsoft.Windows.MixedRealit" +
		"y.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHolographicCameraRenderingParameters_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
	}
}

namespace Microsoft.Windows.Perception
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.IPerceptionTimestamp+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0." +
		"0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IPerceptionTimestamp_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsDateTime__Microsoft_Windows_MixedReality_DotNetWinRT get_TargetTime;
		public global::WinRT.Interop._get_PropertyAsTimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT get_PredictionAmount;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.IPerceptionTimestamp2+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0" +
		".0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IPerceptionTimestamp2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsTimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT get_SystemRelativeTargetTime;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.IPerceptionTimestampHelperStatics+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT," +
		" Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IPerceptionTimestampHelperStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.Perception.IPerceptionTimestampHelperStatics_Vftbl__FromHistoricalTargetTime__Microsoft_Windows_MixedReality_DotNetWinRT FromHistoricalTargetTime;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.IPerceptionTimestampHelperStatics+Vftbl+_FromHistoricalTargetTime,Microsoft.Windows" +
		".MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IPerceptionTimestampHelperStatics_Vftbl__FromHistoricalTargetTime__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::WinRT.Interop._DateTime__Microsoft_Windows_MixedReality_DotNetWinRT targetTimePtr, 
				global::System.IntPtr* resultPtr);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.IPerceptionTimestampHelperStatics2+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT" +
		", Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IPerceptionTimestampHelperStatics2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.Perception.IPerceptionTimestampHelperStatics2_Vftbl__FromSystemRelativeTargetTime__Microsoft_Windows_MixedReality_DotNetWinRT FromSystemRelativeTargetTime;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.IPerceptionTimestampHelperStatics2+Vftbl+_FromSystemRelativeTargetTime,Microsoft.Wi" +
		"ndows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IPerceptionTimestampHelperStatics2_Vftbl__FromSystemRelativeTargetTime__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::WinRT.Interop._TimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT timeSpanPtr, 
				global::System.IntPtr* resultPtr);
}

namespace Microsoft.Windows.Perception.People
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.IHeadPose+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0," +
		" Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHeadPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsVector3__Microsoft_Windows_MixedReality_DotNetWinRT get_Position;
		public global::WinRT.Interop._get_PropertyAsVector3__Microsoft_Windows_MixedReality_DotNetWinRT get_ForwardDirection;
		public global::WinRT.Interop._get_PropertyAsVector3__Microsoft_Windows_MixedReality_DotNetWinRT get_UpDirection;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.IEyesPoseStatics+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1" +
		".0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IEyesPoseStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT IsSupported;
		public global::Microsoft.Windows.Perception.People.IEyesPoseStatics_Vftbl__RequestAccessAsync__Microsoft_Windows_MixedReality_DotNetWinRT RequestAccessAsync;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.IEyesPoseStatics+Vftbl+_RequestAccessAsync,Microsoft.Windows.MixedReality.Do" +
		"tNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IEyesPoseStatics_Vftbl__RequestAccessAsync__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr* operationPtr);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.IEyesPose+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0," +
		" Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IEyesPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsCalibrationValid;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_Gaze;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_UpdateTimestamp;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.IHandPose+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0," +
		" Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHandPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.Perception.People.IHandPose_Vftbl__TryGetJoint__Microsoft_Windows_MixedReality_DotNetWinRT TryGetJoint;
		public global::Microsoft.Windows.Perception.People.IHandPose_Vftbl__TryGetJoints__Microsoft_Windows_MixedReality_DotNetWinRT TryGetJoints;
		public global::Microsoft.Windows.Perception.People.IHandPose_Vftbl__GetRelativeJoint__Microsoft_Windows_MixedReality_DotNetWinRT GetRelativeJoint;
		public global::Microsoft.Windows.Perception.People.IHandPose_Vftbl__GetRelativeJoints__Microsoft_Windows_MixedReality_DotNetWinRT GetRelativeJoints;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.HandJointKind,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, C" +
		"ulture=neutral, PublicKeyToken=null")]
	public enum HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		Palm = 0,
		Wrist = 1,
		ThumbMetacarpal = 2,
		ThumbProximal = 3,
		ThumbDistal = 4,
		ThumbTip = 5,
		IndexMetacarpal = 6,
		IndexProximal = 7,
		IndexIntermediate = 8,
		IndexDistal = 9,
		IndexTip = 10,
		MiddleMetacarpal = 11,
		MiddleProximal = 12,
		MiddleIntermediate = 13,
		MiddleDistal = 14,
		MiddleTip = 15,
		RingMetacarpal = 16,
		RingProximal = 17,
		RingIntermediate = 18,
		RingDistal = 19,
		RingTip = 20,
		LittleMetacarpal = 21,
		LittleProximal = 22,
		LittleIntermediate = 23,
		LittleDistal = 24,
		LittleTip = 25,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.JointPose,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Cultu" +
		"re=neutral, PublicKeyToken=null")]
	public unsafe partial struct JointPose__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::System.Numerics.Quaternion__System_Numerics_Vectors Orientation;
		public global::System.Numerics.Vector3__System_Numerics_Vectors Position;
		public float Radius;
		public global::Microsoft.Windows.Perception.People.JointPoseAccuracy__Microsoft_Windows_MixedReality_DotNetWinRT Accuracy;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.JointPoseAccuracy,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0." +
		"0, Culture=neutral, PublicKeyToken=null")]
	public enum JointPoseAccuracy__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		High = 0,
		Approximate = 1,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.IHandPose+Vftbl+_TryGetJoint,Microsoft.Windows.MixedReality.DotNetWinRT, Ver" +
		"sion=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IHandPose_Vftbl__TryGetJoint__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr coordinateSystemPtr, 
				global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT joint, 
				global::Microsoft.Windows.Perception.People.JointPose__Microsoft_Windows_MixedReality_DotNetWinRT* jointPose, 
				global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* result);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.IHandPose+Vftbl+_TryGetJoints,Microsoft.Windows.MixedReality.DotNetWinRT, Ve" +
		"rsion=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IHandPose_Vftbl__TryGetJoints__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr coordinateSystemPtr, 
				uint jointsLength, 
				global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT[] joints, 
				uint jointPosesLength, 
				global::Microsoft.Windows.Perception.People.JointPose__Microsoft_Windows_MixedReality_DotNetWinRT[] jointPoses, 
				global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* result);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.IHandPose+Vftbl+_GetRelativeJoint,Microsoft.Windows.MixedReality.DotNetWinRT" +
		", Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IHandPose_Vftbl__GetRelativeJoint__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT joint, 
				global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT referenceJoint, 
				global::Microsoft.Windows.Perception.People.JointPose__Microsoft_Windows_MixedReality_DotNetWinRT* resultPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.IHandPose+Vftbl+_GetRelativeJoints,Microsoft.Windows.MixedReality.DotNetWinR" +
		"T, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IHandPose_Vftbl__GetRelativeJoints__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				uint jointsLength, 
				global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT[] joints, 
				uint referenceJointsLength, 
				global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT[] referenceJoints, 
				uint jointPosesLength, 
				global::Microsoft.Windows.Perception.People.JointPose__Microsoft_Windows_MixedReality_DotNetWinRT[] jointPoses);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.IHandMeshObserver+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Version=" +
		"1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHandMeshObserver_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_Source;
		public global::WinRT.Interop._get_PropertyAsUInt__Microsoft_Windows_MixedReality_DotNetWinRT get_TriangleIndexCount;
		public global::WinRT.Interop._get_PropertyAsUInt__Microsoft_Windows_MixedReality_DotNetWinRT get_VertexCount;
		public global::Microsoft.Windows.Perception.People.IHandMeshObserver_Vftbl__GetTriangleIndices__Microsoft_Windows_MixedReality_DotNetWinRT GetTriangleIndices;
		public global::Microsoft.Windows.Perception.People.IHandMeshObserver_Vftbl__GetVertexStateForPose__Microsoft_Windows_MixedReality_DotNetWinRT GetVertexStateForPose;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_NeutralPose;
		public global::WinRT.Interop._get_PropertyAsInt__Microsoft_Windows_MixedReality_DotNetWinRT get_NeutralPoseVersion;
		public global::WinRT.Interop._get_PropertyAsInt__Microsoft_Windows_MixedReality_DotNetWinRT get_ModelId;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.IHandMeshObserver+Vftbl+_GetTriangleIndices,Microsoft.Windows.MixedReality.D" +
		"otNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IHandMeshObserver_Vftbl__GetTriangleIndices__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				uint indicesLength, 
				ushort[] indices);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.IHandMeshObserver+Vftbl+_GetVertexStateForPose,Microsoft.Windows.MixedRealit" +
		"y.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IHandMeshObserver_Vftbl__GetVertexStateForPose__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr handPosePtr, 
				global::System.IntPtr* resultPtr);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.IHandMeshVertexState+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Versi" +
		"on=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IHandMeshVertexState_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_CoordinateSystem;
		public global::Microsoft.Windows.Perception.People.IHandMeshVertexState_Vftbl__GetVertices__Microsoft_Windows_MixedReality_DotNetWinRT GetVertices;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_UpdateTimestamp;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.HandMeshVertex,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, " +
		"Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct HandMeshVertex__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::System.Numerics.Vector3__System_Numerics_Vectors Position;
		public global::System.Numerics.Vector3__System_Numerics_Vectors Normal;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.People.IHandMeshVertexState+Vftbl+_GetVertices,Microsoft.Windows.MixedReality.DotNe" +
		"tWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IHandMeshVertexState_Vftbl__GetVertices__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				uint verticesLength, 
				global::Microsoft.Windows.Perception.People.HandMeshVertex__Microsoft_Windows_MixedReality_DotNetWinRT[] vertices);
}

namespace Microsoft.Windows.Perception.Spatial
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.IReference_SpatialRay+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Ver" +
		"sion=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct IReference_SpatialRay_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.Perception.Spatial.IReference_SpatialRay_Vftbl__get_PropertyAsSpatialRay__Microsoft_Windows_MixedReality_DotNetWinRT get_Value;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.SpatialRay,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Cul" +
		"ture=neutral, PublicKeyToken=null")]
	public unsafe partial struct SpatialRay__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::System.Numerics.Vector3__System_Numerics_Vectors Origin;
		public global::System.Numerics.Vector3__System_Numerics_Vectors Direction;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.IReference_SpatialRay+Vftbl+_get_PropertyAsSpatialRay,Microsoft.Windows.Mix" +
		"edReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IReference_SpatialRay_Vftbl__get_PropertyAsSpatialRay__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::Microsoft.Windows.Perception.Spatial.SpatialRay__Microsoft_Windows_MixedReality_DotNetWinRT* value);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.ISpatialCoordinateSystem+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, " +
		"Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialCoordinateSystem_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.Perception.Spatial.ISpatialCoordinateSystem_Vftbl__TryGetTransformTo__Microsoft_Windows_MixedReality_DotNetWinRT TryGetTransformTo;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.ISpatialCoordinateSystem+Vftbl+_TryGetTransformTo,Microsoft.Windows.MixedRe" +
		"ality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISpatialCoordinateSystem_Vftbl__TryGetTransformTo__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr targetPtr, 
				global::System.IntPtr* value);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.ISpatialAnchorExporterStatics+Vftbl,Microsoft.Windows.MixedReality.DotNetWi" +
		"nRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialAnchorExporterStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT GetDefault;
		public global::Microsoft.Windows.Perception.Spatial.ISpatialAnchorExporterStatics_Vftbl__RequestAccessAsync__Microsoft_Windows_MixedReality_DotNetWinRT RequestAccessAsync;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.ISpatialAnchorExporterStatics+Vftbl+_RequestAccessAsync,Microsoft.Windows.M" +
		"ixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISpatialAnchorExporterStatics_Vftbl__RequestAccessAsync__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr* operationPtr);
}

namespace Microsoft.Windows.Perception.Spatial.Preview
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics+Vftbl,Microsoft.Windows.MixedRea" +
		"lity.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialGraphInteropPreviewStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics_Vftbl__CreateCoordinateSystemForNode__Microsoft_Windows_MixedReality_DotNetWinRT CreateCoordinateSystemForNode;
		public global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics_Vftbl__CreateCoordinateSystemForNodeWithPosition__Microsoft_Windows_MixedReality_DotNetWinRT CreateCoordinateSystemForNodeWithPosition;
		public global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics_Vftbl__CreateCoordinateSystemForNodeWithPositionAndOrientation__Microsoft_Windows_MixedReality_DotNetWinRT CreateCoordinateSystemForNodeWithPositionAndOrientation;
		public global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics_Vftbl__CreateLocatorForNode__Microsoft_Windows_MixedReality_DotNetWinRT CreateLocatorForNode;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics+Vftbl+_CreateCoordinateSystemFor" +
		"Node,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISpatialGraphInteropPreviewStatics_Vftbl__CreateCoordinateSystemForNode__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.Guid nodeId, 
				global::System.IntPtr* result);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics+Vftbl+_CreateCoordinateSystemFor" +
		"NodeWithPosition,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=n" +
		"ull")]
	public unsafe delegate int ISpatialGraphInteropPreviewStatics_Vftbl__CreateCoordinateSystemForNodeWithPosition__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.Guid nodeId, 
				global::System.Numerics.Vector3__System_Numerics_Vectors position, 
				global::System.IntPtr* result);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics+Vftbl+_CreateCoordinateSystemFor" +
		"NodeWithPositionAndOrientation,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, Pu" +
		"blicKeyToken=null")]
	public unsafe delegate int ISpatialGraphInteropPreviewStatics_Vftbl__CreateCoordinateSystemForNodeWithPositionAndOrientation__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.Guid nodeId, 
				global::System.Numerics.Vector3__System_Numerics_Vectors position, 
				global::System.Numerics.Quaternion__System_Numerics_Vectors orientation, 
				global::System.IntPtr* result);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics+Vftbl+_CreateLocatorForNode,Micr" +
		"osoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISpatialGraphInteropPreviewStatics_Vftbl__CreateLocatorForNode__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.Guid nodeId, 
				global::System.IntPtr* result);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropFrameOfReferencePreview+Vftbl,Microsoft.Windows" +
		".MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialGraphInteropFrameOfReferencePreview_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_CoordinateSystem;
		public global::WinRT.Interop._get_PropertyAsGuid__Microsoft_Windows_MixedReality_DotNetWinRT get_NodeId;
		public global::WinRT.Interop._get_PropertyAsMatrix4x4__Microsoft_Windows_MixedReality_DotNetWinRT get_CoordinateSystemToNodeTransform;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics2+Vftbl,Microsoft.Windows.MixedRe" +
		"ality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialGraphInteropPreviewStatics2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics2_Vftbl__TryCreateFrameOfReference__Microsoft_Windows_MixedReality_DotNetWinRT TryCreateFrameOfReference;
		public global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics2_Vftbl__TryCreateFrameOfReferenceWithPosition__Microsoft_Windows_MixedReality_DotNetWinRT TryCreateFrameOfReferenceWithPosition;
		public global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics2_Vftbl__TryCreateFrameOfReferenceWithPositionAndOrientation__Microsoft_Windows_MixedReality_DotNetWinRT TryCreateFrameOfReferenceWithPositionAndOrientation;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics2+Vftbl+_TryCreateFrameOfReferenc" +
		"e,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISpatialGraphInteropPreviewStatics2_Vftbl__TryCreateFrameOfReference__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr coordinateSystemPtr, 
				global::System.IntPtr* result);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics2+Vftbl+_TryCreateFrameOfReferenc" +
		"eWithPosition,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe delegate int ISpatialGraphInteropPreviewStatics2_Vftbl__TryCreateFrameOfReferenceWithPosition__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr coordinateSystemPtr, 
				global::System.Numerics.Vector3__System_Numerics_Vectors position, 
				global::System.IntPtr* result);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics2+Vftbl+_TryCreateFrameOfReferenc" +
		"eWithPositionAndOrientation,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, Publi" +
		"cKeyToken=null")]
	public unsafe delegate int ISpatialGraphInteropPreviewStatics2_Vftbl__TryCreateFrameOfReferenceWithPositionAndOrientation__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr coordinateSystemPtr, 
				global::System.Numerics.Vector3__System_Numerics_Vectors position, 
				global::System.Numerics.Quaternion__System_Numerics_Vectors orientation, 
				global::System.IntPtr* result);
}

namespace Microsoft.Windows.UI.Input.Spatial
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController+Vftbl,Microsoft.Windows.MixedReality.DotNetWinR" +
		"T, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialInteractionController_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_HasTouchpad;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_HasThumbstick;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_SimpleHapticsController;
		public global::WinRT.Interop._get_PropertyAsUShort__Microsoft_Windows_MixedReality_DotNetWinRT get_VendorId;
		public global::WinRT.Interop._get_PropertyAsUShort__Microsoft_Windows_MixedReality_DotNetWinRT get_ProductId;
		public global::WinRT.Interop._get_PropertyAsUShort__Microsoft_Windows_MixedReality_DotNetWinRT get_Version;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController2+Vftbl,Microsoft.Windows.MixedReality.DotNetWin" +
		"RT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialInteractionController2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController2_Vftbl__TryGetRenderableModelAsync__Microsoft_Windows_MixedReality_DotNetWinRT TryGetRenderableModelAsync;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController2+Vftbl+_TryGetRenderableModelAsync,Microsoft.Wi" +
		"ndows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISpatialInteractionController2_Vftbl__TryGetRenderableModelAsync__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr* operationPtr);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController3+Vftbl,Microsoft.Windows.MixedReality.DotNetWin" +
		"RT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialInteractionController3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController3_Vftbl__TryGetBatteryReport__Microsoft_Windows_MixedReality_DotNetWinRT TryGetBatteryReport;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController3+Vftbl+_TryGetBatteryReport,Microsoft.Windows.M" +
		"ixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISpatialInteractionController3_Vftbl__TryGetBatteryReport__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr* resultPtr);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, V" +
		"ersion=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialInteractionSource_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsUInt__Microsoft_Windows_MixedReality_DotNetWinRT get_Id;
		public global::WinRT.Interop._get_PropertyAsEnum__Microsoft_Windows_MixedReality_DotNetWinRT get_Kind;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource2+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, " +
		"Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialInteractionSource2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsPointingSupported;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsMenuSupported;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsGraspSupported;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_Controller;
		public global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource2_Vftbl__TryGetStateAtTimestamp__Microsoft_Windows_MixedReality_DotNetWinRT TryGetStateAtTimestamp;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource2+Vftbl+_TryGetStateAtTimestamp,Microsoft.Windows.Mi" +
		"xedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISpatialInteractionSource2_Vftbl__TryGetStateAtTimestamp__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr timestampPtr, 
				global::System.IntPtr* resultPtr);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource3+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, " +
		"Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialInteractionSource3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsEnum__Microsoft_Windows_MixedReality_DotNetWinRT get_Handedness;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource4+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, " +
		"Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialInteractionSource4_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource4_Vftbl__TryCreateHandMeshObserver__Microsoft_Windows_MixedReality_DotNetWinRT TryCreateHandMeshObserver;
		public global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource4_Vftbl__TryCreateHandMeshObserverAsync__Microsoft_Windows_MixedReality_DotNetWinRT TryCreateHandMeshObserverAsync;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource4+Vftbl+_TryCreateHandMeshObserver,Microsoft.Windows" +
		".MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISpatialInteractionSource4_Vftbl__TryCreateHandMeshObserver__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr* resultPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource4+Vftbl+_TryCreateHandMeshObserverAsync,Microsoft.Wi" +
		"ndows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISpatialInteractionSource4_Vftbl__TryCreateHandMeshObserverAsync__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr* operationPtr);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose+Vftbl,Microsoft.Windows.MixedReality.Dot" +
		"NetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialPointerInteractionSourcePose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsVector3__Microsoft_Windows_MixedReality_DotNetWinRT get_Position;
		public global::WinRT.Interop._get_PropertyAsVector3__Microsoft_Windows_MixedReality_DotNetWinRT get_ForwardDirection;
		public global::WinRT.Interop._get_PropertyAsVector3__Microsoft_Windows_MixedReality_DotNetWinRT get_UpDirection;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose2+Vftbl,Microsoft.Windows.MixedReality.Do" +
		"tNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialPointerInteractionSourcePose2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsQuaternion__Microsoft_Windows_MixedReality_DotNetWinRT get_Orientation;
		public global::WinRT.Interop._get_PropertyAsEnum__Microsoft_Windows_MixedReality_DotNetWinRT get_PositionAccuracy;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPoseStatics+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, " +
		"Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialPointerPoseStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPoseStatics_Vftbl__TryGetAtTimestamp__Microsoft_Windows_MixedReality_DotNetWinRT TryGetAtTimestamp;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPoseStatics+Vftbl+_TryGetAtTimestamp,Microsoft.Windows.MixedRe" +
		"ality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISpatialPointerPoseStatics_Vftbl__TryGetAtTimestamp__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr coordinateSystemPtr, 
				global::System.IntPtr timestampPtr, 
				global::System.IntPtr* resultPtr);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Version" +
		"=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialPointerPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_Timestamp;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_Head;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose2+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Versio" +
		"n=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialPointerPose2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose2_Vftbl__TryGetInteractionSourcePose__Microsoft_Windows_MixedReality_DotNetWinRT TryGetInteractionSourcePose;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose2+Vftbl+_TryGetInteractionSourcePose,Microsoft.Windows.Mix" +
		"edReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISpatialPointerPose2_Vftbl__TryGetInteractionSourcePose__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr sourcePtr, 
				global::System.IntPtr* resultPtr);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose3+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Versio" +
		"n=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialPointerPose3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_Eyes;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsHeadCapturedBySystem;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionManagerStatics+Vftbl,Microsoft.Windows.MixedReality.DotNet" +
		"WinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialInteractionManagerStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionManagerStatics_Vftbl__GetForCurrentView__Microsoft_Windows_MixedReality_DotNetWinRT GetForCurrentView;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionManagerStatics+Vftbl+_GetForCurrentView,Microsoft.Windows." +
		"MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISpatialInteractionManagerStatics_Vftbl__GetForCurrentView__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr* resultPtr);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionManager+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, " +
		"Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialInteractionManager_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._add_EventHandler__Microsoft_Windows_MixedReality_DotNetWinRT add_SourceDetected;
		public global::WinRT.Interop._remove_EventHandler__Microsoft_Windows_MixedReality_DotNetWinRT remove_SourceDetected;
		public global::WinRT.Interop._add_EventHandler__Microsoft_Windows_MixedReality_DotNetWinRT add_SourceLost;
		public global::WinRT.Interop._remove_EventHandler__Microsoft_Windows_MixedReality_DotNetWinRT remove_SourceLost;
		public global::WinRT.Interop._add_EventHandler__Microsoft_Windows_MixedReality_DotNetWinRT add_SourceUpdated;
		public global::WinRT.Interop._remove_EventHandler__Microsoft_Windows_MixedReality_DotNetWinRT remove_SourceUpdated;
		public global::WinRT.Interop._add_EventHandler__Microsoft_Windows_MixedReality_DotNetWinRT add_SourcePressed;
		public global::WinRT.Interop._remove_EventHandler__Microsoft_Windows_MixedReality_DotNetWinRT remove_SourcePressed;
		public global::WinRT.Interop._add_EventHandler__Microsoft_Windows_MixedReality_DotNetWinRT add_SourceReleased;
		public global::WinRT.Interop._remove_EventHandler__Microsoft_Windows_MixedReality_DotNetWinRT remove_SourceReleased;
		public global::WinRT.Interop._add_EventHandler__Microsoft_Windows_MixedReality_DotNetWinRT add_InteractionDetected;
		public global::WinRT.Interop._remove_EventHandler__Microsoft_Windows_MixedReality_DotNetWinRT remove_InteractionDetected;
		public global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionManager_Vftbl__GetDetectedSourcesAtTimestamp__Microsoft_Windows_MixedReality_DotNetWinRT GetDetectedSourcesAtTimestamp;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionManager+Vftbl+_GetDetectedSourcesAtTimestamp,Microsoft.Win" +
		"dows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISpatialInteractionManager_Vftbl__GetDetectedSourcesAtTimestamp__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr timestampPtr, 
				global::System.IntPtr* resultPtr);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState+Vftbl,Microsoft.Windows.MixedReality.DotNetWin" +
		"RT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialInteractionSourceState_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_Source;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_Properties;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsPressed;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_Timestamp;
		public global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState_Vftbl__TryGetPointerPose__Microsoft_Windows_MixedReality_DotNetWinRT TryGetPointerPose;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState+Vftbl+_TryGetPointerPose,Microsoft.Windows.Mix" +
		"edReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISpatialInteractionSourceState_Vftbl__TryGetPointerPose__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr coordinateSystemPtr, 
				global::System.IntPtr* resultPtr);

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState2+Vftbl,Microsoft.Windows.MixedReality.DotNetWi" +
		"nRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialInteractionSourceState2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsSelectPressed;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsMenuPressed;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_IsGrasped;
		public global::WinRT.Interop._get_PropertyAsDouble__Microsoft_Windows_MixedReality_DotNetWinRT get_SelectPressedValue;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_ControllerProperties;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState3+Vftbl,Microsoft.Windows.MixedReality.DotNetWi" +
		"nRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct ISpatialInteractionSourceState3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState3_Vftbl__TryGetHandPose__Microsoft_Windows_MixedReality_DotNetWinRT TryGetHandPose;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState3+Vftbl+_TryGetHandPose,Microsoft.Windows.Mixed" +
		"Reality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int ISpatialInteractionSourceState3_Vftbl__TryGetHandPose__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr* resultPtr);
}

namespace SQLite4Unity3d
{
	[global::System.Runtime.InteropServices.McgRedirectedType("SQLite4Unity3d.SQLite3+Result,Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum SQLite3_Result__Assembly_CSharp
	{
		OK = 0,
		Error = 1,
		Internal = 2,
		Perm = 3,
		Abort = 4,
		Busy = 5,
		Locked = 6,
		NoMem = 7,
		ReadOnly = 8,
		Interrupt = 9,
		IOError = 10,
		Corrupt = 11,
		NotFound = 12,
		Full = 13,
		CannotOpen = 14,
		LockErr = 15,
		Empty = 16,
		SchemaChngd = 17,
		TooBig = 18,
		Constraint = 19,
		Mismatch = 20,
		Misuse = 21,
		NotImplementedLFS = 22,
		AccessDenied = 23,
		Format = 24,
		Range = 25,
		NonDBFile = 26,
		Notice = 27,
		Warning = 28,
		Row = 100,
		Done = 101,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("SQLite4Unity3d.SQLite3+ConfigOption,Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum SQLite3_ConfigOption__Assembly_CSharp
	{
		SingleThread = 1,
		MultiThread = 2,
		Serialized = 3,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("SQLite4Unity3d.SQLite3+ColType,Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum SQLite3_ColType__Assembly_CSharp
	{
		Integer = 1,
		Float = 2,
		Text = 3,
		Blob = 4,
		Null = 5,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("SQLite4Unity3d.SQLite3+ExtendedResult,Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum SQLite3_ExtendedResult__Assembly_CSharp
	{
		BusyRecovery = 261,
		LockedSharedcache = 262,
		ReadonlyRecovery = 264,
		IOErrorRead = 266,
		CorruptVTab = 267,
		CannottOpenNoTempDir = 270,
		ConstraintCheck = 275,
		NoticeRecoverWAL = 283,
		AbortRollback = 516,
		ReadonlyCannotLock = 520,
		IOErrorShortRead = 522,
		CannotOpenIsDir = 526,
		ConstraintCommitHook = 531,
		NoticeRecoverRollback = 539,
		ReadonlyRollback = 776,
		IOErrorWrite = 778,
		CannotOpenFullPath = 782,
		ConstraintForeignKey = 787,
		IOErrorFsync = 1034,
		ConstraintFunction = 1043,
		IOErrorDirFSync = 1290,
		ConstraintNotNull = 1299,
		IOErrorTruncate = 1546,
		ConstraintPrimaryKey = 1555,
		IOErrorFStat = 1802,
		ConstraintTrigger = 1811,
		IOErrorUnlock = 2058,
		ConstraintUnique = 2067,
		IOErrorRdlock = 2314,
		ConstraintVTab = 2323,
		IOErrorDelete = 2570,
		IOErrorBlocked = 2826,
		IOErrorNoMem = 3082,
		IOErrorAccess = 3338,
		IOErrorCheckReservedLock = 3594,
		IOErrorLock = 3850,
		IOErrorClose = 4106,
		IOErrorDirClose = 4362,
		IOErrorSHMOpen = 4618,
		IOErrorSHMSize = 4874,
		IOErrorSHMLock = 5130,
		IOErrorSHMMap = 5386,
		IOErrorSeek = 5642,
		IOErrorDeleteNoEnt = 5898,
		IOErrorMMap = 6154,
	}
}

namespace System
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Enum,System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial class Enum__System_Private_CoreLib
	{
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Delegate,System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial class Delegate__System_Private_CoreLib
	{
		public object m_firstParameter;
		public object m_helperObject;
		public global::System.IntPtr m_extraFunctionPointerOrData;
		public global::System.IntPtr m_functionPointer;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.MulticastDelegate,System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a" +
		"3a")]
	public unsafe partial class MulticastDelegate__System_Private_CoreLib : global::System.Delegate__System_Private_CoreLib
	{
	}
}

namespace System.IO
{
	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.IO.FileShare,System.IO.FileSystem.Primitives, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11" +
		"d50a3a")]
	public enum FileShare__System_IO_FileSystem_Primitives
	{
		None = 0,
		Read = 1,
		Write = 2,
		ReadWrite = 3,
		Delete = 4,
		Inheritable = 16,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.IO.FileMode,System.IO.FileSystem.Primitives, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d" +
		"50a3a")]
	public enum FileMode__System_IO_FileSystem_Primitives
	{
		CreateNew = 1,
		Create = 2,
		Open = 3,
		OpenOrCreate = 4,
		Truncate = 5,
		Append = 6,
	}
}

namespace System.Numerics
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Numerics.Vector3,System.Numerics.Vectors, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a" +
		"3a")]
	public unsafe partial struct Vector3__System_Numerics_Vectors
	{
		public float X;
		public float Y;
		public float Z;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Numerics.Quaternion,System.Numerics.Vectors, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d" +
		"50a3a")]
	public unsafe partial struct Quaternion__System_Numerics_Vectors
	{
		public float X;
		public float Y;
		public float Z;
		public float W;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Numerics.Matrix4x4,System.Numerics.Vectors, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d5" +
		"0a3a")]
	public unsafe partial struct Matrix4x4__System_Numerics_Vectors
	{
		public float M11;
		public float M12;
		public float M13;
		public float M14;
		public float M21;
		public float M22;
		public float M23;
		public float M24;
		public float M31;
		public float M32;
		public float M33;
		public float M34;
		public float M41;
		public float M42;
		public float M43;
		public float M44;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Numerics.Vector2,System.Numerics.Vectors, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a" +
		"3a")]
	public unsafe partial struct Vector2__System_Numerics_Vectors
	{
		public float X;
		public float Y;
	}
}

namespace System.Runtime.InteropServices
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.IMarshal,System.Runtime.WindowsRuntime, Version=4.0.11.0, Culture=neutral, Public" +
		"KeyToken=b77a5c561934e089")]
	public unsafe interface IMarshal__System_Runtime_WindowsRuntime
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetUnmarshalClass(
					ref global::System.Guid riid, 
					global::System.IntPtr pv, 
					uint dwDestContext, 
					global::System.IntPtr pvDestContext, 
					uint mshlFlags, 
					out global::System.Guid pCid);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetMarshalSizeMax(
					ref global::System.Guid riid, 
					global::System.IntPtr pv, 
					uint dwDestContext, 
					global::System.IntPtr pvDestContext, 
					uint mshlflags, 
					out uint pSize);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void MarshalInterface(
					global::System.IntPtr pStm, 
					ref global::System.Guid riid, 
					global::System.IntPtr pv, 
					uint dwDestContext, 
					global::System.IntPtr pvDestContext, 
					uint mshlflags);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void UnmarshalInterface(
					global::System.IntPtr pStm, 
					ref global::System.Guid riid, 
					out global::System.IntPtr ppv);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void ReleaseMarshalData(global::System.IntPtr pStm);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void DisconnectObject(uint dwReserved);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.IAgileObject,System.Runtime.WindowsRuntime, Version=4.0.11.0, Culture=neutral, Pu" +
		"blicKeyToken=b77a5c561934e089")]
	public unsafe interface IAgileObject__System_Runtime_WindowsRuntime
	{
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.HSTRING,System.Private.Interop, Version=4.0.0.0, Culture=neutral, PublicKeyToken=" +
		"b03f5f7f11d50a3a")]
	public unsafe partial struct HSTRING__System_Private_Interop
	{
		public global::System.IntPtr handle;
	}
}

namespace System.Runtime.InteropServices.ComTypes
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
		"icKeyToken=b03f5f7f11d50a3a")]
	public unsafe interface ITypeInfo__System_Private_Interop
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetTypeAttr(out global::System.IntPtr ppTypeAttr);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetTypeComp(out global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop ppTComp);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetFuncDesc(
					int index, 
					out global::System.IntPtr ppFuncDesc);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetVarDesc(
					int index, 
					out global::System.IntPtr ppVarDesc);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetNames(
					int memid, 
					string[] rgBstrNames, 
					int cMaxNames, 
					out int pcNames);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetRefTypeOfImplType(
					int index, 
					out int href);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetImplTypeFlags(
					int index, 
					out global::System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS__System_Private_Interop pImplTypeFlags);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetIDsOfNames(
					string[] rgszNames, 
					int cNames, 
					int[] pMemId);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Invoke(
					object pvInstance, 
					int memid, 
					short wFlags, 
					ref global::System.Runtime.InteropServices.ComTypes.DISPPARAMS__System_Private_Interop pDispParams, 
					global::System.IntPtr pVarResult, 
					global::System.IntPtr pExcepInfo, 
					out int puArgErr);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetDocumentation(
					int index, 
					out string strName, 
					out string strDocString, 
					out int dwHelpContext, 
					out string strHelpFile);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetDllEntry(
					int memid, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop invKind, 
					global::System.IntPtr pBstrDllName, 
					global::System.IntPtr pBstrName, 
					global::System.IntPtr pwOrdinal);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetRefTypeInfo(
					int hRef, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTI);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void AddressOfMember(
					int memid, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop invKind, 
					out global::System.IntPtr ppv);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void CreateInstance(
					object pUnkOuter, 
					ref global::System.Guid riid, 
					out object ppvObj);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetMops(
					int memid, 
					out string pBstrMops);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetContainingTypeLib(
					out global::System.Runtime.InteropServices.ComTypes.ITypeLib__System_Private_Interop ppTLB, 
					out int pIndex);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void ReleaseTypeAttr(global::System.IntPtr pTypeAttr);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void ReleaseFuncDesc(global::System.IntPtr pFuncDesc);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void ReleaseVarDesc(global::System.IntPtr pVarDesc);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.ITypeComp,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
		"icKeyToken=b03f5f7f11d50a3a")]
	public unsafe interface ITypeComp__System_Private_Interop
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Bind(
					string szName, 
					int lHashVal, 
					short wFlags, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					out global::System.Runtime.InteropServices.ComTypes.DESCKIND__System_Private_Interop pDescKind, 
					out global::System.Runtime.InteropServices.ComTypes.BINDPTR__System_Private_Interop pBindPtr);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void BindType(
					string szName, 
					int lHashVal, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop ppTComp);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.ITypeLib,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publi" +
		"cKeyToken=b03f5f7f11d50a3a")]
	public unsafe interface ITypeLib__System_Private_Interop
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int GetTypeInfoCount();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetTypeInfo(
					int index, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTI);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetTypeInfoType(
					int index, 
					out global::System.Runtime.InteropServices.ComTypes.TYPEKIND__System_Private_Interop pTKind);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetTypeInfoOfGuid(
					ref global::System.Guid guid, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTInfo);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetLibAttr(out global::System.IntPtr ppTLibAttr);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetTypeComp(out global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop ppTComp);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetDocumentation(
					int index, 
					out string strName, 
					out string strDocString, 
					out int dwHelpContext, 
					out string strHelpFile);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsName(
					string szNameBuf, 
					int lHashVal);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void FindName(
					string szNameBuf, 
					int lHashVal, 
					global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop[] ppTInfo, 
					int[] rgMemId, 
					ref short pcFound);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void ReleaseTLibAttr(global::System.IntPtr pTLibAttr);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.DESCKIND,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publi" +
		"cKeyToken=b03f5f7f11d50a3a")]
	public enum DESCKIND__System_Private_Interop
	{
		DESCKIND_NONE = 0,
		DESCKIND_FUNCDESC = 1,
		DESCKIND_VARDESC = 2,
		DESCKIND_TYPECOMP = 3,
		DESCKIND_IMPLICITAPPOBJ = 4,
		DESCKIND_MAX = 5,
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.BINDPTR,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Public" +
		"KeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct BINDPTR__System_Private_Interop
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr lpfuncdesc;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr lpvardesc;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr lptcomp;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS,System.Private.Interop, Version=4.0.0.0, Culture=neutral, " +
		"PublicKeyToken=b03f5f7f11d50a3a")]
	public enum IMPLTYPEFLAGS__System_Private_Interop
	{
		IMPLTYPEFLAG_FDEFAULT = 1,
		IMPLTYPEFLAG_FSOURCE = 2,
		IMPLTYPEFLAG_FRESTRICTED = 4,
		IMPLTYPEFLAG_FDEFAULTVTABLE = 8,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.DISPPARAMS,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Pub" +
		"licKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct DISPPARAMS__System_Private_Interop
	{
		public global::System.IntPtr rgvarg;
		public global::System.IntPtr rgdispidNamedArgs;
		public int cArgs;
		public int cNamedArgs;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Pub" +
		"licKeyToken=b03f5f7f11d50a3a")]
	public enum INVOKEKIND__System_Private_Interop
	{
		INVOKE_FUNC = 1,
		INVOKE_PROPERTYGET = 2,
		INVOKE_PROPERTYPUT = 4,
		INVOKE_PROPERTYPUTREF = 8,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.TYPEKIND,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publi" +
		"cKeyToken=b03f5f7f11d50a3a")]
	public enum TYPEKIND__System_Private_Interop
	{
		TKIND_ENUM = 0,
		TKIND_RECORD = 1,
		TKIND_MODULE = 2,
		TKIND_INTERFACE = 3,
		TKIND_DISPATCH = 4,
		TKIND_COCLASS = 5,
		TKIND_ALIAS = 6,
		TKIND_UNION = 7,
		TKIND_MAX = 8,
	}
}

namespace System.Runtime.InteropServices.WindowsRuntime
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.WindowsRuntime.IBufferByteAccess,System.Runtime.WindowsRuntime, Version=4.0.11.0," +
		" Culture=neutral, PublicKeyToken=b77a5c561934e089")]
	public unsafe interface IBufferByteAccess__System_Runtime_WindowsRuntime
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr GetBuffer();
	}
}

namespace System.Threading
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Threading.NativeOverlapped,System.Threading.Overlapped, Version=4.0.1.0, Culture=neutral, PublicKeyToken=" +
		"b03f5f7f11d50a3a")]
	public unsafe partial struct NativeOverlapped__System_Threading_Overlapped
	{
		public global::System.IntPtr InternalLow;
		public global::System.IntPtr InternalHigh;
		public int OffsetLow;
		public int OffsetHigh;
		public global::System.IntPtr EventHandle;
	}
}

namespace UnityEngine
{
	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.AnimatorClipInfo,UnityEngine.AnimationModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct AnimatorClipInfo__UnityEngine_AnimationModule
	{
		public int m_ClipInstanceID;
		public float m_Weight;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.AnimatorStateInfo,UnityEngine.AnimationModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe partial struct AnimatorStateInfo__UnityEngine_AnimationModule
	{
		public int m_Name;
		public int m_Path;
		public int m_FullPath;
		public float m_NormalizedTime;
		public float m_Length;
		public float m_Speed;
		public float m_SpeedMultiplier;
		public int m_Tag;
		public int m_Loop;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.AnimatorTransitionInfo__WinRTMarshaled,UnityEngine.AnimationModule, Version=0.0.0.0, Culture=neutral" +
		", PublicKeyToken=null")]
	public unsafe partial struct AnimatorTransitionInfo__WinRTMarshaled__UnityEngine_AnimationModule
	{
		public int m_FullPath;
		public int m_UserName;
		public int m_Name;
		public int m_HasFixedDuration;
		public float m_Duration;
		public float m_NormalizedTime;
		public int m_AnyState;
		public int m_TransitionType;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.Color,UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct Color__UnityEngine_CoreModule
	{
		public float r;
		public float g;
		public float b;
		public float a;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.Color32,UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct Color32__UnityEngine_CoreModule
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public int rgba;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public byte r;
		[global::System.Runtime.InteropServices.FieldOffset(1)]
		public byte g;
		[global::System.Runtime.InteropServices.FieldOffset(2)]
		public byte b;
		[global::System.Runtime.InteropServices.FieldOffset(3)]
		public byte a;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.LightmapBakeType,UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum LightmapBakeType__UnityEngine_CoreModule
	{
		Mixed = 1,
		Baked = 2,
		Realtime = 4,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.MixedLightingMode,UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum MixedLightingMode__UnityEngine_CoreModule
	{
		IndirectOnly = 0,
		Subtractive = 1,
		Shadowmask = 2,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.LayerMask,UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct LayerMask__UnityEngine_CoreModule
	{
		public int m_Mask;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.Vector3,UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct Vector3__UnityEngine_CoreModule
	{
		public float x;
		public float y;
		public float z;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.Rect,UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct Rect__UnityEngine_CoreModule
	{
		public float m_XMin;
		public float m_YMin;
		public float m_Width;
		public float m_Height;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.LightBakingOutput__WinRTMarshaled,UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKe" +
		"yToken=null")]
	public unsafe partial struct LightBakingOutput__WinRTMarshaled__UnityEngine_CoreModule
	{
		public int probeOcclusionLightIndex;
		public int occlusionMaskChannel;
		public global::UnityEngine.LightmapBakeType__UnityEngine_CoreModule lightmapBakeType;
		public global::UnityEngine.MixedLightingMode__UnityEngine_CoreModule mixedLightingMode;
		public int isBaked;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.ParticleSystem+Particle,UnityEngine.ParticleSystemModule, Version=0.0.0.0, Culture=neutral, PublicKe" +
		"yToken=null")]
	public unsafe partial struct ParticleSystem_Particle__UnityEngine_ParticleSystemModule
	{
		public global::UnityEngine.Vector3__UnityEngine_CoreModule m_Position;
		public global::UnityEngine.Vector3__UnityEngine_CoreModule m_Velocity;
		public global::UnityEngine.Vector3__UnityEngine_CoreModule m_AnimatedVelocity;
		public global::UnityEngine.Vector3__UnityEngine_CoreModule m_InitialVelocity;
		public global::UnityEngine.Vector3__UnityEngine_CoreModule m_AxisOfRotation;
		public global::UnityEngine.Vector3__UnityEngine_CoreModule m_Rotation;
		public global::UnityEngine.Vector3__UnityEngine_CoreModule m_AngularVelocity;
		public global::UnityEngine.Vector3__UnityEngine_CoreModule m_StartSize;
		public global::UnityEngine.Color32__UnityEngine_CoreModule m_StartColor;
		public uint m_RandomSeed;
		public float m_Lifetime;
		public float m_StartLifetime;
		public float m_EmitAccumulator0;
		public float m_EmitAccumulator1;
		public uint m_Flags;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.ParticleSystemCurveMode,UnityEngine.ParticleSystemModule, Version=0.0.0.0, Culture=neutral, PublicKe" +
		"yToken=null")]
	public enum ParticleSystemCurveMode__UnityEngine_ParticleSystemModule
	{
		Constant = 0,
		Curve = 1,
		TwoCurves = 2,
		TwoConstants = 3,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.ParticleSystemGradientMode,UnityEngine.ParticleSystemModule, Version=0.0.0.0, Culture=neutral, Publi" +
		"cKeyToken=null")]
	public enum ParticleSystemGradientMode__UnityEngine_ParticleSystemModule
	{
		Color = 0,
		Gradient = 1,
		TwoColors = 2,
		TwoGradients = 3,
		RandomColor = 4,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.ContactFilter2D__WinRTMarshaled,UnityEngine.Physics2DModule, Version=0.0.0.0, Culture=neutral, Publi" +
		"cKeyToken=null")]
	public unsafe partial struct ContactFilter2D__WinRTMarshaled__UnityEngine_Physics2DModule
	{
		public int useTriggers;
		public int useLayerMask;
		public int useDepth;
		public int useOutsideDepth;
		public int useNormalAngle;
		public int useOutsideNormalAngle;
		public global::UnityEngine.LayerMask__UnityEngine_CoreModule layerMask;
		public float minDepth;
		public float maxDepth;
		public float minNormalAngle;
		public float maxNormalAngle;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.PhysicsJobOptions2D__WinRTMarshaled,UnityEngine.Physics2DModule, Version=0.0.0.0, Culture=neutral, P" +
		"ublicKeyToken=null")]
	public unsafe partial struct PhysicsJobOptions2D__WinRTMarshaled__UnityEngine_Physics2DModule
	{
		public int m_UseMultithreading;
		public int m_UseConsistencySorting;
		public int m_InterpolationPosesPerJob;
		public int m_NewContactsPerJob;
		public int m_CollideContactsPerJob;
		public int m_ClearFlagsPerJob;
		public int m_ClearBodyForcesPerJob;
		public int m_SyncDiscreteFixturesPerJob;
		public int m_SyncContinuousFixturesPerJob;
		public int m_FindNearestContactsPerJob;
		public int m_UpdateTriggerContactsPerJob;
		public int m_IslandSolverCostThreshold;
		public int m_IslandSolverBodyCostScale;
		public int m_IslandSolverContactCostScale;
		public int m_IslandSolverJointCostScale;
		public int m_IslandSolverBodiesPerJob;
		public int m_IslandSolverContactsPerJob;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.FontStyle,UnityEngine.TextRenderingModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum FontStyle__UnityEngine_TextRenderingModule
	{
		Normal = 0,
		Bold = 1,
		Italic = 2,
		BoldAndItalic = 3,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.TextAnchor,UnityEngine.TextRenderingModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum TextAnchor__UnityEngine_TextRenderingModule
	{
		UpperLeft = 0,
		UpperCenter = 1,
		UpperRight = 2,
		MiddleLeft = 3,
		MiddleCenter = 4,
		MiddleRight = 5,
		LowerLeft = 6,
		LowerCenter = 7,
		LowerRight = 8,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.CharacterInfo__WinRTMarshaled,UnityEngine.TextRenderingModule, Version=0.0.0.0, Culture=neutral, Pub" +
		"licKeyToken=null")]
	public unsafe partial struct CharacterInfo__WinRTMarshaled__UnityEngine_TextRenderingModule
	{
		public int index;
		public global::UnityEngine.Rect__UnityEngine_CoreModule uv;
		public global::UnityEngine.Rect__UnityEngine_CoreModule vert;
		public float width;
		public int size;
		public global::UnityEngine.FontStyle__UnityEngine_TextRenderingModule style;
		public int flipped;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.WheelHit__WinRTMarshaled,UnityEngine.VehiclesModule, Version=0.0.0.0, Culture=neutral, PublicKeyToke" +
		"n=null")]
	public unsafe partial struct WheelHit__WinRTMarshaled__UnityEngine_VehiclesModule
	{
		public global::UnityEngine.Vector3__UnityEngine_CoreModule m_Point;
		public global::UnityEngine.Vector3__UnityEngine_CoreModule m_Normal;
		public global::UnityEngine.Vector3__UnityEngine_CoreModule m_ForwardDir;
		public global::UnityEngine.Vector3__UnityEngine_CoreModule m_SidewaysDir;
		public float m_Force;
		public float m_ForwardSlip;
		public float m_SidewaysSlip;
		public long m_Collider;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.Matrix4x4,UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct Matrix4x4__UnityEngine_CoreModule
	{
		public float m00;
		public float m10;
		public float m20;
		public float m30;
		public float m01;
		public float m11;
		public float m21;
		public float m31;
		public float m02;
		public float m12;
		public float m22;
		public float m32;
		public float m03;
		public float m13;
		public float m23;
		public float m33;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.PropertyName,UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct PropertyName__UnityEngine_CoreModule
	{
		public int id;
	}
}

namespace UnityEngine.Animations
{
	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.Animations.ConstraintSource__WinRTMarshaled,UnityEngine.AnimationModule, Version=0.0.0.0, Culture=ne" +
		"utral, PublicKeyToken=null")]
	public unsafe partial struct ConstraintSource__WinRTMarshaled__UnityEngine_AnimationModule
	{
		public long m_SourceTransform;
		public float m_Weight;
	}
}

namespace UnityEngine.Experimental.Audio
{
	// Unmanaged Function Pointer - Calling Convention CDecl
	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.Experimental.Audio.AudioSampleProvider+ConsumeSampleFramesNativeFunction,UnityEngine.AudioModule, Ve" +
		"rsion=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate uint AudioSampleProvider_ConsumeSampleFramesNativeFunction__UnityEngine_AudioModule(
				uint providerId, 
				global::System.IntPtr interleavedSampleFrames, 
				uint sampleFrameCount);

	// Unmanaged Function Pointer - Calling Convention CDecl
	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.Experimental.Audio.AudioSampleProvider+SampleFramesEventNativeFunction,UnityEngine.AudioModule, Vers" +
		"ion=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void AudioSampleProvider_SampleFramesEventNativeFunction__UnityEngine_AudioModule(
				global::System.IntPtr userData, 
				uint providerId, 
				uint sampleFrameCount);
}

namespace UnityEngine.Experimental.Rendering
{
	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.Experimental.Rendering.FilterResults,UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, Publi" +
		"cKeyToken=null")]
	public unsafe partial struct FilterResults__UnityEngine_CoreModule
	{
		public global::System.IntPtr m_CullResults;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.Experimental.Rendering.CullResults__WinRTMarshaled,UnityEngine.CoreModule, Version=0.0.0.0, Culture=" +
		"neutral, PublicKeyToken=null")]
	public unsafe partial struct CullResults__WinRTMarshaled__UnityEngine_CoreModule
	{
		public long visibleLights;
		public long visibleOffscreenVertexLights;
		public long visibleReflectionProbes;
		public global::UnityEngine.Experimental.Rendering.FilterResults__UnityEngine_CoreModule visibleRenderers;
		public global::System.IntPtr cullResults;
	}
}

namespace UnityEngine.Experimental.UIElements
{
	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.Experimental.UIElements.TextNativeSettings__WinRTMarshaled,UnityEngine.UIElementsModule, Version=0.0" +
		".0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct TextNativeSettings__WinRTMarshaled__UnityEngine_UIElementsModule
	{
		public long text;
		public long font;
		public int size;
		public float scaling;
		public global::UnityEngine.FontStyle__UnityEngine_TextRenderingModule style;
		public global::UnityEngine.Color__UnityEngine_CoreModule color;
		public global::UnityEngine.TextAnchor__UnityEngine_TextRenderingModule anchor;
		public int wordWrap;
		public float wordWrapWidth;
		public int richText;
	}
}

namespace UnityEngine.TextCore
{
	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.TextCore.FaceInfo__WinRTMarshaled,UnityEngine.TextCoreModule, Version=0.0.0.0, Culture=neutral, Publ" +
		"icKeyToken=null")]
	public unsafe partial struct FaceInfo__WinRTMarshaled__UnityEngine_TextCoreModule
	{
		public long m_FamilyName;
		public long m_StyleName;
		public int m_PointSize;
		public float m_Scale;
		public float m_LineHeight;
		public float m_AscentLine;
		public float m_CapLine;
		public float m_MeanLine;
		public float m_Baseline;
		public float m_DescentLine;
		public float m_SuperscriptOffset;
		public float m_SuperscriptSize;
		public float m_SubscriptOffset;
		public float m_SubscriptSize;
		public float m_UnderlineOffset;
		public float m_UnderlineThickness;
		public float m_StrikethroughOffset;
		public float m_StrikethroughThickness;
		public float m_TabWidth;
	}
}

namespace UnityEngine.XR
{
	[global::System.Runtime.InteropServices.McgRedirectedType("UnityEngine.XR.HapticCapabilities__WinRTMarshaled,UnityEngine.XRModule, Version=0.0.0.0, Culture=neutral, Public" +
		"KeyToken=null")]
	public unsafe partial struct HapticCapabilities__WinRTMarshaled__UnityEngine_XRModule
	{
		public uint m_NumChannels;
		public int m_SupportsImpulse;
		public int m_SupportsBuffer;
		public uint m_BufferFrequencyHz;
	}
}

namespace UnityPlayer
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::UnityPlayer.__IAppCallbacksPublicNonVirtuals))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("UnityPlayer, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AppCallbacks : global::System.__ComObject, global::System.IDisposable, global::UnityPlayer.__IAppCallbacksPublicNonVirtuals
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AppCallbacks(string[] commandLineArguments)
		{
			global::System.IntPtr retval;
			retval = __Factory_UnityPlayer____IAppCallbacksFactory_CreateInstance(
								"UnityPlayer.AppCallbacks", 
								commandLineArguments
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_UnityPlayer____IAppCallbacksFactory_CreateInstance(
					string typeName, 
					string[] commandLineArguments)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::UnityPlayer.__IAppCallbacksFactory__Impl.Stubs.CreateInstance(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::UnityPlayer.__IAppCallbacksFactory).TypeHandle
												), 
								commandLineArguments
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AppCallbacks()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("UnityPlayer.AppCallbacks");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void InvokeOnAppThread(
					global::UnityPlayer.AppCallbackItem item, 
					bool waitUntilDone)
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.InvokeOnAppThread(
								this, 
								item, 
								waitUntilDone
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void InvokeOnUIThread(
					global::UnityPlayer.AppCallbackItem item, 
					bool waitUntilDone)
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.InvokeOnUIThread(
								this, 
								item, 
								waitUntilDone
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool TryInvokeOnAppThread(
					global::UnityPlayer.AppCallbackItem item, 
					bool waitUntilDone)
		{
			bool __retVal = global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.TryInvokeOnAppThread(
								this, 
								item, 
								waitUntilDone
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool TryInvokeOnUIThread(
					global::UnityPlayer.AppCallbackItem item, 
					bool waitUntilDone)
		{
			bool __retVal = global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.TryInvokeOnUIThread(
								this, 
								item, 
								waitUntilDone
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool RunningOnAppThread()
		{
			bool __retVal = global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.RunningOnAppThread(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool RunningOnUIThread()
		{
			bool __retVal = global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.RunningOnUIThread(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void InitializeD3DXAML()
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.InitializeD3DXAML(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void InitializeD3DWindow()
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.InitializeD3DWindow(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void Run()
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.Run(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool IsInitialized()
		{
			bool __retVal = global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.IsInitialized(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void InitializeViewManager(global::Windows.UI.Core.CoreWindow window)
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.InitializeViewManager(
								this, 
								window
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void LoadGfxNativePlugin(string pluginFileName)
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.LoadGfxNativePlugin(
								this, 
								pluginFileName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void SetBridge(global::BridgeInterface.IBridge bridge)
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.SetBridge(
								this, 
								bridge
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void SetSwapChainPanel(global::Windows.UI.Xaml.Controls.SwapChainPanel panel)
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.SetSwapChainPanel(
								this, 
								panel
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.UI.Xaml.Controls.SwapChainPanel GetSwapChainPanel()
		{
			global::Windows.UI.Xaml.Controls.SwapChainPanel __retVal = global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.GetSwapChainPanel(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void SetCoreApplicationViewEvents(global::Windows.ApplicationModel.Core.CoreApplicationView applicationView)
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.SetCoreApplicationViewEvents(
								this, 
								applicationView
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void SetCoreWindowEvents(global::Windows.UI.Core.CoreWindow window)
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.SetCoreWindowEvents(
								this, 
								window
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void UpdateActivationState()
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.UpdateActivationState(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool UnityPause(int pause)
		{
			bool __retVal = global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.UnityPause(
								this, 
								pause
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void UnitySetInput(bool enabled)
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.UnitySetInput(
								this, 
								enabled
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool UnityGetInput()
		{
			bool __retVal = global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.UnityGetInput(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void UnityActivate(
					global::Windows.UI.Core.CoreWindow sender, 
					global::Windows.UI.Core.CoreWindowActivationState state)
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.UnityActivate(
								this, 
								sender, 
								state
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void SetAppArguments(string args)
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.SetAppArguments(
								this, 
								args
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public string GetAppArguments()
		{
			string __retVal = global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.GetAppArguments(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Initialized")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Initialized(global::UnityPlayer.InitializedEventHandler value)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.add_Initialized(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Initialized")]
		public void remove_Initialized(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken value)
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.remove_Initialized(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RenderingStarted")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RenderingStarted(global::UnityPlayer.RenderingStartedHandler value)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.add_RenderingStarted(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RenderingStarted")]
		public void remove_RenderingStarted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken value)
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.remove_RenderingStarted(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static bool IsMixedRealitySupported()
		{
			bool retval;
			retval = __Factory_UnityPlayer____IAppCallbacksStatics_IsMixedRealitySupported("UnityPlayer.AppCallbacks");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static bool __Factory_UnityPlayer____IAppCallbacksStatics_IsMixedRealitySupported(string typeName)
		{
			bool __pRetVal;
			__pRetVal = global::UnityPlayer.__IAppCallbacksStatics__Impl.Stubs.IsMixedRealitySupported(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::UnityPlayer.__IAppCallbacksStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Instance")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::UnityPlayer.AppCallbacks get_Instance()
		{
			global::UnityPlayer.AppCallbacks retval;
			retval = __Factory_UnityPlayer____IAppCallbacksStatics_get_Instance("UnityPlayer.AppCallbacks");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::UnityPlayer.AppCallbacks __Factory_UnityPlayer____IAppCallbacksStatics_get_Instance(string typeName)
		{
			global::UnityPlayer.AppCallbacks __pRetVal;
			__pRetVal = global::UnityPlayer.__IAppCallbacksStatics__Impl.Stubs.get_Instance(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::UnityPlayer.__IAppCallbacksStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void AddCommandLineArg(string arg)
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.AddCommandLineArg(
								this, 
								arg
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void ParseCommandLineArgsFromFiles(string fileName)
		{
			global::UnityPlayer.__IAppCallbacksPublicNonVirtuals__Impl.Stubs.ParseCommandLineArgsFromFiles(
								this, 
								fileName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public AppCallbacks(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::UnityPlayer.__IXamlViewManagerPublicNonVirtuals))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(1)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("UnityPlayer, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class XamlViewManager : global::System.__ComObject, global::System.IDisposable, global::UnityPlayer.__IXamlViewManagerPublicNonVirtuals
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public XamlViewManager()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("UnityPlayer.XamlViewManager");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void Initialize(global::Windows.UI.Core.CoreWindow window)
		{
			global::UnityPlayer.__IXamlViewManagerPublicNonVirtuals__Impl.Stubs.Initialize(
								this, 
								window
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void SwitchToExclusiveView()
		{
			global::UnityPlayer.__IXamlViewManagerPublicNonVirtuals__Impl.Stubs.SwitchToExclusiveView(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void SwitchToExclusiveView(bool consolidateViews)
		{
			global::UnityPlayer.__IXamlViewManagerPublicNonVirtuals__Impl.Stubs.SwitchToExclusiveView(
								this, 
								consolidateViews
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void SwitchToTargetView(
					int targetViewId, 
					bool useHolographicSource)
		{
			global::UnityPlayer.__IXamlViewManagerPublicNonVirtuals__Impl.Stubs.SwitchToTargetView(
								this, 
								targetViewId, 
								useHolographicSource
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void Create()
		{
			__Factory_UnityPlayer____IXamlViewManagerStatics_Create("UnityPlayer.XamlViewManager");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_UnityPlayer____IXamlViewManagerStatics_Create(string typeName)
		{
			global::UnityPlayer.__IXamlViewManagerStatics__Impl.Stubs.Create(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::UnityPlayer.__IXamlViewManagerStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void Destroy()
		{
			__Factory_UnityPlayer____IXamlViewManagerStatics_Destroy("UnityPlayer.XamlViewManager");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_UnityPlayer____IXamlViewManagerStatics_Destroy(string typeName)
		{
			global::UnityPlayer.__IXamlViewManagerStatics__Impl.Stubs.Destroy(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::UnityPlayer.__IXamlViewManagerStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static bool HasInstance()
		{
			bool retval;
			retval = __Factory_UnityPlayer____IXamlViewManagerStatics_HasInstance("UnityPlayer.XamlViewManager");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static bool __Factory_UnityPlayer____IXamlViewManagerStatics_HasInstance(string typeName)
		{
			bool __pRetVal;
			__pRetVal = global::UnityPlayer.__IXamlViewManagerStatics__Impl.Stubs.HasInstance(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::UnityPlayer.__IXamlViewManagerStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::UnityPlayer.XamlViewManager GetInstance()
		{
			global::UnityPlayer.XamlViewManager retval;
			retval = __Factory_UnityPlayer____IXamlViewManagerStatics_GetInstance("UnityPlayer.XamlViewManager");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::UnityPlayer.XamlViewManager __Factory_UnityPlayer____IXamlViewManagerStatics_GetInstance(string typeName)
		{
			global::UnityPlayer.XamlViewManager __pRetVal;
			__pRetVal = global::UnityPlayer.__IXamlViewManagerStatics__Impl.Stubs.GetInstance(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::UnityPlayer.__IXamlViewManagerStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public XamlViewManager(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("UnityPlayer, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void AppCallbackItem();

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("UnityPlayer, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void InitializedEventHandler();

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("UnityPlayer, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void RenderingStartedHandler();

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("UnityPlayer, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface __IAppCallbacksFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr CreateInstance(string[] commandLineArguments);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("UnityPlayer, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface __IAppCallbacksStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsMixedRealitySupported();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Instance")]
		global::UnityPlayer.AppCallbacks get_Instance();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("UnityPlayer, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface __IAppCallbacksPublicNonVirtuals
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void InvokeOnAppThread(
					global::UnityPlayer.AppCallbackItem item, 
					bool waitUntilDone);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void InvokeOnUIThread(
					global::UnityPlayer.AppCallbackItem item, 
					bool waitUntilDone);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool TryInvokeOnAppThread(
					global::UnityPlayer.AppCallbackItem item, 
					bool waitUntilDone);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool TryInvokeOnUIThread(
					global::UnityPlayer.AppCallbackItem item, 
					bool waitUntilDone);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool RunningOnAppThread();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool RunningOnUIThread();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void InitializeD3DXAML();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void InitializeD3DWindow();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Run();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsInitialized();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void InitializeViewManager(global::Windows.UI.Core.CoreWindow window);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void LoadGfxNativePlugin(string pluginFileName);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetBridge(global::BridgeInterface.IBridge bridge);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetSwapChainPanel(global::Windows.UI.Xaml.Controls.SwapChainPanel panel);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Xaml.Controls.SwapChainPanel GetSwapChainPanel();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetCoreApplicationViewEvents(global::Windows.ApplicationModel.Core.CoreApplicationView applicationView);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetCoreWindowEvents(global::Windows.UI.Core.CoreWindow window);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void UpdateActivationState();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool UnityPause(int pause);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void UnitySetInput(bool enabled);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool UnityGetInput();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void UnityActivate(
					global::Windows.UI.Core.CoreWindow sender, 
					global::Windows.UI.Core.CoreWindowActivationState state);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetAppArguments(string args);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string GetAppArguments();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Initialized")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Initialized(global::UnityPlayer.InitializedEventHandler __param0);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Initialized")]
		void remove_Initialized(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __param0);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RenderingStarted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RenderingStarted(global::UnityPlayer.RenderingStartedHandler __param0);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RenderingStarted")]
		void remove_RenderingStarted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __param0);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void AddCommandLineArg(string arg);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void ParseCommandLineArgsFromFiles(string fileName);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("UnityPlayer, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface __IXamlViewManagerStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Create();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Destroy();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool HasInstance();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::UnityPlayer.XamlViewManager GetInstance();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("UnityPlayer, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface __IXamlViewManagerPublicNonVirtuals
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Initialize(global::Windows.UI.Core.CoreWindow window);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SwitchToExclusiveView(bool consolidateViews);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SwitchToExclusiveView();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SwitchToTargetView(
					int targetViewId, 
					bool useHolographicSource);
	}
}

namespace Windows.ApplicationModel
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.ISuspendingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SuspendingEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.ISuspendingEventArgs
	{
		public SuspendingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.ILeavingBackgroundEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class LeavingBackgroundEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.ILeavingBackgroundEventArgs
	{
		public LeavingBackgroundEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.IEnteredBackgroundEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class EnteredBackgroundEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.IEnteredBackgroundEventArgs
	{
		public EnteredBackgroundEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.IPackage))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Package : global::System.__ComObject, global::Windows.ApplicationModel.IPackage
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		public global::Windows.ApplicationModel.PackageId get_Id()
		{
			global::Windows.ApplicationModel.PackageId __retVal = global::Windows.ApplicationModel.IPackage__Impl.Stubs.get_Id(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InstalledLocation")]
		public global::Windows.Storage.StorageFolder get_InstalledLocation()
		{
			global::Windows.Storage.StorageFolder __retVal = global::Windows.ApplicationModel.IPackage__Impl.Stubs.get_InstalledLocation(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.ApplicationModel.Package get_Current()
		{
			global::Windows.ApplicationModel.Package retval;
			retval = __Factory_Windows_ApplicationModel__IPackageStatics_get_Current("Windows.ApplicationModel.Package");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.ApplicationModel.Package __Factory_Windows_ApplicationModel__IPackageStatics_get_Current(string typeName)
		{
			global::Windows.ApplicationModel.Package __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.IPackageStatics__Impl.Stubs.get_Current(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.IPackageStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public Package(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.IPackageId))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PackageId : global::System.__ComObject, global::Windows.ApplicationModel.IPackageId
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Version")]
		public global::Windows.ApplicationModel.PackageVersion get_Version()
		{
			global::Windows.ApplicationModel.PackageVersion __retVal = global::Windows.ApplicationModel.IPackageId__Impl.Stubs.get_Version(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public PackageId(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISuspendingEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILeavingBackgroundEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IEnteredBackgroundEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPackageStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		global::Windows.ApplicationModel.Package get_Current();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPackage
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		global::Windows.ApplicationModel.PackageId get_Id();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InstalledLocation")]
		global::Windows.Storage.StorageFolder get_InstalledLocation();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPackageId
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Version")]
		global::Windows.ApplicationModel.PackageVersion get_Version();
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct PackageVersion
	{
		public ushort Major;
		public ushort Minor;
		public ushort Build;
		public ushort Revision;
	}
}

namespace Windows.ApplicationModel.Activation
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IBackgroundActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class BackgroundActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IBackgroundActivatedEventArgs
	{
		public BackgroundActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class LaunchActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		public LaunchActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FileActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		public FileActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SearchActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		public SearchActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ShareTargetActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		public ShareTargetActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FileOpenPickerActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		public FileOpenPickerActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FileSavePickerActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		public FileSavePickerActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CachedFileUpdaterActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		public CachedFileUpdaterActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBackgroundActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILaunchActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFileActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISearchActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IShareTargetActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFileOpenPickerActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFileSavePickerActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICachedFileUpdaterActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}
}

namespace Windows.ApplicationModel.Core
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Core.ICoreApplicationView2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreApplicationView : global::System.__ComObject, global::Windows.ApplicationModel.Core.ICoreApplicationView, global::Windows.ApplicationModel.Core.ICoreApplicationView2, global::Windows.ApplicationModel.Core.ICoreApplicationView3, global::Windows.ApplicationModel.Core.ICoreApplicationView5, global::Windows.ApplicationModel.Core.ICoreApplicationView6
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CoreWindow")]
		public global::Windows.UI.Core.CoreWindow get_CoreWindow()
		{
			global::Windows.UI.Core.CoreWindow __retVal = global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Stubs.get_CoreWindow(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Activated")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Activated(global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Stubs.add_Activated(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Activated")]
		public void remove_Activated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.ApplicationModel.Core.ICoreApplicationView__Impl.Stubs.remove_Activated(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Dispatcher")]
		public global::Windows.UI.Core.CoreDispatcher get_Dispatcher()
		{
			global::Windows.UI.Core.CoreDispatcher __retVal = global::Windows.ApplicationModel.Core.ICoreApplicationView2__Impl.Stubs.get_Dispatcher(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public CoreApplicationView(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(327680)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreApplication : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.ApplicationModel.Core.CoreApplicationView CreateNewView(global::Windows.ApplicationModel.Core.IFrameworkViewSource viewSource)
		{
			global::Windows.ApplicationModel.Core.CoreApplicationView retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreImmersiveApplication3_CreateNewView(
								"Windows.ApplicationModel.Core.CoreApplication", 
								viewSource
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.ApplicationModel.Core.CoreApplicationView __Factory_Windows_ApplicationModel_Core__ICoreImmersiveApplication3_CreateNewView(
					string typeName, 
					global::Windows.ApplicationModel.Core.IFrameworkViewSource viewSource)
		{
			global::Windows.ApplicationModel.Core.CoreApplicationView __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreImmersiveApplication3__Impl.Stubs.CreateNewView(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreImmersiveApplication3).TypeHandle
												), 
								viewSource
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.ApplicationModel.Core.CoreApplicationView CreateNewView()
		{
			global::Windows.ApplicationModel.Core.CoreApplicationView retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreImmersiveApplication2_CreateNewView("Windows.ApplicationModel.Core.CoreApplication");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.ApplicationModel.Core.CoreApplicationView __Factory_Windows_ApplicationModel_Core__ICoreImmersiveApplication2_CreateNewView(string typeName)
		{
			global::Windows.ApplicationModel.Core.CoreApplicationView __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreImmersiveApplication2__Impl.Stubs.CreateNewView(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Core.ICoreImmersiveApplication2).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "UnhandledErrorDetected")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_UnhandledErrorDetected(global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreApplicationUnhandledError_add_UnhandledErrorDetected(
								"Windows.ApplicationModel.Core.CoreApplication", 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __Factory_Windows_ApplicationModel_Core__ICoreApplicationUnhandledError_add_UnhandledErrorDetected(
					string typeName, 
					global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreApplicationUnhandledError__Impl.Stubs.add_UnhandledErrorDetected(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplicationUnhandledError).TypeHandle
												), 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "UnhandledErrorDetected")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void remove_UnhandledErrorDetected(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			__Factory_Windows_ApplicationModel_Core__ICoreApplicationUnhandledError_remove_UnhandledErrorDetected(
								"Windows.ApplicationModel.Core.CoreApplication", 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_ApplicationModel_Core__ICoreApplicationUnhandledError_remove_UnhandledErrorDetected(
					string typeName, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.ApplicationModel.Core.ICoreApplicationUnhandledError__Impl.Stubs.remove_UnhandledErrorDetected(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplicationUnhandledError).TypeHandle
												), 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void IncrementApplicationUseCount()
		{
			__Factory_Windows_ApplicationModel_Core__ICoreApplicationUseCount_IncrementApplicationUseCount("Windows.ApplicationModel.Core.CoreApplication");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_ApplicationModel_Core__ICoreApplicationUseCount_IncrementApplicationUseCount(string typeName)
		{
			global::Windows.ApplicationModel.Core.ICoreApplicationUseCount__Impl.Stubs.IncrementApplicationUseCount(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationUseCount).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void DecrementApplicationUseCount()
		{
			__Factory_Windows_ApplicationModel_Core__ICoreApplicationUseCount_DecrementApplicationUseCount("Windows.ApplicationModel.Core.CoreApplication");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_ApplicationModel_Core__ICoreApplicationUseCount_DecrementApplicationUseCount(string typeName)
		{
			global::Windows.ApplicationModel.Core.ICoreApplicationUseCount__Impl.Stubs.DecrementApplicationUseCount(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationUseCount).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Views")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView> get_Views()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView> retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreImmersiveApplication_get_Views("Windows.ApplicationModel.Core.CoreApplication");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView> __Factory_Windows_ApplicationModel_Core__ICoreImmersiveApplication_get_Views(string typeName)
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView> __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreImmersiveApplication__Impl.Stubs.get_Views(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Core.ICoreImmersiveApplication).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.ApplicationModel.Core.CoreApplicationView CreateNewView(
					string runtimeType, 
					string entryPoint)
		{
			global::Windows.ApplicationModel.Core.CoreApplicationView retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreImmersiveApplication_CreateNewView(
								"Windows.ApplicationModel.Core.CoreApplication", 
								runtimeType, 
								entryPoint
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.ApplicationModel.Core.CoreApplicationView __Factory_Windows_ApplicationModel_Core__ICoreImmersiveApplication_CreateNewView(
					string typeName, 
					string runtimeType, 
					string entryPoint)
		{
			global::Windows.ApplicationModel.Core.CoreApplicationView __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreImmersiveApplication__Impl.Stubs.CreateNewView(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreImmersiveApplication).TypeHandle
												), 
								runtimeType, 
								entryPoint
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MainView")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.ApplicationModel.Core.CoreApplicationView get_MainView()
		{
			global::Windows.ApplicationModel.Core.CoreApplicationView retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreImmersiveApplication_get_MainView("Windows.ApplicationModel.Core.CoreApplication");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.ApplicationModel.Core.CoreApplicationView __Factory_Windows_ApplicationModel_Core__ICoreImmersiveApplication_get_MainView(string typeName)
		{
			global::Windows.ApplicationModel.Core.CoreApplicationView __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreImmersiveApplication__Impl.Stubs.get_MainView(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Core.ICoreImmersiveApplication).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void Exit()
		{
			__Factory_Windows_ApplicationModel_Core__ICoreApplicationExit_Exit("Windows.ApplicationModel.Core.CoreApplication");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_ApplicationModel_Core__ICoreApplicationExit_Exit(string typeName)
		{
			global::Windows.ApplicationModel.Core.ICoreApplicationExit__Impl.Stubs.Exit(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplicationExit).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Exiting")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Exiting(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreApplicationExit_add_Exiting(
								"Windows.ApplicationModel.Core.CoreApplication", 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __Factory_Windows_ApplicationModel_Core__ICoreApplicationExit_add_Exiting(
					string typeName, 
					global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreApplicationExit__Impl.Stubs.add_Exiting(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplicationExit).TypeHandle
												), 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Exiting")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void remove_Exiting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			__Factory_Windows_ApplicationModel_Core__ICoreApplicationExit_remove_Exiting(
								"Windows.ApplicationModel.Core.CoreApplication", 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_ApplicationModel_Core__ICoreApplicationExit_remove_Exiting(
					string typeName, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.ApplicationModel.Core.ICoreApplicationExit__Impl.Stubs.remove_Exiting(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplicationExit).TypeHandle
												), 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Core.AppRestartFailureReason> RequestRestartAsync(string launchArguments)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Core.AppRestartFailureReason> retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreApplication3_RequestRestartAsync(
								"Windows.ApplicationModel.Core.CoreApplication", 
								launchArguments
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Core.AppRestartFailureReason> __Factory_Windows_ApplicationModel_Core__ICoreApplication3_RequestRestartAsync(
					string typeName, 
					string launchArguments)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Core.AppRestartFailureReason> __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreApplication3__Impl.Stubs.RequestRestartAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplication3).TypeHandle
												), 
								launchArguments
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Core.AppRestartFailureReason> RequestRestartForUserAsync(
					global::Windows.System.User user, 
					string launchArguments)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Core.AppRestartFailureReason> retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreApplication3_RequestRestartForUserAsync(
								"Windows.ApplicationModel.Core.CoreApplication", 
								user, 
								launchArguments
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Core.AppRestartFailureReason> __Factory_Windows_ApplicationModel_Core__ICoreApplication3_RequestRestartForUserAsync(
					string typeName, 
					global::Windows.System.User user, 
					string launchArguments)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Core.AppRestartFailureReason> __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreApplication3__Impl.Stubs.RequestRestartForUserAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplication3).TypeHandle
												), 
								user, 
								launchArguments
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BackgroundActivated")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BackgroundActivated(global::System.EventHandler<global::Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreApplication2_add_BackgroundActivated(
								"Windows.ApplicationModel.Core.CoreApplication", 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __Factory_Windows_ApplicationModel_Core__ICoreApplication2_add_BackgroundActivated(
					string typeName, 
					global::System.EventHandler<global::Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreApplication2__Impl.Stubs.add_BackgroundActivated(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplication2).TypeHandle
												), 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BackgroundActivated")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void remove_BackgroundActivated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			__Factory_Windows_ApplicationModel_Core__ICoreApplication2_remove_BackgroundActivated(
								"Windows.ApplicationModel.Core.CoreApplication", 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_ApplicationModel_Core__ICoreApplication2_remove_BackgroundActivated(
					string typeName, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.ApplicationModel.Core.ICoreApplication2__Impl.Stubs.remove_BackgroundActivated(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplication2).TypeHandle
												), 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LeavingBackground")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LeavingBackground(global::System.EventHandler<global::Windows.ApplicationModel.LeavingBackgroundEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreApplication2_add_LeavingBackground(
								"Windows.ApplicationModel.Core.CoreApplication", 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __Factory_Windows_ApplicationModel_Core__ICoreApplication2_add_LeavingBackground(
					string typeName, 
					global::System.EventHandler<global::Windows.ApplicationModel.LeavingBackgroundEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreApplication2__Impl.Stubs.add_LeavingBackground(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplication2).TypeHandle
												), 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LeavingBackground")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void remove_LeavingBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			__Factory_Windows_ApplicationModel_Core__ICoreApplication2_remove_LeavingBackground(
								"Windows.ApplicationModel.Core.CoreApplication", 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_ApplicationModel_Core__ICoreApplication2_remove_LeavingBackground(
					string typeName, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.ApplicationModel.Core.ICoreApplication2__Impl.Stubs.remove_LeavingBackground(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplication2).TypeHandle
												), 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EnteredBackground")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EnteredBackground(global::System.EventHandler<global::Windows.ApplicationModel.EnteredBackgroundEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreApplication2_add_EnteredBackground(
								"Windows.ApplicationModel.Core.CoreApplication", 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __Factory_Windows_ApplicationModel_Core__ICoreApplication2_add_EnteredBackground(
					string typeName, 
					global::System.EventHandler<global::Windows.ApplicationModel.EnteredBackgroundEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreApplication2__Impl.Stubs.add_EnteredBackground(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplication2).TypeHandle
												), 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EnteredBackground")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void remove_EnteredBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			__Factory_Windows_ApplicationModel_Core__ICoreApplication2_remove_EnteredBackground(
								"Windows.ApplicationModel.Core.CoreApplication", 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_ApplicationModel_Core__ICoreApplication2_remove_EnteredBackground(
					string typeName, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.ApplicationModel.Core.ICoreApplication2__Impl.Stubs.remove_EnteredBackground(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplication2).TypeHandle
												), 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void EnablePrelaunch(bool value)
		{
			__Factory_Windows_ApplicationModel_Core__ICoreApplication2_EnablePrelaunch(
								"Windows.ApplicationModel.Core.CoreApplication", 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_ApplicationModel_Core__ICoreApplication2_EnablePrelaunch(
					string typeName, 
					bool value)
		{
			global::Windows.ApplicationModel.Core.ICoreApplication2__Impl.Stubs.EnablePrelaunch(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplication2).TypeHandle
												), 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static string get_Id()
		{
			string retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreApplication_get_Id("Windows.ApplicationModel.Core.CoreApplication");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static string __Factory_Windows_ApplicationModel_Core__ICoreApplication_get_Id(string typeName)
		{
			string __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreApplication__Impl.Stubs.get_Id(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplication).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Suspending")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Suspending(global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreApplication_add_Suspending(
								"Windows.ApplicationModel.Core.CoreApplication", 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __Factory_Windows_ApplicationModel_Core__ICoreApplication_add_Suspending(
					string typeName, 
					global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreApplication__Impl.Stubs.add_Suspending(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplication).TypeHandle
												), 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Suspending")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void remove_Suspending(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			__Factory_Windows_ApplicationModel_Core__ICoreApplication_remove_Suspending(
								"Windows.ApplicationModel.Core.CoreApplication", 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_ApplicationModel_Core__ICoreApplication_remove_Suspending(
					string typeName, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.ApplicationModel.Core.ICoreApplication__Impl.Stubs.remove_Suspending(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplication).TypeHandle
												), 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Resuming")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Resuming(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreApplication_add_Resuming(
								"Windows.ApplicationModel.Core.CoreApplication", 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __Factory_Windows_ApplicationModel_Core__ICoreApplication_add_Resuming(
					string typeName, 
					global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreApplication__Impl.Stubs.add_Resuming(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplication).TypeHandle
												), 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Resuming")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void remove_Resuming(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			__Factory_Windows_ApplicationModel_Core__ICoreApplication_remove_Resuming(
								"Windows.ApplicationModel.Core.CoreApplication", 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_ApplicationModel_Core__ICoreApplication_remove_Resuming(
					string typeName, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.ApplicationModel.Core.ICoreApplication__Impl.Stubs.remove_Resuming(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplication).TypeHandle
												), 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Properties")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Foundation.Collections.IPropertySet get_Properties()
		{
			global::Windows.Foundation.Collections.IPropertySet retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreApplication_get_Properties("Windows.ApplicationModel.Core.CoreApplication");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Foundation.Collections.IPropertySet __Factory_Windows_ApplicationModel_Core__ICoreApplication_get_Properties(string typeName)
		{
			global::Windows.Foundation.Collections.IPropertySet __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreApplication__Impl.Stubs.get_Properties(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplication).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.ApplicationModel.Core.CoreApplicationView GetCurrentView()
		{
			global::Windows.ApplicationModel.Core.CoreApplicationView retval;
			retval = __Factory_Windows_ApplicationModel_Core__ICoreApplication_GetCurrentView("Windows.ApplicationModel.Core.CoreApplication");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.ApplicationModel.Core.CoreApplicationView __Factory_Windows_ApplicationModel_Core__ICoreApplication_GetCurrentView(string typeName)
		{
			global::Windows.ApplicationModel.Core.CoreApplicationView __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Core.ICoreApplication__Impl.Stubs.GetCurrentView(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Core.ICoreApplication).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void Run(global::Windows.ApplicationModel.Core.IFrameworkViewSource viewSource)
		{
			__Factory_Windows_ApplicationModel_Core__ICoreApplication_Run(
								"Windows.ApplicationModel.Core.CoreApplication", 
								viewSource
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_ApplicationModel_Core__ICoreApplication_Run(
					string typeName, 
					global::Windows.ApplicationModel.Core.IFrameworkViewSource viewSource)
		{
			global::Windows.ApplicationModel.Core.ICoreApplication__Impl.Stubs.Run(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplication).TypeHandle
												), 
								viewSource
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void RunWithActivationFactories(global::Windows.Foundation.IGetActivationFactory activationFactoryCallback)
		{
			__Factory_Windows_ApplicationModel_Core__ICoreApplication_RunWithActivationFactories(
								"Windows.ApplicationModel.Core.CoreApplication", 
								activationFactoryCallback
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_ApplicationModel_Core__ICoreApplication_RunWithActivationFactories(
					string typeName, 
					global::Windows.Foundation.IGetActivationFactory activationFactoryCallback)
		{
			global::Windows.ApplicationModel.Core.ICoreApplication__Impl.Stubs.RunWithActivationFactories(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.ApplicationModel.Core.ICoreApplication).TypeHandle
												), 
								activationFactoryCallback
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public CoreApplication(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Core.IUnhandledErrorDetectedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class UnhandledErrorDetectedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Core.IUnhandledErrorDetectedEventArgs
	{
		public UnhandledErrorDetectedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreApplicationView
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CoreWindow")]
		global::Windows.UI.Core.CoreWindow get_CoreWindow();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Activated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Activated(global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Core.CoreApplicationView, global::Windows.ApplicationModel.Activation.IActivatedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Activated")]
		void remove_Activated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreApplicationView2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Dispatcher")]
		global::Windows.UI.Core.CoreDispatcher get_Dispatcher();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreApplicationView3
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreApplicationView5
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreApplicationView6
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkView
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Initialize(global::Windows.ApplicationModel.Core.CoreApplicationView applicationView);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetWindow(global::Windows.UI.Core.CoreWindow window);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Load(string entryPoint);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Run();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Uninitialize();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkViewSource
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.ApplicationModel.Core.IFrameworkView CreateView();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreImmersiveApplication3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.ApplicationModel.Core.CoreApplicationView CreateNewView(global::Windows.ApplicationModel.Core.IFrameworkViewSource viewSource);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreApplicationUnhandledError
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "UnhandledErrorDetected")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_UnhandledErrorDetected(global::System.EventHandler<global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "UnhandledErrorDetected")]
		void remove_UnhandledErrorDetected(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUnhandledErrorDetectedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreImmersiveApplication2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.ApplicationModel.Core.CoreApplicationView CreateNewView();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreApplication
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		string get_Id();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Suspending")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Suspending(global::System.EventHandler<global::Windows.ApplicationModel.SuspendingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Suspending")]
		void remove_Suspending(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Resuming")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Resuming(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Resuming")]
		void remove_Resuming(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Properties")]
		global::Windows.Foundation.Collections.IPropertySet get_Properties();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.ApplicationModel.Core.CoreApplicationView GetCurrentView();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Run(global::Windows.ApplicationModel.Core.IFrameworkViewSource viewSource);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void RunWithActivationFactories(global::Windows.Foundation.IGetActivationFactory activationFactoryCallback);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreImmersiveApplication
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Views")]
		global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.CoreApplicationView> get_Views();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.ApplicationModel.Core.CoreApplicationView CreateNewView(
					string runtimeType, 
					string entryPoint);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MainView")]
		global::Windows.ApplicationModel.Core.CoreApplicationView get_MainView();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreApplicationUseCount
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void IncrementApplicationUseCount();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void DecrementApplicationUseCount();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreApplication3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Core.AppRestartFailureReason> RequestRestartAsync(string launchArguments);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Core.AppRestartFailureReason> RequestRestartForUserAsync(
					global::Windows.System.User user, 
					string launchArguments);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreApplicationExit
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Exit();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Exiting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Exiting(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Exiting")]
		void remove_Exiting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreApplication2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BackgroundActivated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BackgroundActivated(global::System.EventHandler<global::Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BackgroundActivated")]
		void remove_BackgroundActivated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LeavingBackground")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LeavingBackground(global::System.EventHandler<global::Windows.ApplicationModel.LeavingBackgroundEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LeavingBackground")]
		void remove_LeavingBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EnteredBackground")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EnteredBackground(global::System.EventHandler<global::Windows.ApplicationModel.EnteredBackgroundEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EnteredBackground")]
		void remove_EnteredBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void EnablePrelaunch(bool value);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AppRestartFailureReason
	{
		RestartPending = 0,
		NotInForeground = 1,
		InvalidUser = 2,
		Other = 3,
	}
}

namespace Windows.ApplicationModel.Resources
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.IResourceLoader))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceLoader : global::System.__ComObject, global::Windows.ApplicationModel.Resources.IResourceLoader
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public string GetString(string resource)
		{
			string __retVal = global::Windows.ApplicationModel.Resources.IResourceLoader__Impl.Stubs.GetString(
								this, 
								resource
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.ApplicationModel.Resources.ResourceLoader GetForViewIndependentUse()
		{
			global::Windows.ApplicationModel.Resources.ResourceLoader retval;
			retval = __Factory_Windows_ApplicationModel_Resources__IResourceLoaderStatics2_GetForViewIndependentUse("Windows.ApplicationModel.Resources.ResourceLoader");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.ApplicationModel.Resources.ResourceLoader __Factory_Windows_ApplicationModel_Resources__IResourceLoaderStatics2_GetForViewIndependentUse(string typeName)
		{
			global::Windows.ApplicationModel.Resources.ResourceLoader __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Resources.IResourceLoaderStatics2__Impl.Stubs.GetForViewIndependentUse(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Resources.IResourceLoaderStatics2).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public ResourceLoader(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceLoaderStatics2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.ApplicationModel.Resources.ResourceLoader GetForViewIndependentUse();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceLoader
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string GetString(string resource);
	}
}

namespace Windows.ApplicationModel.Resources.Core
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.IResourceContext))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceContext : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.IResourceContext
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ResourceContext()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.ApplicationModel.Resources.Core.ResourceContext");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "QualifierValues")]
		public global::Windows.Foundation.Collections.IObservableMap<string, string> get_QualifierValues()
		{
			global::Windows.Foundation.Collections.IObservableMap<string, string> __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Stubs.get_QualifierValues(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Languages")]
		public global::System.Collections.Generic.IReadOnlyList<string> get_Languages()
		{
			global::System.Collections.Generic.IReadOnlyList<string> __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Stubs.get_Languages(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Languages")]
		public void put_Languages(global::System.Collections.Generic.IReadOnlyList<string> languages)
		{
			global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Stubs.put_Languages(
								this, 
								languages
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.ApplicationModel.Resources.Core.ResourceContext GetForViewIndependentUse()
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceContext retval;
			retval = __Factory_Windows_ApplicationModel_Resources_Core__IResourceContextStatics2_GetForViewIndependentUse("Windows.ApplicationModel.Resources.Core.ResourceContext");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.ApplicationModel.Resources.Core.ResourceContext __Factory_Windows_ApplicationModel_Resources_Core__IResourceContextStatics2_GetForViewIndependentUse(string typeName)
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceContext __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Resources.Core.IResourceContextStatics2__Impl.Stubs.GetForViewIndependentUse(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceContextStatics2).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public ResourceContext(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.IResourceMap))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceMap : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.IResourceMap, global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>, global::System.Collections.Generic.IReadOnlyCollection<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>
	{
		int global::System.Collections.Generic.IReadOnlyCollection<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.Count_Get(this);
			}
		}

		global::Windows.ApplicationModel.Resources.Core.NamedResource global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.this[string index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.Indexer_Get(
									this, 
									index
								);
			}
		}

		global::System.Collections.Generic.IEnumerable<string> global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.Keys
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.Keys(this);
			}
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.ApplicationModel.Resources.Core.NamedResource> global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.Values
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.Values(this);
			}
		}

		bool global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.ContainsKey(string key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.ContainsKey(
								this, 
								key
							);
		}

		bool global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.TryGetValue(
					string key, 
					out global::Windows.ApplicationModel.Resources.Core.NamedResource value)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.TryGetValue(
								this, 
								key, 
								out value
							);
		}

		global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>> global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>.GetEnumerator()
		{
			return (global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>).TypeHandle
							);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.ApplicationModel.Resources.Core.ResourceCandidate GetValue(
					string resource, 
					global::Windows.ApplicationModel.Resources.Core.ResourceContext context)
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceCandidate __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Stubs.GetValue(
								this, 
								resource, 
								context
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.ApplicationModel.Resources.Core.ResourceMap GetSubtree(string reference)
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceMap __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Stubs.GetSubtree(
								this, 
								reference
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public ResourceMap(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.INamedResource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NamedResource : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.INamedResource
	{
		public NamedResource(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.IResourceCandidate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceCandidate : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.IResourceCandidate
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueAsString")]
		public string get_ValueAsString()
		{
			string __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceCandidate__Impl.Stubs.get_ValueAsString(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public ResourceCandidate(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.IResourceManager))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceManager : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.IResourceManager
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MainResourceMap")]
		public global::Windows.ApplicationModel.Resources.Core.ResourceMap get_MainResourceMap()
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceMap __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceManager__Impl.Stubs.get_MainResourceMap(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.ApplicationModel.Resources.Core.ResourceManager get_Current()
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceManager retval;
			retval = __Factory_Windows_ApplicationModel_Resources_Core__IResourceManagerStatics_get_Current("Windows.ApplicationModel.Resources.Core.ResourceManager");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.ApplicationModel.Resources.Core.ResourceManager __Factory_Windows_ApplicationModel_Resources_Core__IResourceManagerStatics_get_Current(string typeName)
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceManager __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Resources.Core.IResourceManagerStatics__Impl.Stubs.get_Current(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceManagerStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public ResourceManager(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceContextStatics2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.ApplicationModel.Resources.Core.ResourceContext GetForViewIndependentUse();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceContext
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "QualifierValues")]
		global::Windows.Foundation.Collections.IObservableMap<string, string> get_QualifierValues();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Languages")]
		global::System.Collections.Generic.IReadOnlyList<string> get_Languages();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Languages")]
		void put_Languages(global::System.Collections.Generic.IReadOnlyList<string> languages);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceMap : global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.ApplicationModel.Resources.Core.ResourceCandidate GetValue(
					string resource, 
					global::Windows.ApplicationModel.Resources.Core.ResourceContext context);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.ApplicationModel.Resources.Core.ResourceMap GetSubtree(string reference);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INamedResource
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceCandidate
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueAsString")]
		string get_ValueAsString();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceManagerStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		global::Windows.ApplicationModel.Resources.Core.ResourceManager get_Current();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceManager
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MainResourceMap")]
		global::Windows.ApplicationModel.Resources.Core.ResourceMap get_MainResourceMap();
	}
}

namespace Windows.Data.Text
{
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct TextSegment
	{
		public uint StartPosition;
		public uint Length;
	}
}

namespace Windows.Devices.Enumeration.Pnp
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObject))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PnpObject : global::System.__ComObject, global::Windows.Devices.Enumeration.Pnp.IPnpObject
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Properties")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, object> get_Properties()
		{
			global::System.Collections.Generic.IReadOnlyDictionary<string, object> __retVal = global::Windows.Devices.Enumeration.Pnp.IPnpObject__Impl.Stubs.get_Properties(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> FindAllAsync(
					global::Windows.Devices.Enumeration.Pnp.PnpObjectType type, 
					global::System.Collections.Generic.IEnumerable<string> requestedProperties, 
					string aqsFilter)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> retval;
			retval = __Factory_Windows_Devices_Enumeration_Pnp__IPnpObjectStatics_FindAllAsync(
								"Windows.Devices.Enumeration.Pnp.PnpObject", 
								type, 
								requestedProperties, 
								aqsFilter
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> __Factory_Windows_Devices_Enumeration_Pnp__IPnpObjectStatics_FindAllAsync(
					string typeName, 
					global::Windows.Devices.Enumeration.Pnp.PnpObjectType type, 
					global::System.Collections.Generic.IEnumerable<string> requestedProperties, 
					string aqsFilter)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> __pRetVal;
			__pRetVal = global::Windows.Devices.Enumeration.Pnp.IPnpObjectStatics__Impl.Stubs.FindAllAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Devices.Enumeration.Pnp.IPnpObjectStatics).TypeHandle
												), 
								type, 
								requestedProperties, 
								aqsFilter
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public PnpObject(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Enumeration.Pnp.PnpObject>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::Windows.Devices.Enumeration.Pnp.PnpObject>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PnpObjectCollection : global::System.__ComObject, global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Enumeration.Pnp.PnpObject>, global::System.Collections.Generic.IReadOnlyCollection<global::Windows.Devices.Enumeration.Pnp.PnpObject>, global::System.Collections.Generic.IEnumerable<global::Windows.Devices.Enumeration.Pnp.PnpObject>
	{
		global::System.Collections.Generic.IEnumerator<global::Windows.Devices.Enumeration.Pnp.PnpObject> global::System.Collections.Generic.IEnumerable<global::Windows.Devices.Enumeration.Pnp.PnpObject>.GetEnumerator()
		{
			global::System.RuntimeTypeHandle dummySharedDynamicAdapter = typeof(global::System.Runtime.InteropServices.WindowsRuntime.IIterableSharedReferenceTypesDynamicAdapter<global::Windows.Devices.Enumeration.Pnp.PnpObject>).TypeHandle;
			return (global::System.Collections.Generic.IEnumerator<global::Windows.Devices.Enumeration.Pnp.PnpObject>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.Devices.Enumeration.Pnp.PnpObject>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.Devices.Enumeration.Pnp.PnpObject>).TypeHandle
							);
		}

		int global::System.Collections.Generic.IReadOnlyCollection<global::Windows.Devices.Enumeration.Pnp.PnpObject>.Count
		{
			get
			{
				global::System.RuntimeTypeHandle dummySharedDynamicAdapter = typeof(global::System.Runtime.InteropServices.WindowsRuntime.IVectorViewSharedReferenceTypesDynamicAdapter<global::Windows.Devices.Enumeration.Pnp.PnpObject>).TypeHandle;
				return global::__Interop.McgHelpers.GetReadOnlyCollectionCount(
									this, 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Enumeration.Pnp.PnpObject>).TypeHandle
								);
			}
		}

		global::Windows.Devices.Enumeration.Pnp.PnpObject global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Enumeration.Pnp.PnpObject>.this[int index]
		{
			get
			{
				return global::System.Runtime.InteropServices.McgMarshal.FastCast<global::System.Runtime.InteropServices.WindowsRuntime.IReadOnlyListAdapter<global::Windows.Devices.Enumeration.Pnp.PnpObject>>(global::System.Runtime.InteropServices.McgMarshal.GetDynamicAdapter(
										this, 
										typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Enumeration.Pnp.PnpObject>).TypeHandle
									))[index];
			}
		}

		public PnpObjectCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPnpObjectStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> FindAllAsync(
					global::Windows.Devices.Enumeration.Pnp.PnpObjectType type, 
					global::System.Collections.Generic.IEnumerable<string> requestedProperties, 
					string aqsFilter);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPnpObject
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Properties")]
		global::System.Collections.Generic.IReadOnlyDictionary<string, object> get_Properties();
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum PnpObjectType
	{
		Unknown = 0,
		DeviceInterface = 1,
		DeviceContainer = 2,
		Device = 3,
		DeviceInterfaceClass = 4,
		AssociationEndpoint = 5,
		AssociationEndpointContainer = 6,
		AssociationEndpointService = 7,
		DevicePanel = 8,
	}
}

namespace Windows.Devices.Haptics
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Devices.Haptics.ISimpleHapticsController))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SimpleHapticsController : global::System.__ComObject, global::Windows.Devices.Haptics.ISimpleHapticsController
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		public string get_Id()
		{
			string __retVal = global::Windows.Devices.Haptics.ISimpleHapticsController__Impl.Stubs.get_Id(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsIntensitySupported")]
		public bool get_IsIntensitySupported()
		{
			bool __retVal = global::Windows.Devices.Haptics.ISimpleHapticsController__Impl.Stubs.get_IsIntensitySupported(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPlayCountSupported")]
		public bool get_IsPlayCountSupported()
		{
			bool __retVal = global::Windows.Devices.Haptics.ISimpleHapticsController__Impl.Stubs.get_IsPlayCountSupported(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPlayDurationSupported")]
		public bool get_IsPlayDurationSupported()
		{
			bool __retVal = global::Windows.Devices.Haptics.ISimpleHapticsController__Impl.Stubs.get_IsPlayDurationSupported(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsReplayPauseIntervalSupported")]
		public bool get_IsReplayPauseIntervalSupported()
		{
			bool __retVal = global::Windows.Devices.Haptics.ISimpleHapticsController__Impl.Stubs.get_IsReplayPauseIntervalSupported(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void StopFeedback()
		{
			global::Windows.Devices.Haptics.ISimpleHapticsController__Impl.Stubs.StopFeedback(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void SendHapticFeedback(global::Windows.Devices.Haptics.SimpleHapticsControllerFeedback feedback)
		{
			global::Windows.Devices.Haptics.ISimpleHapticsController__Impl.Stubs.SendHapticFeedback(
								this, 
								feedback
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void SendHapticFeedback(
					global::Windows.Devices.Haptics.SimpleHapticsControllerFeedback feedback, 
					double intensity)
		{
			global::Windows.Devices.Haptics.ISimpleHapticsController__Impl.Stubs.SendHapticFeedback(
								this, 
								feedback, 
								intensity
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public SimpleHapticsController(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Devices.Haptics.ISimpleHapticsControllerFeedback))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SimpleHapticsControllerFeedback : global::System.__ComObject, global::Windows.Devices.Haptics.ISimpleHapticsControllerFeedback
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Waveform")]
		public ushort get_Waveform()
		{
			ushort __retVal = global::Windows.Devices.Haptics.ISimpleHapticsControllerFeedback__Impl.Stubs.get_Waveform(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public SimpleHapticsControllerFeedback(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISimpleHapticsController
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		string get_Id();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsIntensitySupported")]
		bool get_IsIntensitySupported();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPlayCountSupported")]
		bool get_IsPlayCountSupported();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPlayDurationSupported")]
		bool get_IsPlayDurationSupported();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsReplayPauseIntervalSupported")]
		bool get_IsReplayPauseIntervalSupported();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void StopFeedback();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SendHapticFeedback(global::Windows.Devices.Haptics.SimpleHapticsControllerFeedback feedback);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SendHapticFeedback(
					global::Windows.Devices.Haptics.SimpleHapticsControllerFeedback feedback, 
					double intensity);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISimpleHapticsControllerFeedback
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Waveform")]
		ushort get_Waveform();
	}
}

namespace Windows.Devices.Power
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Devices.Power.IBatteryReport))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class BatteryReport : global::System.__ComObject, global::Windows.Devices.Power.IBatteryReport
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Status")]
		public global::Windows.System.Power.BatteryStatus get_Status()
		{
			global::Windows.System.Power.BatteryStatus __retVal = global::Windows.Devices.Power.IBatteryReport__Impl.Stubs.get_Status(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public BatteryReport(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBatteryReport
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Status")]
		global::Windows.System.Power.BatteryStatus get_Status();
	}
}

namespace Windows.Foundation
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Foundation.IWwwFormUrlDecoderRuntimeClass))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Foundation.IWwwFormUrlDecoderEntry>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.IWwwFormUrlDecoderEntry>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WwwFormUrlDecoder : global::System.__ComObject, global::Windows.Foundation.IWwwFormUrlDecoderRuntimeClass, global::System.Collections.Generic.IReadOnlyList<global::Windows.Foundation.IWwwFormUrlDecoderEntry>, global::System.Collections.Generic.IReadOnlyCollection<global::Windows.Foundation.IWwwFormUrlDecoderEntry>, global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.IWwwFormUrlDecoderEntry>
	{
		global::System.Collections.Generic.IEnumerator<global::Windows.Foundation.IWwwFormUrlDecoderEntry> global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.IWwwFormUrlDecoderEntry>.GetEnumerator()
		{
			global::System.RuntimeTypeHandle dummySharedDynamicAdapter = typeof(global::System.Runtime.InteropServices.WindowsRuntime.IIterableSharedReferenceTypesDynamicAdapter<global::Windows.Foundation.IWwwFormUrlDecoderEntry>).TypeHandle;
			return (global::System.Collections.Generic.IEnumerator<global::Windows.Foundation.IWwwFormUrlDecoderEntry>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.IWwwFormUrlDecoderEntry>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.IWwwFormUrlDecoderEntry>).TypeHandle
							);
		}

		int global::System.Collections.Generic.IReadOnlyCollection<global::Windows.Foundation.IWwwFormUrlDecoderEntry>.Count
		{
			get
			{
				global::System.RuntimeTypeHandle dummySharedDynamicAdapter = typeof(global::System.Runtime.InteropServices.WindowsRuntime.IVectorViewSharedReferenceTypesDynamicAdapter<global::Windows.Foundation.IWwwFormUrlDecoderEntry>).TypeHandle;
				return global::__Interop.McgHelpers.GetReadOnlyCollectionCount(
									this, 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Foundation.IWwwFormUrlDecoderEntry>).TypeHandle
								);
			}
		}

		global::Windows.Foundation.IWwwFormUrlDecoderEntry global::System.Collections.Generic.IReadOnlyList<global::Windows.Foundation.IWwwFormUrlDecoderEntry>.this[int index]
		{
			get
			{
				return global::System.Runtime.InteropServices.McgMarshal.FastCast<global::System.Runtime.InteropServices.WindowsRuntime.IReadOnlyListAdapter<global::Windows.Foundation.IWwwFormUrlDecoderEntry>>(global::System.Runtime.InteropServices.McgMarshal.GetDynamicAdapter(
										this, 
										typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Foundation.IWwwFormUrlDecoderEntry>).TypeHandle
									))[index];
			}
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public WwwFormUrlDecoder(string query)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Foundation__IWwwFormUrlDecoderRuntimeClassFactory_CreateWwwFormUrlDecoder(
								"Windows.Foundation.WwwFormUrlDecoder", 
								query
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_Foundation__IWwwFormUrlDecoderRuntimeClassFactory_CreateWwwFormUrlDecoder(
					string typeName, 
					string query)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Foundation.IWwwFormUrlDecoderRuntimeClassFactory__Impl.Stubs.CreateWwwFormUrlDecoder(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.IWwwFormUrlDecoderRuntimeClassFactory).TypeHandle
												), 
								query
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public string GetFirstValueByName(string name)
		{
			string __retVal = global::Windows.Foundation.IWwwFormUrlDecoderRuntimeClass__Impl.Stubs.GetFirstValueByName(
								this, 
								name
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public WwwFormUrlDecoder(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStringable
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string ToString();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGetActivationFactory
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUriRuntimeClass
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AbsoluteUri")]
		string get_AbsoluteUri();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayUri")]
		string get_DisplayUri();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Domain")]
		string get_Domain();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Extension")]
		string get_Extension();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Fragment")]
		string get_Fragment();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Host")]
		string get_Host();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Password")]
		string get_Password();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Path")]
		string get_Path();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Query")]
		string get_Query();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "QueryParsed")]
		global::Windows.Foundation.WwwFormUrlDecoder get_QueryParsed();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RawUri")]
		string get_RawUri();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SchemeName")]
		string get_SchemeName();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UserName")]
		string get_UserName();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Port")]
		int get_Port();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Suspicious")]
		bool get_Suspicious();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWwwFormUrlDecoderRuntimeClassFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr CreateWwwFormUrlDecoder(string query);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWwwFormUrlDecoderRuntimeClass : global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.IWwwFormUrlDecoderEntry>, global::System.Collections.Generic.IReadOnlyList<global::Windows.Foundation.IWwwFormUrlDecoderEntry>
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string GetFirstValueByName(string name);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWwwFormUrlDecoderEntry
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUriRuntimeClassWithAbsoluteCanonicalUri
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AbsoluteCanonicalUri")]
		string get_AbsoluteCanonicalUri();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayIri")]
		string get_DisplayIri();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUriRuntimeClassFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.Uri CreateUri(string uri);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.Uri CreateWithRelativeUri(
					string baseUri, 
					string relativeUri);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUriEscapeStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string UnescapeComponent(string toUnescape);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string EscapeComponent(string toEscape);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct UniversalApiContract
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct FoundationContract
	{
	}
}

namespace Windows.Foundation.Collections
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPropertySet : global::Windows.Foundation.Collections.IObservableMap<string, object>, global::System.Collections.Generic.IDictionary<string, object>, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, object>>
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IObservableMap<K, V> : global::System.Collections.Generic.IDictionary<K, V>
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_MapChanged(global::Windows.Foundation.Collections.MapChangedEventHandler<K, V> vhnd);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void remove_MapChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void MapChangedEventHandler<K, V>(
				global::Windows.Foundation.Collections.IObservableMap<K, V> sender, 
				global::Windows.Foundation.Collections.IMapChangedEventArgs<K> @event);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMapChangedEventArgs<K>
	{
	}
}

namespace Windows.Foundation.Diagnostics
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TracingStatusChangedEventArgs : global::System.__ComObject, global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Enabled")]
		public bool get_Enabled()
		{
			bool __retVal = global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs__Impl.Stubs.get_Enabled(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public TracingStatusChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AsyncCausalityTracer : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void TraceOperationCreation(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					string operationName, 
					ulong relatedContext)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationCreation(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								operationName, 
								relatedContext
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationCreation(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					string operationName, 
					ulong relatedContext)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceOperationCreation(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								operationName, 
								relatedContext
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void TraceOperationCompletion(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.AsyncStatus status)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationCompletion(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								status
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationCompletion(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.AsyncStatus status)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceOperationCompletion(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								status
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void TraceOperationRelation(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalityRelation relation)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationRelation(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								relation
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationRelation(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalityRelation relation)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceOperationRelation(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								relation
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void TraceSynchronousWorkStart(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceSynchronousWorkStart(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								work
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceSynchronousWorkStart(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceSynchronousWorkStart(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								work
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void TraceSynchronousWorkCompletion(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceSynchronousWorkCompletion(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								work
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceSynchronousWorkCompletion(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceSynchronousWorkCompletion(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								work
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TracingStatusChanged")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TracingStatusChanged(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken retval;
			retval = __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_add_TracingStatusChanged(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_add_TracingStatusChanged(
					string typeName, 
					global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __pRetVal;
			__pRetVal = global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.add_TracingStatusChanged(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TracingStatusChanged")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void remove_TracingStatusChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken cookie)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_remove_TracingStatusChanged(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								cookie
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_remove_TracingStatusChanged(
					string typeName, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken cookie)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.remove_TracingStatusChanged(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								cookie
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public AsyncCausalityTracer(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITracingStatusChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Enabled")]
		bool get_Enabled();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAsyncCausalityTracerStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void TraceOperationCreation(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					string operationName, 
					ulong relatedContext);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void TraceOperationCompletion(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.AsyncStatus status);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void TraceOperationRelation(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalityRelation relation);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void TraceSynchronousWorkStart(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void TraceSynchronousWorkCompletion(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TracingStatusChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TracingStatusChanged(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TracingStatusChanged")]
		void remove_TracingStatusChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken cookie);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CausalityTraceLevel
	{
		Required = 0,
		Important = 1,
		Verbose = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CausalitySource
	{
		Application = 0,
		Library = 1,
		System = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CausalityRelation
	{
		AssignDelegate = 0,
		Join = 1,
		Choice = 2,
		Cancel = 3,
		Error = 4,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CausalitySynchronousWork
	{
		CompletionNotification = 0,
		ProgressNotification = 1,
		Execution = 2,
	}
}

namespace Windows.Foundation.Metadata
{
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ApiInformation : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static bool IsTypePresent(string typeName)
		{
			bool retval;
			retval = __Factory_Windows_Foundation_Metadata__IApiInformationStatics_IsTypePresent(
								"Windows.Foundation.Metadata.ApiInformation", 
								typeName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static bool __Factory_Windows_Foundation_Metadata__IApiInformationStatics_IsTypePresent(
					string typeName_1, 
					string typeName)
		{
			bool __pRetVal;
			__pRetVal = global::Windows.Foundation.Metadata.IApiInformationStatics__Impl.Stubs.IsTypePresent(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName_1, 
													typeof(global::Windows.Foundation.Metadata.IApiInformationStatics).TypeHandle
												), 
								typeName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static bool IsMethodPresent(
					string typeName, 
					string methodName)
		{
			bool retval;
			retval = __Factory_Windows_Foundation_Metadata__IApiInformationStatics_IsMethodPresent(
								"Windows.Foundation.Metadata.ApiInformation", 
								typeName, 
								methodName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static bool __Factory_Windows_Foundation_Metadata__IApiInformationStatics_IsMethodPresent(
					string typeName_1, 
					string typeName, 
					string methodName)
		{
			bool __pRetVal;
			__pRetVal = global::Windows.Foundation.Metadata.IApiInformationStatics__Impl.Stubs.IsMethodPresent(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName_1, 
													typeof(global::Windows.Foundation.Metadata.IApiInformationStatics).TypeHandle
												), 
								typeName, 
								methodName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static bool IsPropertyPresent(
					string typeName, 
					string propertyName)
		{
			bool retval;
			retval = __Factory_Windows_Foundation_Metadata__IApiInformationStatics_IsPropertyPresent(
								"Windows.Foundation.Metadata.ApiInformation", 
								typeName, 
								propertyName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static bool __Factory_Windows_Foundation_Metadata__IApiInformationStatics_IsPropertyPresent(
					string typeName_1, 
					string typeName, 
					string propertyName)
		{
			bool __pRetVal;
			__pRetVal = global::Windows.Foundation.Metadata.IApiInformationStatics__Impl.Stubs.IsPropertyPresent(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName_1, 
													typeof(global::Windows.Foundation.Metadata.IApiInformationStatics).TypeHandle
												), 
								typeName, 
								propertyName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static bool IsApiContractPresent(
					string contractName, 
					ushort majorVersion)
		{
			bool retval;
			retval = __Factory_Windows_Foundation_Metadata__IApiInformationStatics_IsApiContractPresent(
								"Windows.Foundation.Metadata.ApiInformation", 
								contractName, 
								majorVersion
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static bool __Factory_Windows_Foundation_Metadata__IApiInformationStatics_IsApiContractPresent(
					string typeName, 
					string contractName, 
					ushort majorVersion)
		{
			bool __pRetVal;
			__pRetVal = global::Windows.Foundation.Metadata.IApiInformationStatics__Impl.Stubs.IsApiContractPresent(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Metadata.IApiInformationStatics).TypeHandle
												), 
								contractName, 
								majorVersion
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public ApiInformation(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApiInformationStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsTypePresent(string typeName);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsMethodPresent(
					string typeName, 
					string methodName);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsPropertyPresent(
					string typeName, 
					string propertyName);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsApiContractPresent(
					string contractName, 
					ushort majorVersion);
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class LengthIsAttribute : global::System.Attribute
	{
		public LengthIsAttribute(int indexLengthParameter)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.LengthIsAttribute\'.  Windows Runtime attribute types are not " +
					"constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DefaultOverloadAttribute : global::System.Attribute
	{
		public DefaultOverloadAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.DefaultOverloadAttribute\'.  Windows Runtime attribute types a" +
					"re not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class OverloadAttribute : global::System.Attribute
	{
		public OverloadAttribute(string method)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.OverloadAttribute\'.  Windows Runtime attribute types are not " +
					"constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RemoteAsyncAttribute : global::System.Attribute
	{
		public RemoteAsyncAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.RemoteAsyncAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DeprecatedAttribute : global::System.Attribute
	{
		public DeprecatedAttribute(
					string message, 
					global::Windows.Foundation.Metadata.DeprecationType type, 
					uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.DeprecatedAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}

		public DeprecatedAttribute(
					string message, 
					global::Windows.Foundation.Metadata.DeprecationType type, 
					uint version, 
					global::Windows.Foundation.Metadata.Platform platform)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.DeprecatedAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}

		public DeprecatedAttribute(
					string message, 
					global::Windows.Foundation.Metadata.DeprecationType type, 
					uint version, 
					string contract)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.DeprecatedAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class GuidAttribute : global::System.Attribute
	{
		public GuidAttribute(
					uint a, 
					ushort b, 
					ushort c, 
					byte d, 
					byte e, 
					byte f, 
					byte g, 
					byte h, 
					byte i, 
					byte j, 
					byte k)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.GuidAttribute\'.  Windows Runtime attribute types are not cons" +
					"tructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContractVersionAttribute : global::System.Attribute
	{
		public ContractVersionAttribute(uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ContractVersionAttribute\'.  Windows Runtime attribute types a" +
					"re not constructable.");
		}

		public ContractVersionAttribute(
					global::System.Type contract, 
					uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ContractVersionAttribute\'.  Windows Runtime attribute types a" +
					"re not constructable.");
		}

		public ContractVersionAttribute(
					string contract, 
					uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ContractVersionAttribute\'.  Windows Runtime attribute types a" +
					"re not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WebHostHiddenAttribute : global::System.Attribute
	{
		public WebHostHiddenAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.WebHostHiddenAttribute\'.  Windows Runtime attribute types are" +
					" not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ExclusiveToAttribute : global::System.Attribute
	{
		public ExclusiveToAttribute(global::System.Type typeName)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ExclusiveToAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StaticAttribute : global::System.Attribute
	{
		public StaticAttribute(
					global::System.Type type, 
					uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.StaticAttribute\'.  Windows Runtime attribute types are not co" +
					"nstructable.");
		}

		public StaticAttribute(
					global::System.Type type, 
					uint version, 
					global::Windows.Foundation.Metadata.Platform platform)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.StaticAttribute\'.  Windows Runtime attribute types are not co" +
					"nstructable.");
		}

		public StaticAttribute(
					global::System.Type type, 
					uint version, 
					string contractName)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.StaticAttribute\'.  Windows Runtime attribute types are not co" +
					"nstructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MarshalingBehaviorAttribute : global::System.Attribute
	{
		public MarshalingBehaviorAttribute(global::Windows.Foundation.Metadata.MarshalingType behavior)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.MarshalingBehaviorAttribute\'.  Windows Runtime attribute type" +
					"s are not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MuseAttribute : global::System.Attribute
	{
		public MuseAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.MuseAttribute\'.  Windows Runtime attribute types are not cons" +
					"tructable.");
		}
		public uint Version;
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class VersionAttribute : global::System.Attribute
	{
		public VersionAttribute(uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.VersionAttribute\'.  Windows Runtime attribute types are not c" +
					"onstructable.");
		}

		public VersionAttribute(
					uint version, 
					global::Windows.Foundation.Metadata.Platform platform)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.VersionAttribute\'.  Windows Runtime attribute types are not c" +
					"onstructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ActivatableAttribute : global::System.Attribute
	{
		public ActivatableAttribute(uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ActivatableAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}

		public ActivatableAttribute(
					uint version, 
					string type)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ActivatableAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}

		public ActivatableAttribute(
					uint version, 
					global::Windows.Foundation.Metadata.Platform platform)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ActivatableAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}

		public ActivatableAttribute(
					global::System.Type type, 
					uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ActivatableAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}

		public ActivatableAttribute(
					global::System.Type type, 
					uint version, 
					string contractName)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ActivatableAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}

		public ActivatableAttribute(
					global::System.Type type, 
					uint version, 
					global::Windows.Foundation.Metadata.Platform platform)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ActivatableAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ThreadingAttribute : global::System.Attribute
	{
		public ThreadingAttribute(global::Windows.Foundation.Metadata.ThreadingModel model)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ThreadingAttribute\'.  Windows Runtime attribute types are not" +
					" constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ComposableAttribute : global::System.Attribute
	{
		public ComposableAttribute(
					global::System.Type type, 
					global::Windows.Foundation.Metadata.CompositionType compositionType, 
					uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ComposableAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}

		public ComposableAttribute(
					global::System.Type type, 
					global::Windows.Foundation.Metadata.CompositionType compositionType, 
					uint version, 
					global::Windows.Foundation.Metadata.Platform platform)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ComposableAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}

		public ComposableAttribute(
					global::System.Type type, 
					global::Windows.Foundation.Metadata.CompositionType compositionType, 
					uint version, 
					string contract)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ComposableAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DualApiPartitionAttribute : global::System.Attribute
	{
		public DualApiPartitionAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.DualApiPartitionAttribute\'.  Windows Runtime attribute types " +
					"are not constructable.");
		}
		public uint version;
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HasVariantAttribute : global::System.Attribute
	{
		public HasVariantAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.HasVariantAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AllowMultipleAttribute : global::System.Attribute
	{
		public AllowMultipleAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.AllowMultipleAttribute\'.  Windows Runtime attribute types are" +
					" not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ApiContractAttribute : global::System.Attribute
	{
		public ApiContractAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ApiContractAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class VariantAttribute : global::System.Attribute
	{
		public VariantAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.VariantAttribute\'.  Windows Runtime attribute types are not c" +
					"onstructable.");
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum DeprecationType
	{
		Deprecate = 0,
		Remove = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum Platform
	{
		Windows = 0,
		WindowsPhone = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum MarshalingType
	{
		InvalidMarshaling = 0,
		None = 1,
		Agile = 2,
		Standard = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ThreadingModel
	{
		InvalidThreading = 0,
		STA = 1,
		MTA = 2,
		Both = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CompositionType
	{
		Protected = 1,
		Public = 2,
	}
}

namespace Windows.Globalization
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Globalization.ICalendar))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Calendar : global::System.__ComObject, global::Windows.Globalization.ICalendar
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Calendar()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Globalization.Calendar");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void ChangeCalendarSystem(string value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.ChangeCalendarSystem(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::System.DateTimeOffset GetDateTime()
		{
			global::System.DateTimeOffset __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.GetDateTime(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LastEra")]
		public int get_LastEra()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_LastEra(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Era")]
		public void put_Era(int value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.put_Era(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public string EraAsString()
		{
			string __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.EraAsString(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public string EraAsString(int idealLength)
		{
			string __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.EraAsString(
								this, 
								idealLength
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstYearInThisEra")]
		public int get_FirstYearInThisEra()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_FirstYearInThisEra(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Year")]
		public void put_Year(int value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.put_Year(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstMonthInThisYear")]
		public int get_FirstMonthInThisYear()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_FirstMonthInThisYear(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Month")]
		public void put_Month(int value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.put_Month(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstDayInThisMonth")]
		public int get_FirstDayInThisMonth()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_FirstDayInThisMonth(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Day")]
		public int get_Day()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_Day(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Day")]
		public void put_Day(int value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.put_Day(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public Calendar(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Globalization.ILanguage))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Language : global::System.__ComObject, global::Windows.Globalization.ILanguage
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Language(string languageTag)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Globalization__ILanguageFactory_CreateLanguage(
								"Windows.Globalization.Language", 
								languageTag
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_Globalization__ILanguageFactory_CreateLanguage(
					string typeName, 
					string languageTag)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Globalization.ILanguageFactory__Impl.Stubs.CreateLanguage(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Globalization.ILanguageFactory).TypeHandle
												), 
								languageTag
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Windows.Globalization.ILanguage__Impl.Stubs.get_DisplayName(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public Language(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Globalization.IGeographicRegion))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class GeographicRegion : global::System.__ComObject, global::Windows.Globalization.IGeographicRegion
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public GeographicRegion(string geographicRegionCode)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Globalization__IGeographicRegionFactory_CreateGeographicRegion(
								"Windows.Globalization.GeographicRegion", 
								geographicRegionCode
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_Globalization__IGeographicRegionFactory_CreateGeographicRegion(
					string typeName, 
					string geographicRegionCode)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Globalization.IGeographicRegionFactory__Impl.Stubs.CreateGeographicRegion(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Globalization.IGeographicRegionFactory).TypeHandle
												), 
								geographicRegionCode
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public GeographicRegion()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Globalization.GeographicRegion");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CodeTwoLetter")]
		public string get_CodeTwoLetter()
		{
			string __retVal = global::Windows.Globalization.IGeographicRegion__Impl.Stubs.get_CodeTwoLetter(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Windows.Globalization.IGeographicRegion__Impl.Stubs.get_DisplayName(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public GeographicRegion(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CalendarIdentifiers : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gregorian")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static string get_Gregorian()
		{
			string retval;
			retval = __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Gregorian("Windows.Globalization.CalendarIdentifiers");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static string __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Gregorian(string typeName)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Globalization.ICalendarIdentifiersStatics__Impl.Stubs.get_Gregorian(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Globalization.ICalendarIdentifiersStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Hijri")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static string get_Hijri()
		{
			string retval;
			retval = __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Hijri("Windows.Globalization.CalendarIdentifiers");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static string __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Hijri(string typeName)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Globalization.ICalendarIdentifiersStatics__Impl.Stubs.get_Hijri(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Globalization.ICalendarIdentifiersStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Japanese")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static string get_Japanese()
		{
			string retval;
			retval = __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Japanese("Windows.Globalization.CalendarIdentifiers");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static string __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Japanese(string typeName)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Globalization.ICalendarIdentifiersStatics__Impl.Stubs.get_Japanese(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Globalization.ICalendarIdentifiersStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public CalendarIdentifiers(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICalendar
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void ChangeCalendarSystem(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.DateTimeOffset GetDateTime();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LastEra")]
		int get_LastEra();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Era")]
		void put_Era(int value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string EraAsString();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string EraAsString(int idealLength);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstYearInThisEra")]
		int get_FirstYearInThisEra();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Year")]
		void put_Year(int value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstMonthInThisYear")]
		int get_FirstMonthInThisYear();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Month")]
		void put_Month(int value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstDayInThisMonth")]
		int get_FirstDayInThisMonth();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Day")]
		int get_Day();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Day")]
		void put_Day(int value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILanguageFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr CreateLanguage(string languageTag);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILanguage
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGeographicRegionFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr CreateGeographicRegion(string geographicRegionCode);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGeographicRegion
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CodeTwoLetter")]
		string get_CodeTwoLetter();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICalendarIdentifiersStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gregorian")]
		string get_Gregorian();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Hijri")]
		string get_Hijri();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Japanese")]
		string get_Japanese();
	}
}

namespace Windows.Graphics.Display
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Graphics.Display.IDisplayInformation))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Graphics.Display.IDisplayInformation2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Graphics.Display.IDisplayInformation3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Graphics.Display.IDisplayInformation4))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DisplayInformation : global::System.__ComObject, global::Windows.Graphics.Display.IDisplayInformation, global::Windows.Graphics.Display.IDisplayInformation2, global::Windows.Graphics.Display.IDisplayInformation3, global::Windows.Graphics.Display.IDisplayInformation4
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CurrentOrientation")]
		public global::Windows.Graphics.Display.DisplayOrientations get_CurrentOrientation()
		{
			global::Windows.Graphics.Display.DisplayOrientations __retVal = global::Windows.Graphics.Display.IDisplayInformation__Impl.Stubs.get_CurrentOrientation(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NativeOrientation")]
		public global::Windows.Graphics.Display.DisplayOrientations get_NativeOrientation()
		{
			global::Windows.Graphics.Display.DisplayOrientations __retVal = global::Windows.Graphics.Display.IDisplayInformation__Impl.Stubs.get_NativeOrientation(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ResolutionScale")]
		public global::Windows.Graphics.Display.ResolutionScale get_ResolutionScale()
		{
			global::Windows.Graphics.Display.ResolutionScale __retVal = global::Windows.Graphics.Display.IDisplayInformation__Impl.Stubs.get_ResolutionScale(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LogicalDpi")]
		public float get_LogicalDpi()
		{
			float __retVal = global::Windows.Graphics.Display.IDisplayInformation__Impl.Stubs.get_LogicalDpi(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RawDpiX")]
		public float get_RawDpiX()
		{
			float __retVal = global::Windows.Graphics.Display.IDisplayInformation__Impl.Stubs.get_RawDpiX(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RawDpiY")]
		public float get_RawDpiY()
		{
			float __retVal = global::Windows.Graphics.Display.IDisplayInformation__Impl.Stubs.get_RawDpiY(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StereoEnabled")]
		public bool get_StereoEnabled()
		{
			bool __retVal = global::Windows.Graphics.Display.IDisplayInformation__Impl.Stubs.get_StereoEnabled(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RawPixelsPerViewPixel")]
		public double get_RawPixelsPerViewPixel()
		{
			double __retVal = global::Windows.Graphics.Display.IDisplayInformation2__Impl.Stubs.get_RawPixelsPerViewPixel(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DiagonalSizeInInches")]
		public global::System.Nullable<double> get_DiagonalSizeInInches()
		{
			global::System.Nullable<double> __retVal = global::Windows.Graphics.Display.IDisplayInformation3__Impl.Stubs.get_DiagonalSizeInInches(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ScreenWidthInRawPixels")]
		public uint get_ScreenWidthInRawPixels()
		{
			uint __retVal = global::Windows.Graphics.Display.IDisplayInformation4__Impl.Stubs.get_ScreenWidthInRawPixels(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ScreenHeightInRawPixels")]
		public uint get_ScreenHeightInRawPixels()
		{
			uint __retVal = global::Windows.Graphics.Display.IDisplayInformation4__Impl.Stubs.get_ScreenHeightInRawPixels(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AutoRotationPreferences")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Graphics.Display.DisplayOrientations get_AutoRotationPreferences()
		{
			global::Windows.Graphics.Display.DisplayOrientations retval;
			retval = __Factory_Windows_Graphics_Display__IDisplayInformationStatics_get_AutoRotationPreferences("Windows.Graphics.Display.DisplayInformation");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Graphics.Display.DisplayOrientations __Factory_Windows_Graphics_Display__IDisplayInformationStatics_get_AutoRotationPreferences(string typeName)
		{
			global::Windows.Graphics.Display.DisplayOrientations __pRetVal;
			__pRetVal = global::Windows.Graphics.Display.IDisplayInformationStatics__Impl.Stubs.get_AutoRotationPreferences(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Graphics.Display.IDisplayInformationStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AutoRotationPreferences")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void put_AutoRotationPreferences(global::Windows.Graphics.Display.DisplayOrientations value)
		{
			__Factory_Windows_Graphics_Display__IDisplayInformationStatics_put_AutoRotationPreferences(
								"Windows.Graphics.Display.DisplayInformation", 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_Graphics_Display__IDisplayInformationStatics_put_AutoRotationPreferences(
					string typeName, 
					global::Windows.Graphics.Display.DisplayOrientations value)
		{
			global::Windows.Graphics.Display.IDisplayInformationStatics__Impl.Stubs.put_AutoRotationPreferences(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Graphics.Display.IDisplayInformationStatics).TypeHandle
												), 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public DisplayInformation(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDisplayInformationStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AutoRotationPreferences")]
		global::Windows.Graphics.Display.DisplayOrientations get_AutoRotationPreferences();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AutoRotationPreferences")]
		void put_AutoRotationPreferences(global::Windows.Graphics.Display.DisplayOrientations value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDisplayInformation
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CurrentOrientation")]
		global::Windows.Graphics.Display.DisplayOrientations get_CurrentOrientation();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NativeOrientation")]
		global::Windows.Graphics.Display.DisplayOrientations get_NativeOrientation();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ResolutionScale")]
		global::Windows.Graphics.Display.ResolutionScale get_ResolutionScale();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LogicalDpi")]
		float get_LogicalDpi();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RawDpiX")]
		float get_RawDpiX();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RawDpiY")]
		float get_RawDpiY();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StereoEnabled")]
		bool get_StereoEnabled();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDisplayInformation2 : global::Windows.Graphics.Display.IDisplayInformation
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RawPixelsPerViewPixel")]
		double get_RawPixelsPerViewPixel();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDisplayInformation3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DiagonalSizeInInches")]
		global::System.Nullable<double> get_DiagonalSizeInInches();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDisplayInformation4
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ScreenWidthInRawPixels")]
		uint get_ScreenWidthInRawPixels();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ScreenHeightInRawPixels")]
		uint get_ScreenHeightInRawPixels();
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum DisplayOrientations : uint
	{
		None = 0x0u,
		Landscape = 0x1u,
		Portrait = 0x2u,
		LandscapeFlipped = 0x4u,
		PortraitFlipped = 0x8u,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ResolutionScale
	{
		Invalid = 0,
		Scale100Percent = 100,
		Scale120Percent = 120,
		Scale125Percent = 125,
		Scale140Percent = 140,
		Scale150Percent = 150,
		Scale160Percent = 160,
		Scale175Percent = 175,
		Scale180Percent = 180,
		Scale200Percent = 200,
		Scale225Percent = 225,
		Scale250Percent = 250,
		Scale300Percent = 300,
		Scale350Percent = 350,
		Scale400Percent = 400,
		Scale450Percent = 450,
		Scale500Percent = 500,
	}
}

namespace Windows.Graphics.Holographic
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Graphics.Holographic.IHolographicDisplay))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Graphics.Holographic.IHolographicDisplay3))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(262144)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HolographicDisplay : global::System.__ComObject, global::Windows.Graphics.Holographic.IHolographicDisplay, global::Windows.Graphics.Holographic.IHolographicDisplay3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Graphics.Holographic.HolographicViewConfiguration TryGetViewConfiguration(global::Windows.Graphics.Holographic.HolographicViewConfigurationKind kind)
		{
			global::Windows.Graphics.Holographic.HolographicViewConfiguration __retVal = global::Windows.Graphics.Holographic.IHolographicDisplay3__Impl.Stubs.TryGetViewConfiguration(
								this, 
								kind
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Graphics.Holographic.HolographicDisplay GetDefault()
		{
			global::Windows.Graphics.Holographic.HolographicDisplay retval;
			retval = __Factory_Windows_Graphics_Holographic__IHolographicDisplayStatics_GetDefault("Windows.Graphics.Holographic.HolographicDisplay");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Graphics.Holographic.HolographicDisplay __Factory_Windows_Graphics_Holographic__IHolographicDisplayStatics_GetDefault(string typeName)
		{
			global::Windows.Graphics.Holographic.HolographicDisplay __pRetVal;
			__pRetVal = global::Windows.Graphics.Holographic.IHolographicDisplayStatics__Impl.Stubs.GetDefault(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Graphics.Holographic.IHolographicDisplayStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public HolographicDisplay(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Graphics.Holographic.IHolographicViewConfiguration))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HolographicViewConfiguration : global::System.__ComObject, global::Windows.Graphics.Holographic.IHolographicViewConfiguration
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsEnabled")]
		public void put_IsEnabled(bool value)
		{
			global::Windows.Graphics.Holographic.IHolographicViewConfiguration__Impl.Stubs.put_IsEnabled(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public HolographicViewConfiguration(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHolographicDisplayStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Graphics.Holographic.HolographicDisplay GetDefault();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHolographicDisplay
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHolographicDisplay3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Graphics.Holographic.HolographicViewConfiguration TryGetViewConfiguration(global::Windows.Graphics.Holographic.HolographicViewConfigurationKind kind);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHolographicViewConfiguration
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IsEnabled")]
		void put_IsEnabled(bool value);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HolographicViewConfigurationKind
	{
		Display = 0,
		PhotoVideoCamera = 1,
	}
}

namespace Windows.Media.Capture
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Media.Capture.IAppCapture))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(131072)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AppCapture : global::System.__ComObject, global::Windows.Media.Capture.IAppCapture
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsCapturingVideo")]
		public bool get_IsCapturingVideo()
		{
			bool __retVal = global::Windows.Media.Capture.IAppCapture__Impl.Stubs.get_IsCapturingVideo(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Media.Capture.AppCapture GetForCurrentView()
		{
			global::Windows.Media.Capture.AppCapture retval;
			retval = __Factory_Windows_Media_Capture__IAppCaptureStatics_GetForCurrentView("Windows.Media.Capture.AppCapture");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Media.Capture.AppCapture __Factory_Windows_Media_Capture__IAppCaptureStatics_GetForCurrentView(string typeName)
		{
			global::Windows.Media.Capture.AppCapture __pRetVal;
			__pRetVal = global::Windows.Media.Capture.IAppCaptureStatics__Impl.Stubs.GetForCurrentView(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Media.Capture.IAppCaptureStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public AppCapture(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAppCaptureStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Media.Capture.AppCapture GetForCurrentView();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAppCapture
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsCapturingVideo")]
		bool get_IsCapturingVideo();
	}
}

namespace Windows.Networking
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Networking.IHostName))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HostName : global::System.__ComObject, global::Windows.Networking.IHostName, global::Windows.Foundation.IStringable
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public HostName(string hostName)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Networking__IHostNameFactory_CreateHostName(
								"Windows.Networking.HostName", 
								hostName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_Networking__IHostNameFactory_CreateHostName(
					string typeName, 
					string hostName)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Networking.IHostNameFactory__Impl.Stubs.CreateHostName(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Networking.IHostNameFactory).TypeHandle
												), 
								hostName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RawName")]
		public string get_RawName()
		{
			string __retVal = global::Windows.Networking.IHostName__Impl.Stubs.get_RawName(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanonicalName")]
		public string get_CanonicalName()
		{
			string __retVal = global::Windows.Networking.IHostName__Impl.Stubs.get_CanonicalName(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Type")]
		public global::Windows.Networking.HostNameType get_Type()
		{
			global::Windows.Networking.HostNameType __retVal = global::Windows.Networking.IHostName__Impl.Stubs.get_Type(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public HostName(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHostNameFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr CreateHostName(string hostName);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHostName
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RawName")]
		string get_RawName();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanonicalName")]
		string get_CanonicalName();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Type")]
		global::Windows.Networking.HostNameType get_Type();
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HostNameType
	{
		DomainName = 0,
		Ipv4 = 1,
		Ipv6 = 2,
		Bluetooth = 3,
	}
}

namespace Windows.Networking.Connectivity
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Networking.Connectivity.IConnectionProfile))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ConnectionProfile : global::System.__ComObject, global::Windows.Networking.Connectivity.IConnectionProfile
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Networking.Connectivity.NetworkConnectivityLevel GetNetworkConnectivityLevel()
		{
			global::Windows.Networking.Connectivity.NetworkConnectivityLevel __retVal = global::Windows.Networking.Connectivity.IConnectionProfile__Impl.Stubs.GetNetworkConnectivityLevel(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NetworkAdapter")]
		public global::Windows.Networking.Connectivity.NetworkAdapter get_NetworkAdapter()
		{
			global::Windows.Networking.Connectivity.NetworkAdapter __retVal = global::Windows.Networking.Connectivity.IConnectionProfile__Impl.Stubs.get_NetworkAdapter(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public ConnectionProfile(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Networking.Connectivity.INetworkAdapter))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NetworkAdapter : global::System.__ComObject, global::Windows.Networking.Connectivity.INetworkAdapter
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IanaInterfaceType")]
		public uint get_IanaInterfaceType()
		{
			uint __retVal = global::Windows.Networking.Connectivity.INetworkAdapter__Impl.Stubs.get_IanaInterfaceType(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public NetworkAdapter(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NetworkInformation : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Networking.Connectivity.ConnectionProfile GetInternetConnectionProfile()
		{
			global::Windows.Networking.Connectivity.ConnectionProfile retval;
			retval = __Factory_Windows_Networking_Connectivity__INetworkInformationStatics_GetInternetConnectionProfile("Windows.Networking.Connectivity.NetworkInformation");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Networking.Connectivity.ConnectionProfile __Factory_Windows_Networking_Connectivity__INetworkInformationStatics_GetInternetConnectionProfile(string typeName)
		{
			global::Windows.Networking.Connectivity.ConnectionProfile __pRetVal;
			__pRetVal = global::Windows.Networking.Connectivity.INetworkInformationStatics__Impl.Stubs.GetInternetConnectionProfile(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Networking.Connectivity.INetworkInformationStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName> GetHostNames()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName> retval;
			retval = __Factory_Windows_Networking_Connectivity__INetworkInformationStatics_GetHostNames("Windows.Networking.Connectivity.NetworkInformation");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName> __Factory_Windows_Networking_Connectivity__INetworkInformationStatics_GetHostNames(string typeName)
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName> __pRetVal;
			__pRetVal = global::Windows.Networking.Connectivity.INetworkInformationStatics__Impl.Stubs.GetHostNames(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Networking.Connectivity.INetworkInformationStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public NetworkInformation(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IConnectionProfile
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Networking.Connectivity.NetworkConnectivityLevel GetNetworkConnectivityLevel();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NetworkAdapter")]
		global::Windows.Networking.Connectivity.NetworkAdapter get_NetworkAdapter();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INetworkAdapter
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IanaInterfaceType")]
		uint get_IanaInterfaceType();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INetworkInformationStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Networking.Connectivity.ConnectionProfile GetInternetConnectionProfile();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.HostName> GetHostNames();
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum NetworkConnectivityLevel
	{
		None = 0,
		LocalAccess = 1,
		ConstrainedInternetAccess = 2,
		InternetAccess = 3,
	}
}

namespace Windows.Networking.Sockets
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Networking.Sockets.IStreamSocket))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StreamSocket : global::System.__ComObject, global::Windows.Networking.Sockets.IStreamSocket, global::System.IDisposable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public StreamSocket()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Networking.Sockets.StreamSocket");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Information")]
		public global::Windows.Networking.Sockets.StreamSocketInformation get_Information()
		{
			global::Windows.Networking.Sockets.StreamSocketInformation __retVal = global::Windows.Networking.Sockets.IStreamSocket__Impl.Stubs.get_Information(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction ConnectAsync(
					global::Windows.Networking.HostName remoteHostName, 
					string remoteServiceName)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Networking.Sockets.IStreamSocket__Impl.Stubs.ConnectAsync(
								this, 
								remoteHostName, 
								remoteServiceName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public StreamSocket(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Networking.Sockets.IStreamSocketInformation))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StreamSocketInformation : global::System.__ComObject, global::Windows.Networking.Sockets.IStreamSocketInformation
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RemoteAddress")]
		public global::Windows.Networking.HostName get_RemoteAddress()
		{
			global::Windows.Networking.HostName __retVal = global::Windows.Networking.Sockets.IStreamSocketInformation__Impl.Stubs.get_RemoteAddress(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public StreamSocketInformation(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStreamSocket : global::System.IDisposable
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Information")]
		global::Windows.Networking.Sockets.StreamSocketInformation get_Information();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncAction ConnectAsync(
					global::Windows.Networking.HostName remoteHostName, 
					string remoteServiceName);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStreamSocketInformation
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RemoteAddress")]
		global::Windows.Networking.HostName get_RemoteAddress();
	}
}

namespace Windows.Perception
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Perception.IPerceptionTimestamp))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PerceptionTimestamp : global::System.__ComObject, global::Windows.Perception.IPerceptionTimestamp, global::Windows.Perception.IPerceptionTimestamp2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TargetTime")]
		public global::System.DateTimeOffset get_TargetTime()
		{
			global::System.DateTimeOffset __retVal = global::Windows.Perception.IPerceptionTimestamp__Impl.Stubs.get_TargetTime(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public PerceptionTimestamp(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(131072)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PerceptionTimestampHelper : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Perception.PerceptionTimestamp FromHistoricalTargetTime(global::System.DateTimeOffset targetTime)
		{
			global::Windows.Perception.PerceptionTimestamp retval;
			retval = __Factory_Windows_Perception__IPerceptionTimestampHelperStatics_FromHistoricalTargetTime(
								"Windows.Perception.PerceptionTimestampHelper", 
								targetTime
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Perception.PerceptionTimestamp __Factory_Windows_Perception__IPerceptionTimestampHelperStatics_FromHistoricalTargetTime(
					string typeName, 
					global::System.DateTimeOffset targetTime)
		{
			global::Windows.Perception.PerceptionTimestamp __pRetVal;
			__pRetVal = global::Windows.Perception.IPerceptionTimestampHelperStatics__Impl.Stubs.FromHistoricalTargetTime(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Perception.IPerceptionTimestampHelperStatics).TypeHandle
												), 
								targetTime
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public PerceptionTimestampHelper(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPerceptionTimestamp
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TargetTime")]
		global::System.DateTimeOffset get_TargetTime();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPerceptionTimestamp2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPerceptionTimestampHelperStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Perception.PerceptionTimestamp FromHistoricalTargetTime(global::System.DateTimeOffset targetTime);
	}
}

namespace Windows.Perception.People
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Perception.People.IHandMeshObserver))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HandMeshObserver : global::System.__ComObject, global::Windows.Perception.People.IHandMeshObserver
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionSource get_Source()
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionSource __retVal = global::Windows.Perception.People.IHandMeshObserver__Impl.Stubs.get_Source(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TriangleIndexCount")]
		public uint get_TriangleIndexCount()
		{
			uint __retVal = global::Windows.Perception.People.IHandMeshObserver__Impl.Stubs.get_TriangleIndexCount(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VertexCount")]
		public uint get_VertexCount()
		{
			uint __retVal = global::Windows.Perception.People.IHandMeshObserver__Impl.Stubs.get_VertexCount(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void GetTriangleIndices(ushort[] indices)
		{
			global::Windows.Perception.People.IHandMeshObserver__Impl.Stubs.GetTriangleIndices(
								this, 
								indices
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Perception.People.HandMeshVertexState GetVertexStateForPose(global::Windows.Perception.People.HandPose handPose)
		{
			global::Windows.Perception.People.HandMeshVertexState __retVal = global::Windows.Perception.People.IHandMeshObserver__Impl.Stubs.GetVertexStateForPose(
								this, 
								handPose
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NeutralPose")]
		public global::Windows.Perception.People.HandPose get_NeutralPose()
		{
			global::Windows.Perception.People.HandPose __retVal = global::Windows.Perception.People.IHandMeshObserver__Impl.Stubs.get_NeutralPose(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NeutralPoseVersion")]
		public int get_NeutralPoseVersion()
		{
			int __retVal = global::Windows.Perception.People.IHandMeshObserver__Impl.Stubs.get_NeutralPoseVersion(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ModelId")]
		public int get_ModelId()
		{
			int __retVal = global::Windows.Perception.People.IHandMeshObserver__Impl.Stubs.get_ModelId(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public HandMeshObserver(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Perception.People.IHandPose))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HandPose : global::System.__ComObject, global::Windows.Perception.People.IHandPose
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool TryGetJoints(
					global::Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem, 
					global::Windows.Perception.People.HandJointKind[] joints, 
					global::Windows.Perception.People.JointPose[] jointPoses)
		{
			bool __retVal = global::Windows.Perception.People.IHandPose__Impl.Stubs.TryGetJoints(
								this, 
								coordinateSystem, 
								joints, 
								jointPoses
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Perception.People.JointPose GetRelativeJoint(
					global::Windows.Perception.People.HandJointKind joint, 
					global::Windows.Perception.People.HandJointKind referenceJoint)
		{
			global::Windows.Perception.People.JointPose __retVal = global::Windows.Perception.People.IHandPose__Impl.Stubs.GetRelativeJoint(
								this, 
								joint, 
								referenceJoint
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void GetRelativeJoints(
					global::Windows.Perception.People.HandJointKind[] joints, 
					global::Windows.Perception.People.HandJointKind[] referenceJoints, 
					global::Windows.Perception.People.JointPose[] jointPoses)
		{
			global::Windows.Perception.People.IHandPose__Impl.Stubs.GetRelativeJoints(
								this, 
								joints, 
								referenceJoints, 
								jointPoses
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public HandPose(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Perception.People.IHandMeshVertexState))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HandMeshVertexState : global::System.__ComObject, global::Windows.Perception.People.IHandMeshVertexState
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CoordinateSystem")]
		public global::Windows.Perception.Spatial.SpatialCoordinateSystem get_CoordinateSystem()
		{
			global::Windows.Perception.Spatial.SpatialCoordinateSystem __retVal = global::Windows.Perception.People.IHandMeshVertexState__Impl.Stubs.get_CoordinateSystem(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void GetVertices(global::Windows.Perception.People.HandMeshVertex[] vertices)
		{
			global::Windows.Perception.People.IHandMeshVertexState__Impl.Stubs.GetVertices(
								this, 
								vertices
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UpdateTimestamp")]
		public global::Windows.Perception.PerceptionTimestamp get_UpdateTimestamp()
		{
			global::Windows.Perception.PerceptionTimestamp __retVal = global::Windows.Perception.People.IHandMeshVertexState__Impl.Stubs.get_UpdateTimestamp(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public HandMeshVertexState(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Perception.People.IHeadPose))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HeadPose : global::System.__ComObject, global::Windows.Perception.People.IHeadPose
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Position")]
		public global::System.Numerics.Vector3 get_Position()
		{
			global::System.Numerics.Vector3 __retVal = global::Windows.Perception.People.IHeadPose__Impl.Stubs.get_Position(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ForwardDirection")]
		public global::System.Numerics.Vector3 get_ForwardDirection()
		{
			global::System.Numerics.Vector3 __retVal = global::Windows.Perception.People.IHeadPose__Impl.Stubs.get_ForwardDirection(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public HeadPose(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Perception.People.IEyesPose))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(524288)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class EyesPose : global::System.__ComObject, global::Windows.Perception.People.IEyesPose
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsCalibrationValid")]
		public bool get_IsCalibrationValid()
		{
			bool __retVal = global::Windows.Perception.People.IEyesPose__Impl.Stubs.get_IsCalibrationValid(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gaze")]
		public global::System.Nullable<global::Windows.Perception.Spatial.SpatialRay> get_Gaze()
		{
			global::System.Nullable<global::Windows.Perception.Spatial.SpatialRay> __retVal = global::Windows.Perception.People.IEyesPose__Impl.Stubs.get_Gaze(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UpdateTimestamp")]
		public global::Windows.Perception.PerceptionTimestamp get_UpdateTimestamp()
		{
			global::Windows.Perception.PerceptionTimestamp __retVal = global::Windows.Perception.People.IEyesPose__Impl.Stubs.get_UpdateTimestamp(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static bool IsSupported()
		{
			bool retval;
			retval = __Factory_Windows_Perception_People__IEyesPoseStatics_IsSupported("Windows.Perception.People.EyesPose");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static bool __Factory_Windows_Perception_People__IEyesPoseStatics_IsSupported(string typeName)
		{
			bool __pRetVal;
			__pRetVal = global::Windows.Perception.People.IEyesPoseStatics__Impl.Stubs.IsSupported(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Perception.People.IEyesPoseStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Input.GazeInputAccessStatus> RequestAccessAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Input.GazeInputAccessStatus> retval;
			retval = __Factory_Windows_Perception_People__IEyesPoseStatics_RequestAccessAsync("Windows.Perception.People.EyesPose");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Input.GazeInputAccessStatus> __Factory_Windows_Perception_People__IEyesPoseStatics_RequestAccessAsync(string typeName)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Input.GazeInputAccessStatus> __pRetVal;
			__pRetVal = global::Windows.Perception.People.IEyesPoseStatics__Impl.Stubs.RequestAccessAsync(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Perception.People.IEyesPoseStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public EyesPose(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHandMeshObserver
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		global::Windows.UI.Input.Spatial.SpatialInteractionSource get_Source();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TriangleIndexCount")]
		uint get_TriangleIndexCount();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VertexCount")]
		uint get_VertexCount();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetTriangleIndices(ushort[] indices);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Perception.People.HandMeshVertexState GetVertexStateForPose(global::Windows.Perception.People.HandPose handPose);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NeutralPose")]
		global::Windows.Perception.People.HandPose get_NeutralPose();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NeutralPoseVersion")]
		int get_NeutralPoseVersion();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ModelId")]
		int get_ModelId();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHandPose
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool TryGetJoints(
					global::Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem, 
					global::Windows.Perception.People.HandJointKind[] joints, 
					global::Windows.Perception.People.JointPose[] jointPoses);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Perception.People.JointPose GetRelativeJoint(
					global::Windows.Perception.People.HandJointKind joint, 
					global::Windows.Perception.People.HandJointKind referenceJoint);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetRelativeJoints(
					global::Windows.Perception.People.HandJointKind[] joints, 
					global::Windows.Perception.People.HandJointKind[] referenceJoints, 
					global::Windows.Perception.People.JointPose[] jointPoses);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHandMeshVertexState
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CoordinateSystem")]
		global::Windows.Perception.Spatial.SpatialCoordinateSystem get_CoordinateSystem();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void GetVertices(global::Windows.Perception.People.HandMeshVertex[] vertices);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UpdateTimestamp")]
		global::Windows.Perception.PerceptionTimestamp get_UpdateTimestamp();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHeadPose
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Position")]
		global::System.Numerics.Vector3 get_Position();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ForwardDirection")]
		global::System.Numerics.Vector3 get_ForwardDirection();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IEyesPoseStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsSupported();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Input.GazeInputAccessStatus> RequestAccessAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IEyesPose
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsCalibrationValid")]
		bool get_IsCalibrationValid();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gaze")]
		global::System.Nullable<global::Windows.Perception.Spatial.SpatialRay> get_Gaze();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UpdateTimestamp")]
		global::Windows.Perception.PerceptionTimestamp get_UpdateTimestamp();
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HandJointKind
	{
		Palm = 0,
		Wrist = 1,
		ThumbMetacarpal = 2,
		ThumbProximal = 3,
		ThumbDistal = 4,
		ThumbTip = 5,
		IndexMetacarpal = 6,
		IndexProximal = 7,
		IndexIntermediate = 8,
		IndexDistal = 9,
		IndexTip = 10,
		MiddleMetacarpal = 11,
		MiddleProximal = 12,
		MiddleIntermediate = 13,
		MiddleDistal = 14,
		MiddleTip = 15,
		RingMetacarpal = 16,
		RingProximal = 17,
		RingIntermediate = 18,
		RingDistal = 19,
		RingTip = 20,
		LittleMetacarpal = 21,
		LittleProximal = 22,
		LittleIntermediate = 23,
		LittleDistal = 24,
		LittleTip = 25,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct JointPose
	{
		public global::System.Numerics.Quaternion Orientation;
		public global::System.Numerics.Vector3 Position;
		public float Radius;
		public global::Windows.Perception.People.JointPoseAccuracy Accuracy;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum JointPoseAccuracy
	{
		High = 0,
		Approximate = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct HandMeshVertex
	{
		public global::System.Numerics.Vector3 Position;
		public global::System.Numerics.Vector3 Normal;
	}
}

namespace Windows.Perception.Spatial
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Perception.Spatial.ISpatialCoordinateSystem))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SpatialCoordinateSystem : global::System.__ComObject, global::Windows.Perception.Spatial.ISpatialCoordinateSystem
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::System.Nullable<global::System.Numerics.Matrix4x4> TryGetTransformTo(global::Windows.Perception.Spatial.SpatialCoordinateSystem target)
		{
			global::System.Nullable<global::System.Numerics.Matrix4x4> __retVal = global::Windows.Perception.Spatial.ISpatialCoordinateSystem__Impl.Stubs.TryGetTransformTo(
								this, 
								target
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public SpatialCoordinateSystem(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialCoordinateSystem
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.Nullable<global::System.Numerics.Matrix4x4> TryGetTransformTo(global::Windows.Perception.Spatial.SpatialCoordinateSystem target);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct SpatialRay
	{
		public global::System.Numerics.Vector3 Origin;
		public global::System.Numerics.Vector3 Direction;
	}
}

namespace Windows.Perception.Spatial.Surfaces
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Perception.Spatial.Surfaces.ISpatialSurfaceObserver))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(262144)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SpatialSurfaceObserver : global::System.__ComObject, global::Windows.Perception.Spatial.Surfaces.ISpatialSurfaceObserver
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static bool IsSupported()
		{
			bool retval;
			retval = __Factory_Windows_Perception_Spatial_Surfaces__ISpatialSurfaceObserverStatics2_IsSupported("Windows.Perception.Spatial.Surfaces.SpatialSurfaceObserver");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static bool __Factory_Windows_Perception_Spatial_Surfaces__ISpatialSurfaceObserverStatics2_IsSupported(string typeName)
		{
			bool __pRetVal;
			__pRetVal = global::Windows.Perception.Spatial.Surfaces.ISpatialSurfaceObserverStatics2__Impl.Stubs.IsSupported(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Perception.Spatial.Surfaces.ISpatialSurfaceObserverStatics2).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public SpatialSurfaceObserver(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialSurfaceObserverStatics2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsSupported();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialSurfaceObserver
	{
	}
}

namespace Windows.Security.Credentials
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Security.Credentials.IPasswordCredential))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PasswordCredential : global::System.__ComObject, global::Windows.Security.Credentials.IPasswordCredential
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public PasswordCredential()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Security.Credentials.PasswordCredential");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UserName")]
		public void put_UserName(string userName)
		{
			global::Windows.Security.Credentials.IPasswordCredential__Impl.Stubs.put_UserName(
								this, 
								userName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Password")]
		public void put_Password(string password)
		{
			global::Windows.Security.Credentials.IPasswordCredential__Impl.Stubs.put_Password(
								this, 
								password
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public PasswordCredential(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPasswordCredential
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UserName")]
		void put_UserName(string userName);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Password")]
		void put_Password(string password);
	}
}

namespace Windows.Security.Cryptography
{
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CryptographicBuffer : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Storage.Streams.IBuffer CreateFromByteArray(byte[] value)
		{
			global::Windows.Storage.Streams.IBuffer retval;
			retval = __Factory_Windows_Security_Cryptography__ICryptographicBufferStatics_CreateFromByteArray(
								"Windows.Security.Cryptography.CryptographicBuffer", 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Storage.Streams.IBuffer __Factory_Windows_Security_Cryptography__ICryptographicBufferStatics_CreateFromByteArray(
					string typeName, 
					byte[] value)
		{
			global::Windows.Storage.Streams.IBuffer __pRetVal;
			__pRetVal = global::Windows.Security.Cryptography.ICryptographicBufferStatics__Impl.Stubs.CreateFromByteArray(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Security.Cryptography.ICryptographicBufferStatics).TypeHandle
												), 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void CopyToByteArray(
					global::Windows.Storage.Streams.IBuffer buffer, 
					out byte[] value)
		{
			__Factory_Windows_Security_Cryptography__ICryptographicBufferStatics_CopyToByteArray(
								"Windows.Security.Cryptography.CryptographicBuffer", 
								buffer, 
								out value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_Security_Cryptography__ICryptographicBufferStatics_CopyToByteArray(
					string typeName, 
					global::Windows.Storage.Streams.IBuffer buffer, 
					out byte[] value)
		{
			global::Windows.Security.Cryptography.ICryptographicBufferStatics__Impl.Stubs.CopyToByteArray(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Security.Cryptography.ICryptographicBufferStatics).TypeHandle
												), 
								buffer, 
								out value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static string EncodeToBase64String(global::Windows.Storage.Streams.IBuffer buffer)
		{
			string retval;
			retval = __Factory_Windows_Security_Cryptography__ICryptographicBufferStatics_EncodeToBase64String(
								"Windows.Security.Cryptography.CryptographicBuffer", 
								buffer
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static string __Factory_Windows_Security_Cryptography__ICryptographicBufferStatics_EncodeToBase64String(
					string typeName, 
					global::Windows.Storage.Streams.IBuffer buffer)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Security.Cryptography.ICryptographicBufferStatics__Impl.Stubs.EncodeToBase64String(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Security.Cryptography.ICryptographicBufferStatics).TypeHandle
												), 
								buffer
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Storage.Streams.IBuffer ConvertStringToBinary(
					string value, 
					global::Windows.Security.Cryptography.BinaryStringEncoding encoding)
		{
			global::Windows.Storage.Streams.IBuffer retval;
			retval = __Factory_Windows_Security_Cryptography__ICryptographicBufferStatics_ConvertStringToBinary(
								"Windows.Security.Cryptography.CryptographicBuffer", 
								value, 
								encoding
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Storage.Streams.IBuffer __Factory_Windows_Security_Cryptography__ICryptographicBufferStatics_ConvertStringToBinary(
					string typeName, 
					string value, 
					global::Windows.Security.Cryptography.BinaryStringEncoding encoding)
		{
			global::Windows.Storage.Streams.IBuffer __pRetVal;
			__pRetVal = global::Windows.Security.Cryptography.ICryptographicBufferStatics__Impl.Stubs.ConvertStringToBinary(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Security.Cryptography.ICryptographicBufferStatics).TypeHandle
												), 
								value, 
								encoding
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public CryptographicBuffer(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICryptographicBufferStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Streams.IBuffer CreateFromByteArray(byte[] value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void CopyToByteArray(
					global::Windows.Storage.Streams.IBuffer buffer, 
					out byte[] value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string EncodeToBase64String(global::Windows.Storage.Streams.IBuffer buffer);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Streams.IBuffer ConvertStringToBinary(
					string value, 
					global::Windows.Security.Cryptography.BinaryStringEncoding encoding);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum BinaryStringEncoding
	{
		Utf8 = 0,
		Utf16LE = 1,
		Utf16BE = 2,
	}
}

namespace Windows.Security.Cryptography.Certificates
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Security.Cryptography.Certificates.ICertificate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Certificate : global::System.__ComObject, global::Windows.Security.Cryptography.Certificates.ICertificate, global::Windows.Security.Cryptography.Certificates.ICertificate2, global::Windows.Security.Cryptography.Certificates.ICertificate3
	{
		public Certificate(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Security.Cryptography.Certificates.ICertificateQuery))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CertificateQuery : global::System.__ComObject, global::Windows.Security.Cryptography.Certificates.ICertificateQuery
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public CertificateQuery()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Security.Cryptography.Certificates.CertificateQuery");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EnhancedKeyUsages")]
		public global::System.Collections.Generic.IList<string> get_EnhancedKeyUsages()
		{
			global::System.Collections.Generic.IList<string> __retVal = global::Windows.Security.Cryptography.Certificates.ICertificateQuery__Impl.Stubs.get_EnhancedKeyUsages(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public CertificateQuery(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CertificateStores : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> FindAllAsync(global::Windows.Security.Cryptography.Certificates.CertificateQuery query)
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> retval;
			retval = __Factory_Windows_Security_Cryptography_Certificates__ICertificateStoresStatics_FindAllAsync(
								"Windows.Security.Cryptography.Certificates.CertificateStores", 
								query
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> __Factory_Windows_Security_Cryptography_Certificates__ICertificateStoresStatics_FindAllAsync(
					string typeName, 
					global::Windows.Security.Cryptography.Certificates.CertificateQuery query)
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> __pRetVal;
			__pRetVal = global::Windows.Security.Cryptography.Certificates.ICertificateStoresStatics__Impl.Stubs.FindAllAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Security.Cryptography.Certificates.ICertificateStoresStatics).TypeHandle
												), 
								query
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public CertificateStores(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICertificate
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICertificate2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICertificate3
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICertificateQuery
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EnhancedKeyUsages")]
		global::System.Collections.Generic.IList<string> get_EnhancedKeyUsages();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICertificateStoresStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> FindAllAsync(global::Windows.Security.Cryptography.Certificates.CertificateQuery query);
	}
}

namespace Windows.Security.Cryptography.Core
{
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HashAlgorithmNames : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Sha1")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static string get_Sha1()
		{
			string retval;
			retval = __Factory_Windows_Security_Cryptography_Core__IHashAlgorithmNamesStatics_get_Sha1("Windows.Security.Cryptography.Core.HashAlgorithmNames");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static string __Factory_Windows_Security_Cryptography_Core__IHashAlgorithmNamesStatics_get_Sha1(string typeName)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Security.Cryptography.Core.IHashAlgorithmNamesStatics__Impl.Stubs.get_Sha1(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Security.Cryptography.Core.IHashAlgorithmNamesStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public HashAlgorithmNames(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Security.Cryptography.Core.IHashAlgorithmProvider))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HashAlgorithmProvider : global::System.__ComObject, global::Windows.Security.Cryptography.Core.IHashAlgorithmProvider
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Streams.IBuffer HashData(global::Windows.Storage.Streams.IBuffer data)
		{
			global::Windows.Storage.Streams.IBuffer __retVal = global::Windows.Security.Cryptography.Core.IHashAlgorithmProvider__Impl.Stubs.HashData(
								this, 
								data
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Security.Cryptography.Core.HashAlgorithmProvider OpenAlgorithm(string algorithm)
		{
			global::Windows.Security.Cryptography.Core.HashAlgorithmProvider retval;
			retval = __Factory_Windows_Security_Cryptography_Core__IHashAlgorithmProviderStatics_OpenAlgorithm(
								"Windows.Security.Cryptography.Core.HashAlgorithmProvider", 
								algorithm
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Security.Cryptography.Core.HashAlgorithmProvider __Factory_Windows_Security_Cryptography_Core__IHashAlgorithmProviderStatics_OpenAlgorithm(
					string typeName, 
					string algorithm)
		{
			global::Windows.Security.Cryptography.Core.HashAlgorithmProvider __pRetVal;
			__pRetVal = global::Windows.Security.Cryptography.Core.IHashAlgorithmProviderStatics__Impl.Stubs.OpenAlgorithm(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Security.Cryptography.Core.IHashAlgorithmProviderStatics).TypeHandle
												), 
								algorithm
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public HashAlgorithmProvider(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHashAlgorithmNamesStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Sha1")]
		string get_Sha1();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHashAlgorithmProviderStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Security.Cryptography.Core.HashAlgorithmProvider OpenAlgorithm(string algorithm);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHashAlgorithmProvider
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Streams.IBuffer HashData(global::Windows.Storage.Streams.IBuffer data);
	}
}

namespace Windows.Security.ExchangeActiveSyncProvisioning
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Security.ExchangeActiveSyncProvisioning.IEasClientDeviceInformation))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class EasClientDeviceInformation : global::System.__ComObject, global::Windows.Security.ExchangeActiveSyncProvisioning.IEasClientDeviceInformation
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public EasClientDeviceInformation()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Security.ExchangeActiveSyncProvisioning.EasClientDeviceInformation");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SystemManufacturer")]
		public string get_SystemManufacturer()
		{
			string __retVal = global::Windows.Security.ExchangeActiveSyncProvisioning.IEasClientDeviceInformation__Impl.Stubs.get_SystemManufacturer(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SystemProductName")]
		public string get_SystemProductName()
		{
			string __retVal = global::Windows.Security.ExchangeActiveSyncProvisioning.IEasClientDeviceInformation__Impl.Stubs.get_SystemProductName(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public EasClientDeviceInformation(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IEasClientDeviceInformation
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SystemManufacturer")]
		string get_SystemManufacturer();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SystemProductName")]
		string get_SystemProductName();
	}
}

namespace Windows.Storage
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageFile))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Streams.IInputStreamReference))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Streams.IRandomAccessStreamReference))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageItem))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageItemProperties))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageItemProperties2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageItem2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageItemPropertiesWithProvider))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageFilePropertiesWithAvailability))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageFile2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageFile : global::System.__ComObject, global::Windows.Storage.IStorageFile, global::Windows.Storage.Streams.IInputStreamReference, global::Windows.Storage.Streams.IRandomAccessStreamReference, global::Windows.Storage.IStorageItem, global::Windows.Storage.IStorageItemProperties, global::Windows.Storage.IStorageItemProperties2, global::Windows.Storage.IStorageItem2, global::Windows.Storage.IStorageItemPropertiesWithProvider, global::Windows.Storage.IStorageFilePropertiesWithAvailability, global::Windows.Storage.IStorageFile2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FileType")]
		public string get_FileType()
		{
			string __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.get_FileType(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentType")]
		public string get_ContentType()
		{
			string __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.get_ContentType(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> OpenAsync(global::Windows.Storage.FileAccessMode accessMode)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.OpenAsync(
								this, 
								accessMode
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageStreamTransaction> OpenTransactedWriteAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageStreamTransaction> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.OpenTransactedWriteAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(global::Windows.Storage.IStorageFolder destinationFolder)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.CopyAsync(
								this, 
								destinationFolder
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.CopyAsync(
								this, 
								destinationFolder, 
								desiredNewName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName, 
					global::Windows.Storage.NameCollisionOption option)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.CopyAsync(
								this, 
								destinationFolder, 
								desiredNewName, 
								option
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction CopyAndReplaceAsync(global::Windows.Storage.IStorageFile fileToReplace)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.CopyAndReplaceAsync(
								this, 
								fileToReplace
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction MoveAsync(global::Windows.Storage.IStorageFolder destinationFolder)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.MoveAsync(
								this, 
								destinationFolder
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction MoveAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.MoveAsync(
								this, 
								destinationFolder, 
								desiredNewName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction MoveAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName, 
					global::Windows.Storage.NameCollisionOption option)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.MoveAsync(
								this, 
								destinationFolder, 
								desiredNewName, 
								option
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction MoveAndReplaceAsync(global::Windows.Storage.IStorageFile fileToReplace)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.MoveAndReplaceAsync(
								this, 
								fileToReplace
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction RenameAsync(string desiredName)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.RenameAsync(
								this, 
								desiredName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction RenameAsync(
					string desiredName, 
					global::Windows.Storage.NameCollisionOption option)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.RenameAsync(
								this, 
								desiredName, 
								option
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction DeleteAsync()
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.DeleteAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction DeleteAsync(global::Windows.Storage.StorageDeleteOption option)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.DeleteAsync(
								this, 
								option
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.BasicProperties> GetBasicPropertiesAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.BasicProperties> __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.GetBasicPropertiesAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		public string get_Name()
		{
			string __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.get_Name(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Path")]
		public string get_Path()
		{
			string __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.get_Path(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Attributes")]
		public global::Windows.Storage.FileAttributes get_Attributes()
		{
			global::Windows.Storage.FileAttributes __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.get_Attributes(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DateCreated")]
		public global::System.DateTimeOffset get_DateCreated()
		{
			global::System.DateTimeOffset __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.get_DateCreated(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool IsOfType(global::Windows.Storage.StorageItemTypes type)
		{
			bool __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.IsOfType(
								this, 
								type
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStreamWithContentType> OpenReadAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStreamWithContentType> __retVal = global::Windows.Storage.Streams.IRandomAccessStreamReference__Impl.Stubs.OpenReadAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IInputStream> OpenSequentialReadAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IInputStream> __retVal = global::Windows.Storage.Streams.IInputStreamReference__Impl.Stubs.OpenSequentialReadAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetThumbnailAsync(global::Windows.Storage.FileProperties.ThumbnailMode mode)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> __retVal = global::Windows.Storage.IStorageItemProperties__Impl.Stubs.GetThumbnailAsync(
								this, 
								mode
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetThumbnailAsync(
					global::Windows.Storage.FileProperties.ThumbnailMode mode, 
					uint requestedSize)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> __retVal = global::Windows.Storage.IStorageItemProperties__Impl.Stubs.GetThumbnailAsync(
								this, 
								mode, 
								requestedSize
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetThumbnailAsync(
					global::Windows.Storage.FileProperties.ThumbnailMode mode, 
					uint requestedSize, 
					global::Windows.Storage.FileProperties.ThumbnailOptions options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> __retVal = global::Windows.Storage.IStorageItemProperties__Impl.Stubs.GetThumbnailAsync(
								this, 
								mode, 
								requestedSize, 
								options
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Windows.Storage.IStorageItemProperties__Impl.Stubs.get_DisplayName(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayType")]
		public string get_DisplayType()
		{
			string __retVal = global::Windows.Storage.IStorageItemProperties__Impl.Stubs.get_DisplayType(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FolderRelativeId")]
		public string get_FolderRelativeId()
		{
			string __retVal = global::Windows.Storage.IStorageItemProperties__Impl.Stubs.get_FolderRelativeId(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Properties")]
		public global::Windows.Storage.FileProperties.StorageItemContentProperties get_Properties()
		{
			global::Windows.Storage.FileProperties.StorageItemContentProperties __retVal = global::Windows.Storage.IStorageItemProperties__Impl.Stubs.get_Properties(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetScaledImageAsThumbnailAsync(global::Windows.Storage.FileProperties.ThumbnailMode mode)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> __retVal = global::Windows.Storage.IStorageItemProperties2__Impl.Stubs.GetScaledImageAsThumbnailAsync(
								this, 
								mode
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetScaledImageAsThumbnailAsync(
					global::Windows.Storage.FileProperties.ThumbnailMode mode, 
					uint requestedSize)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> __retVal = global::Windows.Storage.IStorageItemProperties2__Impl.Stubs.GetScaledImageAsThumbnailAsync(
								this, 
								mode, 
								requestedSize
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetScaledImageAsThumbnailAsync(
					global::Windows.Storage.FileProperties.ThumbnailMode mode, 
					uint requestedSize, 
					global::Windows.Storage.FileProperties.ThumbnailOptions options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> __retVal = global::Windows.Storage.IStorageItemProperties2__Impl.Stubs.GetScaledImageAsThumbnailAsync(
								this, 
								mode, 
								requestedSize, 
								options
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> GetParentAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> __retVal = global::Windows.Storage.IStorageItem2__Impl.Stubs.GetParentAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool IsEqual(global::Windows.Storage.IStorageItem item)
		{
			bool __retVal = global::Windows.Storage.IStorageItem2__Impl.Stubs.IsEqual(
								this, 
								item
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Provider")]
		public global::Windows.Storage.StorageProvider get_Provider()
		{
			global::Windows.Storage.StorageProvider __retVal = global::Windows.Storage.IStorageItemPropertiesWithProvider__Impl.Stubs.get_Provider(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAvailable")]
		public bool get_IsAvailable()
		{
			bool __retVal = global::Windows.Storage.IStorageFilePropertiesWithAvailability__Impl.Stubs.get_IsAvailable(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> OpenAsync(
					global::Windows.Storage.FileAccessMode accessMode, 
					global::Windows.Storage.StorageOpenOptions options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> __retVal = global::Windows.Storage.IStorageFile2__Impl.Stubs.OpenAsync(
								this, 
								accessMode, 
								options
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageStreamTransaction> OpenTransactedWriteAsync(global::Windows.Storage.StorageOpenOptions options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageStreamTransaction> __retVal = global::Windows.Storage.IStorageFile2__Impl.Stubs.OpenTransactedWriteAsync(
								this, 
								options
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetFileFromPathAsync(string path)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> retval;
			retval = __Factory_Windows_Storage__IStorageFileStatics_GetFileFromPathAsync(
								"Windows.Storage.StorageFile", 
								path
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __Factory_Windows_Storage__IStorageFileStatics_GetFileFromPathAsync(
					string typeName, 
					string path)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __pRetVal;
			__pRetVal = global::Windows.Storage.IStorageFileStatics__Impl.Stubs.GetFileFromPathAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Storage.IStorageFileStatics).TypeHandle
												), 
								path
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetFileFromApplicationUriAsync(global::System.Uri uri)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> retval;
			retval = __Factory_Windows_Storage__IStorageFileStatics_GetFileFromApplicationUriAsync(
								"Windows.Storage.StorageFile", 
								uri
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __Factory_Windows_Storage__IStorageFileStatics_GetFileFromApplicationUriAsync(
					string typeName, 
					global::System.Uri uri)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __pRetVal;
			__pRetVal = global::Windows.Storage.IStorageFileStatics__Impl.Stubs.GetFileFromApplicationUriAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Storage.IStorageFileStatics).TypeHandle
												), 
								uri
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateStreamedFileAsync(
					string displayNameWithExtension, 
					global::Windows.Storage.StreamedFileDataRequestedHandler dataRequested, 
					global::Windows.Storage.Streams.IRandomAccessStreamReference thumbnail)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> retval;
			retval = __Factory_Windows_Storage__IStorageFileStatics_CreateStreamedFileAsync(
								"Windows.Storage.StorageFile", 
								displayNameWithExtension, 
								dataRequested, 
								thumbnail
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __Factory_Windows_Storage__IStorageFileStatics_CreateStreamedFileAsync(
					string typeName, 
					string displayNameWithExtension, 
					global::Windows.Storage.StreamedFileDataRequestedHandler dataRequested, 
					global::Windows.Storage.Streams.IRandomAccessStreamReference thumbnail)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __pRetVal;
			__pRetVal = global::Windows.Storage.IStorageFileStatics__Impl.Stubs.CreateStreamedFileAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Storage.IStorageFileStatics).TypeHandle
												), 
								displayNameWithExtension, 
								dataRequested, 
								thumbnail
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> ReplaceWithStreamedFileAsync(
					global::Windows.Storage.IStorageFile fileToReplace, 
					global::Windows.Storage.StreamedFileDataRequestedHandler dataRequested, 
					global::Windows.Storage.Streams.IRandomAccessStreamReference thumbnail)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> retval;
			retval = __Factory_Windows_Storage__IStorageFileStatics_ReplaceWithStreamedFileAsync(
								"Windows.Storage.StorageFile", 
								fileToReplace, 
								dataRequested, 
								thumbnail
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __Factory_Windows_Storage__IStorageFileStatics_ReplaceWithStreamedFileAsync(
					string typeName, 
					global::Windows.Storage.IStorageFile fileToReplace, 
					global::Windows.Storage.StreamedFileDataRequestedHandler dataRequested, 
					global::Windows.Storage.Streams.IRandomAccessStreamReference thumbnail)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __pRetVal;
			__pRetVal = global::Windows.Storage.IStorageFileStatics__Impl.Stubs.ReplaceWithStreamedFileAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Storage.IStorageFileStatics).TypeHandle
												), 
								fileToReplace, 
								dataRequested, 
								thumbnail
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public StorageFile(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Streams.IOutputStream))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStreamedFileDataRequest))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StreamedFileDataRequest : global::System.__ComObject, global::Windows.Storage.Streams.IOutputStream, global::System.IDisposable, global::Windows.Storage.IStreamedFileDataRequest
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperationWithProgress<uint, uint> WriteAsync(global::Windows.Storage.Streams.IBuffer buffer)
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<uint, uint> __retVal = global::Windows.Storage.Streams.IOutputStream__Impl.Stubs.WriteAsync(
								this, 
								buffer
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<bool> FlushAsync()
		{
			global::Windows.Foundation.IAsyncOperation<bool> __retVal = global::Windows.Storage.Streams.IOutputStream__Impl.Stubs.FlushAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void FailAndClose(global::Windows.Storage.StreamedFileFailureMode failureMode)
		{
			global::Windows.Storage.IStreamedFileDataRequest__Impl.Stubs.FailAndClose(
								this, 
								failureMode
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public StreamedFileDataRequest(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageStreamTransaction))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageStreamTransaction : global::System.__ComObject, global::Windows.Storage.IStorageStreamTransaction, global::System.IDisposable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Stream")]
		public global::Windows.Storage.Streams.IRandomAccessStream get_Stream()
		{
			global::Windows.Storage.Streams.IRandomAccessStream __retVal = global::Windows.Storage.IStorageStreamTransaction__Impl.Stubs.get_Stream(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction CommitAsync()
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageStreamTransaction__Impl.Stubs.CommitAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public StorageStreamTransaction(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageFolder))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Search.IStorageFolderQueryOperations))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageFolder2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageFolder3))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageFolder : global::System.__ComObject, global::Windows.Storage.IStorageFolder, global::Windows.Storage.IStorageItem, global::Windows.Storage.Search.IStorageFolderQueryOperations, global::Windows.Storage.IStorageItemProperties, global::Windows.Storage.IStorageItemProperties2, global::Windows.Storage.IStorageItem2, global::Windows.Storage.IStorageFolder2, global::Windows.Storage.IStorageItemPropertiesWithProvider, global::Windows.Storage.IStorageFolder3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateFileAsync(string desiredName)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.CreateFileAsync(
								this, 
								desiredName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateFileAsync(
					string desiredName, 
					global::Windows.Storage.CreationCollisionOption options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.CreateFileAsync(
								this, 
								desiredName, 
								options
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> CreateFolderAsync(string desiredName)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.CreateFolderAsync(
								this, 
								desiredName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> CreateFolderAsync(
					string desiredName, 
					global::Windows.Storage.CreationCollisionOption options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.CreateFolderAsync(
								this, 
								desiredName, 
								options
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetFileAsync(string name)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetFileAsync(
								this, 
								name
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> GetFolderAsync(string name)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetFolderAsync(
								this, 
								name
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.IStorageItem> GetItemAsync(string name)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.IStorageItem> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetItemAsync(
								this, 
								name
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> GetFilesAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetFilesAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction RenameAsync(string desiredName)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.RenameAsync(
								this, 
								desiredName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction RenameAsync(
					string desiredName, 
					global::Windows.Storage.NameCollisionOption option)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.RenameAsync(
								this, 
								desiredName, 
								option
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction DeleteAsync()
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.DeleteAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction DeleteAsync(global::Windows.Storage.StorageDeleteOption option)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.DeleteAsync(
								this, 
								option
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.BasicProperties> GetBasicPropertiesAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.BasicProperties> __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.GetBasicPropertiesAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		public string get_Name()
		{
			string __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.get_Name(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Path")]
		public string get_Path()
		{
			string __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.get_Path(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Attributes")]
		public global::Windows.Storage.FileAttributes get_Attributes()
		{
			global::Windows.Storage.FileAttributes __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.get_Attributes(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DateCreated")]
		public global::System.DateTimeOffset get_DateCreated()
		{
			global::System.DateTimeOffset __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.get_DateCreated(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool IsOfType(global::Windows.Storage.StorageItemTypes type)
		{
			bool __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.IsOfType(
								this, 
								type
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Search.IndexedState> GetIndexedStateAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Search.IndexedState> __retVal = global::Windows.Storage.Search.IStorageFolderQueryOperations__Impl.Stubs.GetIndexedStateAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Search.StorageFileQueryResult CreateFileQuery()
		{
			global::Windows.Storage.Search.StorageFileQueryResult __retVal = global::Windows.Storage.Search.IStorageFolderQueryOperations__Impl.Stubs.CreateFileQuery(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Search.StorageFileQueryResult CreateFileQuery(global::Windows.Storage.Search.CommonFileQuery query)
		{
			global::Windows.Storage.Search.StorageFileQueryResult __retVal = global::Windows.Storage.Search.IStorageFolderQueryOperations__Impl.Stubs.CreateFileQuery(
								this, 
								query
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Search.StorageFileQueryResult CreateFileQueryWithOptions(global::Windows.Storage.Search.QueryOptions queryOptions)
		{
			global::Windows.Storage.Search.StorageFileQueryResult __retVal = global::Windows.Storage.Search.IStorageFolderQueryOperations__Impl.Stubs.CreateFileQueryWithOptions(
								this, 
								queryOptions
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Search.StorageFolderQueryResult CreateFolderQuery()
		{
			global::Windows.Storage.Search.StorageFolderQueryResult __retVal = global::Windows.Storage.Search.IStorageFolderQueryOperations__Impl.Stubs.CreateFolderQuery(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Search.StorageFolderQueryResult CreateFolderQuery(global::Windows.Storage.Search.CommonFolderQuery query)
		{
			global::Windows.Storage.Search.StorageFolderQueryResult __retVal = global::Windows.Storage.Search.IStorageFolderQueryOperations__Impl.Stubs.CreateFolderQuery(
								this, 
								query
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Search.StorageFolderQueryResult CreateFolderQueryWithOptions(global::Windows.Storage.Search.QueryOptions queryOptions)
		{
			global::Windows.Storage.Search.StorageFolderQueryResult __retVal = global::Windows.Storage.Search.IStorageFolderQueryOperations__Impl.Stubs.CreateFolderQueryWithOptions(
								this, 
								queryOptions
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Search.StorageItemQueryResult CreateItemQuery()
		{
			global::Windows.Storage.Search.StorageItemQueryResult __retVal = global::Windows.Storage.Search.IStorageFolderQueryOperations__Impl.Stubs.CreateItemQuery(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Search.StorageItemQueryResult CreateItemQueryWithOptions(global::Windows.Storage.Search.QueryOptions queryOptions)
		{
			global::Windows.Storage.Search.StorageItemQueryResult __retVal = global::Windows.Storage.Search.IStorageFolderQueryOperations__Impl.Stubs.CreateItemQueryWithOptions(
								this, 
								queryOptions
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> GetFilesAsync(
					global::Windows.Storage.Search.CommonFileQuery query, 
					uint startIndex, 
					uint maxItemsToRetrieve)
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> __retVal = global::Windows.Storage.Search.IStorageFolderQueryOperations__Impl.Stubs.GetFilesAsync(
								this, 
								query, 
								startIndex, 
								maxItemsToRetrieve
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool AreQueryOptionsSupported(global::Windows.Storage.Search.QueryOptions queryOptions)
		{
			bool __retVal = global::Windows.Storage.Search.IStorageFolderQueryOperations__Impl.Stubs.AreQueryOptionsSupported(
								this, 
								queryOptions
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool IsCommonFolderQuerySupported(global::Windows.Storage.Search.CommonFolderQuery query)
		{
			bool __retVal = global::Windows.Storage.Search.IStorageFolderQueryOperations__Impl.Stubs.IsCommonFolderQuerySupported(
								this, 
								query
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool IsCommonFileQuerySupported(global::Windows.Storage.Search.CommonFileQuery query)
		{
			bool __retVal = global::Windows.Storage.Search.IStorageFolderQueryOperations__Impl.Stubs.IsCommonFileQuerySupported(
								this, 
								query
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetThumbnailAsync(global::Windows.Storage.FileProperties.ThumbnailMode mode)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> __retVal = global::Windows.Storage.IStorageItemProperties__Impl.Stubs.GetThumbnailAsync(
								this, 
								mode
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetThumbnailAsync(
					global::Windows.Storage.FileProperties.ThumbnailMode mode, 
					uint requestedSize)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> __retVal = global::Windows.Storage.IStorageItemProperties__Impl.Stubs.GetThumbnailAsync(
								this, 
								mode, 
								requestedSize
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetThumbnailAsync(
					global::Windows.Storage.FileProperties.ThumbnailMode mode, 
					uint requestedSize, 
					global::Windows.Storage.FileProperties.ThumbnailOptions options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> __retVal = global::Windows.Storage.IStorageItemProperties__Impl.Stubs.GetThumbnailAsync(
								this, 
								mode, 
								requestedSize, 
								options
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Windows.Storage.IStorageItemProperties__Impl.Stubs.get_DisplayName(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayType")]
		public string get_DisplayType()
		{
			string __retVal = global::Windows.Storage.IStorageItemProperties__Impl.Stubs.get_DisplayType(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FolderRelativeId")]
		public string get_FolderRelativeId()
		{
			string __retVal = global::Windows.Storage.IStorageItemProperties__Impl.Stubs.get_FolderRelativeId(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Properties")]
		public global::Windows.Storage.FileProperties.StorageItemContentProperties get_Properties()
		{
			global::Windows.Storage.FileProperties.StorageItemContentProperties __retVal = global::Windows.Storage.IStorageItemProperties__Impl.Stubs.get_Properties(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetScaledImageAsThumbnailAsync(global::Windows.Storage.FileProperties.ThumbnailMode mode)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> __retVal = global::Windows.Storage.IStorageItemProperties2__Impl.Stubs.GetScaledImageAsThumbnailAsync(
								this, 
								mode
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetScaledImageAsThumbnailAsync(
					global::Windows.Storage.FileProperties.ThumbnailMode mode, 
					uint requestedSize)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> __retVal = global::Windows.Storage.IStorageItemProperties2__Impl.Stubs.GetScaledImageAsThumbnailAsync(
								this, 
								mode, 
								requestedSize
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetScaledImageAsThumbnailAsync(
					global::Windows.Storage.FileProperties.ThumbnailMode mode, 
					uint requestedSize, 
					global::Windows.Storage.FileProperties.ThumbnailOptions options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> __retVal = global::Windows.Storage.IStorageItemProperties2__Impl.Stubs.GetScaledImageAsThumbnailAsync(
								this, 
								mode, 
								requestedSize, 
								options
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> GetParentAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> __retVal = global::Windows.Storage.IStorageItem2__Impl.Stubs.GetParentAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool IsEqual(global::Windows.Storage.IStorageItem item)
		{
			bool __retVal = global::Windows.Storage.IStorageItem2__Impl.Stubs.IsEqual(
								this, 
								item
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.IStorageItem> TryGetItemAsync(string name)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.IStorageItem> __retVal = global::Windows.Storage.IStorageFolder2__Impl.Stubs.TryGetItemAsync(
								this, 
								name
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Provider")]
		public global::Windows.Storage.StorageProvider get_Provider()
		{
			global::Windows.Storage.StorageProvider __retVal = global::Windows.Storage.IStorageItemPropertiesWithProvider__Impl.Stubs.get_Provider(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.StorageLibraryChangeTracker TryGetChangeTracker()
		{
			global::Windows.Storage.StorageLibraryChangeTracker __retVal = global::Windows.Storage.IStorageFolder3__Impl.Stubs.TryGetChangeTracker(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> GetFolderFromPathAsync(string path)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> retval;
			retval = __Factory_Windows_Storage__IStorageFolderStatics_GetFolderFromPathAsync(
								"Windows.Storage.StorageFolder", 
								path
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> __Factory_Windows_Storage__IStorageFolderStatics_GetFolderFromPathAsync(
					string typeName, 
					string path)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> __pRetVal;
			__pRetVal = global::Windows.Storage.IStorageFolderStatics__Impl.Stubs.GetFolderFromPathAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Storage.IStorageFolderStatics).TypeHandle
												), 
								path
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public StorageFolder(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageProvider))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageProvider2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageProvider : global::System.__ComObject, global::Windows.Storage.IStorageProvider, global::Windows.Storage.IStorageProvider2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		public string get_Id()
		{
			string __retVal = global::Windows.Storage.IStorageProvider__Impl.Stubs.get_Id(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Windows.Storage.IStorageProvider__Impl.Stubs.get_DisplayName(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<bool> IsPropertySupportedForPartialFileAsync(string propertyCanonicalName)
		{
			global::Windows.Foundation.IAsyncOperation<bool> __retVal = global::Windows.Storage.IStorageProvider2__Impl.Stubs.IsPropertySupportedForPartialFileAsync(
								this, 
								propertyCanonicalName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public StorageProvider(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageLibraryChangeTracker))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageLibraryChangeTracker : global::System.__ComObject, global::Windows.Storage.IStorageLibraryChangeTracker
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.StorageLibraryChangeReader GetChangeReader()
		{
			global::Windows.Storage.StorageLibraryChangeReader __retVal = global::Windows.Storage.IStorageLibraryChangeTracker__Impl.Stubs.GetChangeReader(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void Enable()
		{
			global::Windows.Storage.IStorageLibraryChangeTracker__Impl.Stubs.Enable(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void Reset()
		{
			global::Windows.Storage.IStorageLibraryChangeTracker__Impl.Stubs.Reset(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public StorageLibraryChangeTracker(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageLibraryChangeReader))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageLibraryChangeReader : global::System.__ComObject, global::Windows.Storage.IStorageLibraryChangeReader
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction AcceptChangesAsync()
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageLibraryChangeReader__Impl.Stubs.AcceptChangesAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public StorageLibraryChangeReader(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageLibraryChange))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageLibraryChange : global::System.__ComObject, global::Windows.Storage.IStorageLibraryChange
	{
		public StorageLibraryChange(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IApplicationData))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ApplicationData : global::System.__ComObject, global::Windows.Storage.IApplicationData
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LocalSettings")]
		public global::Windows.Storage.ApplicationDataContainer get_LocalSettings()
		{
			global::Windows.Storage.ApplicationDataContainer __retVal = global::Windows.Storage.IApplicationData__Impl.Stubs.get_LocalSettings(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LocalFolder")]
		public global::Windows.Storage.StorageFolder get_LocalFolder()
		{
			global::Windows.Storage.StorageFolder __retVal = global::Windows.Storage.IApplicationData__Impl.Stubs.get_LocalFolder(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RoamingFolder")]
		public global::Windows.Storage.StorageFolder get_RoamingFolder()
		{
			global::Windows.Storage.StorageFolder __retVal = global::Windows.Storage.IApplicationData__Impl.Stubs.get_RoamingFolder(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemporaryFolder")]
		public global::Windows.Storage.StorageFolder get_TemporaryFolder()
		{
			global::Windows.Storage.StorageFolder __retVal = global::Windows.Storage.IApplicationData__Impl.Stubs.get_TemporaryFolder(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Storage.ApplicationData get_Current()
		{
			global::Windows.Storage.ApplicationData retval;
			retval = __Factory_Windows_Storage__IApplicationDataStatics_get_Current("Windows.Storage.ApplicationData");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Storage.ApplicationData __Factory_Windows_Storage__IApplicationDataStatics_get_Current(string typeName)
		{
			global::Windows.Storage.ApplicationData __pRetVal;
			__pRetVal = global::Windows.Storage.IApplicationDataStatics__Impl.Stubs.get_Current(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Storage.IApplicationDataStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public ApplicationData(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IApplicationDataContainer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ApplicationDataContainer : global::System.__ComObject, global::Windows.Storage.IApplicationDataContainer
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Values")]
		public global::Windows.Foundation.Collections.IPropertySet get_Values()
		{
			global::Windows.Foundation.Collections.IPropertySet __retVal = global::Windows.Storage.IApplicationDataContainer__Impl.Stubs.get_Values(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public ApplicationDataContainer(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class KnownFolders : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MusicLibrary")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Storage.StorageFolder get_MusicLibrary()
		{
			global::Windows.Storage.StorageFolder retval;
			retval = __Factory_Windows_Storage__IKnownFoldersStatics_get_MusicLibrary("Windows.Storage.KnownFolders");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Storage.StorageFolder __Factory_Windows_Storage__IKnownFoldersStatics_get_MusicLibrary(string typeName)
		{
			global::Windows.Storage.StorageFolder __pRetVal;
			__pRetVal = global::Windows.Storage.IKnownFoldersStatics__Impl.Stubs.get_MusicLibrary(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Storage.IKnownFoldersStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public KnownFolders(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FileIO : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Foundation.IAsyncAction AppendTextAsync(
					global::Windows.Storage.IStorageFile file, 
					string contents)
		{
			global::Windows.Foundation.IAsyncAction retval;
			retval = __Factory_Windows_Storage__IFileIOStatics_AppendTextAsync(
								"Windows.Storage.FileIO", 
								file, 
								contents
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Foundation.IAsyncAction __Factory_Windows_Storage__IFileIOStatics_AppendTextAsync(
					string typeName, 
					global::Windows.Storage.IStorageFile file, 
					string contents)
		{
			global::Windows.Foundation.IAsyncAction __pRetVal;
			__pRetVal = global::Windows.Storage.IFileIOStatics__Impl.Stubs.AppendTextAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Storage.IFileIOStatics).TypeHandle
												), 
								file, 
								contents
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> ReadBufferAsync(global::Windows.Storage.IStorageFile file)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> retval;
			retval = __Factory_Windows_Storage__IFileIOStatics_ReadBufferAsync(
								"Windows.Storage.FileIO", 
								file
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> __Factory_Windows_Storage__IFileIOStatics_ReadBufferAsync(
					string typeName, 
					global::Windows.Storage.IStorageFile file)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> __pRetVal;
			__pRetVal = global::Windows.Storage.IFileIOStatics__Impl.Stubs.ReadBufferAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Storage.IFileIOStatics).TypeHandle
												), 
								file
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public FileIO(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFileStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetFileFromPathAsync(string path);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetFileFromApplicationUriAsync(global::System.Uri uri);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateStreamedFileAsync(
					string displayNameWithExtension, 
					global::Windows.Storage.StreamedFileDataRequestedHandler dataRequested, 
					global::Windows.Storage.Streams.IRandomAccessStreamReference thumbnail);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> ReplaceWithStreamedFileAsync(
					global::Windows.Storage.IStorageFile fileToReplace, 
					global::Windows.Storage.StreamedFileDataRequestedHandler dataRequested, 
					global::Windows.Storage.Streams.IRandomAccessStreamReference thumbnail);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void StreamedFileDataRequestedHandler(global::Windows.Storage.StreamedFileDataRequest stream);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStreamedFileDataRequest
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void FailAndClose(global::Windows.Storage.StreamedFileFailureMode failureMode);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFile : global::Windows.Storage.IStorageItem, global::Windows.Storage.Streams.IRandomAccessStreamReference, global::Windows.Storage.Streams.IInputStreamReference
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FileType")]
		string get_FileType();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentType")]
		string get_ContentType();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> OpenAsync(global::Windows.Storage.FileAccessMode accessMode);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageStreamTransaction> OpenTransactedWriteAsync();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(global::Windows.Storage.IStorageFolder destinationFolder);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName, 
					global::Windows.Storage.NameCollisionOption option);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncAction CopyAndReplaceAsync(global::Windows.Storage.IStorageFile fileToReplace);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncAction MoveAsync(global::Windows.Storage.IStorageFolder destinationFolder);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncAction MoveAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncAction MoveAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName, 
					global::Windows.Storage.NameCollisionOption option);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncAction MoveAndReplaceAsync(global::Windows.Storage.IStorageFile fileToReplace);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItem
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncAction RenameAsync(string desiredName);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncAction RenameAsync(
					string desiredName, 
					global::Windows.Storage.NameCollisionOption option);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncAction DeleteAsync();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncAction DeleteAsync(global::Windows.Storage.StorageDeleteOption option);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.BasicProperties> GetBasicPropertiesAsync();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		string get_Name();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Path")]
		string get_Path();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Attributes")]
		global::Windows.Storage.FileAttributes get_Attributes();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DateCreated")]
		global::System.DateTimeOffset get_DateCreated();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsOfType(global::Windows.Storage.StorageItemTypes type);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageStreamTransaction : global::System.IDisposable
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Stream")]
		global::Windows.Storage.Streams.IRandomAccessStream get_Stream();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncAction CommitAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolder : global::Windows.Storage.IStorageItem
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateFileAsync(string desiredName);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateFileAsync(
					string desiredName, 
					global::Windows.Storage.CreationCollisionOption options);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> CreateFolderAsync(string desiredName);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> CreateFolderAsync(
					string desiredName, 
					global::Windows.Storage.CreationCollisionOption options);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetFileAsync(string name);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> GetFolderAsync(string name);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.IStorageItem> GetItemAsync(string name);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> GetFilesAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolderStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> GetFolderFromPathAsync(string path);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItemProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetThumbnailAsync(global::Windows.Storage.FileProperties.ThumbnailMode mode);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetThumbnailAsync(
					global::Windows.Storage.FileProperties.ThumbnailMode mode, 
					uint requestedSize);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetThumbnailAsync(
					global::Windows.Storage.FileProperties.ThumbnailMode mode, 
					uint requestedSize, 
					global::Windows.Storage.FileProperties.ThumbnailOptions options);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayType")]
		string get_DisplayType();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FolderRelativeId")]
		string get_FolderRelativeId();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Properties")]
		global::Windows.Storage.FileProperties.StorageItemContentProperties get_Properties();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItemProperties2 : global::Windows.Storage.IStorageItemProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetScaledImageAsThumbnailAsync(global::Windows.Storage.FileProperties.ThumbnailMode mode);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetScaledImageAsThumbnailAsync(
					global::Windows.Storage.FileProperties.ThumbnailMode mode, 
					uint requestedSize);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> GetScaledImageAsThumbnailAsync(
					global::Windows.Storage.FileProperties.ThumbnailMode mode, 
					uint requestedSize, 
					global::Windows.Storage.FileProperties.ThumbnailOptions options);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItem2 : global::Windows.Storage.IStorageItem
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> GetParentAsync();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsEqual(global::Windows.Storage.IStorageItem item);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolder2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.IStorageItem> TryGetItemAsync(string name);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItemPropertiesWithProvider : global::Windows.Storage.IStorageItemProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Provider")]
		global::Windows.Storage.StorageProvider get_Provider();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageProvider
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		string get_Id();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageProvider2 : global::Windows.Storage.IStorageProvider
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<bool> IsPropertySupportedForPartialFileAsync(string propertyCanonicalName);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolder3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.StorageLibraryChangeTracker TryGetChangeTracker();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageLibraryChangeTracker
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.StorageLibraryChangeReader GetChangeReader();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Enable();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Reset();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageLibraryChangeReader
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncAction AcceptChangesAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFilePropertiesWithAvailability
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAvailable")]
		bool get_IsAvailable();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFile2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> OpenAsync(
					global::Windows.Storage.FileAccessMode accessMode, 
					global::Windows.Storage.StorageOpenOptions options);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageStreamTransaction> OpenTransactedWriteAsync(global::Windows.Storage.StorageOpenOptions options);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageLibraryChange
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationDataStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		global::Windows.Storage.ApplicationData get_Current();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationData
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LocalSettings")]
		global::Windows.Storage.ApplicationDataContainer get_LocalSettings();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LocalFolder")]
		global::Windows.Storage.StorageFolder get_LocalFolder();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RoamingFolder")]
		global::Windows.Storage.StorageFolder get_RoamingFolder();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TemporaryFolder")]
		global::Windows.Storage.StorageFolder get_TemporaryFolder();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationDataContainer
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Values")]
		global::Windows.Foundation.Collections.IPropertySet get_Values();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IKnownFoldersStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MusicLibrary")]
		global::Windows.Storage.StorageFolder get_MusicLibrary();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFileIOStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncAction AppendTextAsync(
					global::Windows.Storage.IStorageFile file, 
					string contents);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> ReadBufferAsync(global::Windows.Storage.IStorageFile file);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum StreamedFileFailureMode
	{
		Failed = 0,
		CurrentlyUnavailable = 1,
		Incomplete = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum NameCollisionOption
	{
		GenerateUniqueName = 0,
		ReplaceExisting = 1,
		FailIfExists = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum StorageDeleteOption
	{
		Default = 0,
		PermanentDelete = 1,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum FileAttributes : uint
	{
		Normal = 0x0u,
		ReadOnly = 0x1u,
		Directory = 0x10u,
		Archive = 0x20u,
		Temporary = 0x100u,
		LocallyIncomplete = 0x200u,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum StorageItemTypes : uint
	{
		None = 0x0u,
		File = 0x1u,
		Folder = 0x2u,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum FileAccessMode
	{
		Read = 0,
		ReadWrite = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CreationCollisionOption
	{
		GenerateUniqueName = 0,
		ReplaceExisting = 1,
		FailIfExists = 2,
		OpenIfExists = 3,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum StorageOpenOptions : uint
	{
		None = 0x0u,
		AllowOnlyReaders = 0x1u,
		AllowReadersAndWriters = 0x2u,
	}
}

namespace Windows.Storage.FileProperties
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.FileProperties.IBasicProperties))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class BasicProperties : global::System.__ComObject, global::Windows.Storage.FileProperties.IBasicProperties, global::Windows.Storage.FileProperties.IStorageItemExtraProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Size")]
		public ulong get_Size()
		{
			ulong __retVal = global::Windows.Storage.FileProperties.IBasicProperties__Impl.Stubs.get_Size(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction SavePropertiesAsync()
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.FileProperties.IStorageItemExtraProperties__Impl.Stubs.SavePropertiesAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public BasicProperties(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Streams.IRandomAccessStreamWithContentType))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Streams.IContentTypeProvider))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.FileProperties.IThumbnailProperties))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageItemThumbnail : global::System.__ComObject, global::Windows.Storage.Streams.IRandomAccessStreamWithContentType, global::Windows.Storage.Streams.IContentTypeProvider, global::Windows.Storage.Streams.IRandomAccessStream, global::Windows.Storage.Streams.IOutputStream, global::System.IDisposable, global::Windows.Storage.Streams.IInputStream, global::Windows.Storage.FileProperties.IThumbnailProperties
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Size")]
		public ulong get_Size()
		{
			ulong __retVal = global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.get_Size(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Size")]
		public void put_Size(ulong value)
		{
			global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.put_Size(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Streams.IInputStream GetInputStreamAt(ulong position)
		{
			global::Windows.Storage.Streams.IInputStream __retVal = global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.GetInputStreamAt(
								this, 
								position
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Streams.IOutputStream GetOutputStreamAt(ulong position)
		{
			global::Windows.Storage.Streams.IOutputStream __retVal = global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.GetOutputStreamAt(
								this, 
								position
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Position")]
		public ulong get_Position()
		{
			ulong __retVal = global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.get_Position(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void Seek(ulong position)
		{
			global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.Seek(
								this, 
								position
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Streams.IRandomAccessStream CloneStream()
		{
			global::Windows.Storage.Streams.IRandomAccessStream __retVal = global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.CloneStream(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanRead")]
		public bool get_CanRead()
		{
			bool __retVal = global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.get_CanRead(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanWrite")]
		public bool get_CanWrite()
		{
			bool __retVal = global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.get_CanWrite(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IBuffer, uint> ReadAsync(
					global::Windows.Storage.Streams.IBuffer buffer, 
					uint count, 
					global::Windows.Storage.Streams.InputStreamOptions options)
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IBuffer, uint> __retVal = global::Windows.Storage.Streams.IInputStream__Impl.Stubs.ReadAsync(
								this, 
								buffer, 
								count, 
								options
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperationWithProgress<uint, uint> WriteAsync(global::Windows.Storage.Streams.IBuffer buffer)
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<uint, uint> __retVal = global::Windows.Storage.Streams.IOutputStream__Impl.Stubs.WriteAsync(
								this, 
								buffer
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<bool> FlushAsync()
		{
			global::Windows.Foundation.IAsyncOperation<bool> __retVal = global::Windows.Storage.Streams.IOutputStream__Impl.Stubs.FlushAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentType")]
		public string get_ContentType()
		{
			string __retVal = global::Windows.Storage.Streams.IContentTypeProvider__Impl.Stubs.get_ContentType(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OriginalWidth")]
		public uint get_OriginalWidth()
		{
			uint __retVal = global::Windows.Storage.FileProperties.IThumbnailProperties__Impl.Stubs.get_OriginalWidth(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OriginalHeight")]
		public uint get_OriginalHeight()
		{
			uint __retVal = global::Windows.Storage.FileProperties.IThumbnailProperties__Impl.Stubs.get_OriginalHeight(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ReturnedSmallerCachedSize")]
		public bool get_ReturnedSmallerCachedSize()
		{
			bool __retVal = global::Windows.Storage.FileProperties.IThumbnailProperties__Impl.Stubs.get_ReturnedSmallerCachedSize(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Type")]
		public global::Windows.Storage.FileProperties.ThumbnailType get_Type()
		{
			global::Windows.Storage.FileProperties.ThumbnailType __retVal = global::Windows.Storage.FileProperties.IThumbnailProperties__Impl.Stubs.get_Type(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public StorageItemThumbnail(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.FileProperties.IStorageItemContentProperties))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.FileProperties.IStorageItemExtraProperties))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageItemContentProperties : global::System.__ComObject, global::Windows.Storage.FileProperties.IStorageItemContentProperties, global::Windows.Storage.FileProperties.IStorageItemExtraProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.MusicProperties> GetMusicPropertiesAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.MusicProperties> __retVal = global::Windows.Storage.FileProperties.IStorageItemContentProperties__Impl.Stubs.GetMusicPropertiesAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.VideoProperties> GetVideoPropertiesAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.VideoProperties> __retVal = global::Windows.Storage.FileProperties.IStorageItemContentProperties__Impl.Stubs.GetVideoPropertiesAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.ImageProperties> GetImagePropertiesAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.ImageProperties> __retVal = global::Windows.Storage.FileProperties.IStorageItemContentProperties__Impl.Stubs.GetImagePropertiesAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.DocumentProperties> GetDocumentPropertiesAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.DocumentProperties> __retVal = global::Windows.Storage.FileProperties.IStorageItemContentProperties__Impl.Stubs.GetDocumentPropertiesAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction SavePropertiesAsync()
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.FileProperties.IStorageItemExtraProperties__Impl.Stubs.SavePropertiesAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public StorageItemContentProperties(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.FileProperties.IMusicProperties))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MusicProperties : global::System.__ComObject, global::Windows.Storage.FileProperties.IMusicProperties, global::Windows.Storage.FileProperties.IStorageItemExtraProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Album")]
		public string get_Album()
		{
			string __retVal = global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.get_Album(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Album")]
		public void put_Album(string value)
		{
			global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.put_Album(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Artist")]
		public string get_Artist()
		{
			string __retVal = global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.get_Artist(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Artist")]
		public void put_Artist(string value)
		{
			global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.put_Artist(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TrackNumber")]
		public uint get_TrackNumber()
		{
			uint __retVal = global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.get_TrackNumber(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TrackNumber")]
		public void put_TrackNumber(uint value)
		{
			global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.put_TrackNumber(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Title")]
		public string get_Title()
		{
			string __retVal = global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.get_Title(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Title")]
		public void put_Title(string value)
		{
			global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.put_Title(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Rating")]
		public uint get_Rating()
		{
			uint __retVal = global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.get_Rating(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Rating")]
		public void put_Rating(uint value)
		{
			global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.put_Rating(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Bitrate")]
		public uint get_Bitrate()
		{
			uint __retVal = global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.get_Bitrate(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AlbumArtist")]
		public string get_AlbumArtist()
		{
			string __retVal = global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.get_AlbumArtist(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AlbumArtist")]
		public void put_AlbumArtist(string value)
		{
			global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.put_AlbumArtist(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Subtitle")]
		public string get_Subtitle()
		{
			string __retVal = global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.get_Subtitle(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Subtitle")]
		public void put_Subtitle(string value)
		{
			global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.put_Subtitle(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Publisher")]
		public string get_Publisher()
		{
			string __retVal = global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.get_Publisher(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Publisher")]
		public void put_Publisher(string value)
		{
			global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.put_Publisher(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Year")]
		public uint get_Year()
		{
			uint __retVal = global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.get_Year(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Year")]
		public void put_Year(uint value)
		{
			global::Windows.Storage.FileProperties.IMusicProperties__Impl.Stubs.put_Year(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction SavePropertiesAsync()
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.FileProperties.IStorageItemExtraProperties__Impl.Stubs.SavePropertiesAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public MusicProperties(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.FileProperties.IVideoProperties))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class VideoProperties : global::System.__ComObject, global::Windows.Storage.FileProperties.IVideoProperties, global::Windows.Storage.FileProperties.IStorageItemExtraProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Rating")]
		public uint get_Rating()
		{
			uint __retVal = global::Windows.Storage.FileProperties.IVideoProperties__Impl.Stubs.get_Rating(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Rating")]
		public void put_Rating(uint value)
		{
			global::Windows.Storage.FileProperties.IVideoProperties__Impl.Stubs.put_Rating(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Width")]
		public uint get_Width()
		{
			uint __retVal = global::Windows.Storage.FileProperties.IVideoProperties__Impl.Stubs.get_Width(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Height")]
		public uint get_Height()
		{
			uint __retVal = global::Windows.Storage.FileProperties.IVideoProperties__Impl.Stubs.get_Height(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Title")]
		public string get_Title()
		{
			string __retVal = global::Windows.Storage.FileProperties.IVideoProperties__Impl.Stubs.get_Title(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Title")]
		public void put_Title(string value)
		{
			global::Windows.Storage.FileProperties.IVideoProperties__Impl.Stubs.put_Title(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Subtitle")]
		public string get_Subtitle()
		{
			string __retVal = global::Windows.Storage.FileProperties.IVideoProperties__Impl.Stubs.get_Subtitle(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Subtitle")]
		public void put_Subtitle(string value)
		{
			global::Windows.Storage.FileProperties.IVideoProperties__Impl.Stubs.put_Subtitle(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Publisher")]
		public string get_Publisher()
		{
			string __retVal = global::Windows.Storage.FileProperties.IVideoProperties__Impl.Stubs.get_Publisher(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Publisher")]
		public void put_Publisher(string value)
		{
			global::Windows.Storage.FileProperties.IVideoProperties__Impl.Stubs.put_Publisher(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Year")]
		public uint get_Year()
		{
			uint __retVal = global::Windows.Storage.FileProperties.IVideoProperties__Impl.Stubs.get_Year(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Year")]
		public void put_Year(uint value)
		{
			global::Windows.Storage.FileProperties.IVideoProperties__Impl.Stubs.put_Year(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Bitrate")]
		public uint get_Bitrate()
		{
			uint __retVal = global::Windows.Storage.FileProperties.IVideoProperties__Impl.Stubs.get_Bitrate(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		public global::Windows.Storage.FileProperties.VideoOrientation get_Orientation()
		{
			global::Windows.Storage.FileProperties.VideoOrientation __retVal = global::Windows.Storage.FileProperties.IVideoProperties__Impl.Stubs.get_Orientation(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction SavePropertiesAsync()
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.FileProperties.IStorageItemExtraProperties__Impl.Stubs.SavePropertiesAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public VideoProperties(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.FileProperties.IImageProperties))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ImageProperties : global::System.__ComObject, global::Windows.Storage.FileProperties.IImageProperties, global::Windows.Storage.FileProperties.IStorageItemExtraProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Rating")]
		public uint get_Rating()
		{
			uint __retVal = global::Windows.Storage.FileProperties.IImageProperties__Impl.Stubs.get_Rating(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Rating")]
		public void put_Rating(uint value)
		{
			global::Windows.Storage.FileProperties.IImageProperties__Impl.Stubs.put_Rating(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Width")]
		public uint get_Width()
		{
			uint __retVal = global::Windows.Storage.FileProperties.IImageProperties__Impl.Stubs.get_Width(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Height")]
		public uint get_Height()
		{
			uint __retVal = global::Windows.Storage.FileProperties.IImageProperties__Impl.Stubs.get_Height(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Title")]
		public string get_Title()
		{
			string __retVal = global::Windows.Storage.FileProperties.IImageProperties__Impl.Stubs.get_Title(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Title")]
		public void put_Title(string value)
		{
			global::Windows.Storage.FileProperties.IImageProperties__Impl.Stubs.put_Title(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CameraManufacturer")]
		public string get_CameraManufacturer()
		{
			string __retVal = global::Windows.Storage.FileProperties.IImageProperties__Impl.Stubs.get_CameraManufacturer(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CameraManufacturer")]
		public void put_CameraManufacturer(string value)
		{
			global::Windows.Storage.FileProperties.IImageProperties__Impl.Stubs.put_CameraManufacturer(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CameraModel")]
		public string get_CameraModel()
		{
			string __retVal = global::Windows.Storage.FileProperties.IImageProperties__Impl.Stubs.get_CameraModel(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CameraModel")]
		public void put_CameraModel(string value)
		{
			global::Windows.Storage.FileProperties.IImageProperties__Impl.Stubs.put_CameraModel(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		public global::Windows.Storage.FileProperties.PhotoOrientation get_Orientation()
		{
			global::Windows.Storage.FileProperties.PhotoOrientation __retVal = global::Windows.Storage.FileProperties.IImageProperties__Impl.Stubs.get_Orientation(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction SavePropertiesAsync()
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.FileProperties.IStorageItemExtraProperties__Impl.Stubs.SavePropertiesAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public ImageProperties(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.FileProperties.IDocumentProperties))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DocumentProperties : global::System.__ComObject, global::Windows.Storage.FileProperties.IDocumentProperties, global::Windows.Storage.FileProperties.IStorageItemExtraProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Title")]
		public string get_Title()
		{
			string __retVal = global::Windows.Storage.FileProperties.IDocumentProperties__Impl.Stubs.get_Title(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Title")]
		public void put_Title(string value)
		{
			global::Windows.Storage.FileProperties.IDocumentProperties__Impl.Stubs.put_Title(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Comment")]
		public string get_Comment()
		{
			string __retVal = global::Windows.Storage.FileProperties.IDocumentProperties__Impl.Stubs.get_Comment(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Comment")]
		public void put_Comment(string value)
		{
			global::Windows.Storage.FileProperties.IDocumentProperties__Impl.Stubs.put_Comment(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction SavePropertiesAsync()
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.FileProperties.IStorageItemExtraProperties__Impl.Stubs.SavePropertiesAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public DocumentProperties(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBasicProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Size")]
		ulong get_Size();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItemExtraProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncAction SavePropertiesAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IThumbnailProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OriginalWidth")]
		uint get_OriginalWidth();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OriginalHeight")]
		uint get_OriginalHeight();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ReturnedSmallerCachedSize")]
		bool get_ReturnedSmallerCachedSize();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Type")]
		global::Windows.Storage.FileProperties.ThumbnailType get_Type();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItemContentProperties : global::Windows.Storage.FileProperties.IStorageItemExtraProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.MusicProperties> GetMusicPropertiesAsync();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.VideoProperties> GetVideoPropertiesAsync();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.ImageProperties> GetImagePropertiesAsync();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.DocumentProperties> GetDocumentPropertiesAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMusicProperties : global::Windows.Storage.FileProperties.IStorageItemExtraProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Album")]
		string get_Album();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Album")]
		void put_Album(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Artist")]
		string get_Artist();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Artist")]
		void put_Artist(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TrackNumber")]
		uint get_TrackNumber();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "TrackNumber")]
		void put_TrackNumber(uint value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Title")]
		string get_Title();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Title")]
		void put_Title(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Rating")]
		uint get_Rating();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Rating")]
		void put_Rating(uint value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Bitrate")]
		uint get_Bitrate();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AlbumArtist")]
		string get_AlbumArtist();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AlbumArtist")]
		void put_AlbumArtist(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Subtitle")]
		string get_Subtitle();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Subtitle")]
		void put_Subtitle(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Publisher")]
		string get_Publisher();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Publisher")]
		void put_Publisher(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Year")]
		uint get_Year();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Year")]
		void put_Year(uint value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVideoProperties : global::Windows.Storage.FileProperties.IStorageItemExtraProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Rating")]
		uint get_Rating();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Rating")]
		void put_Rating(uint value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Width")]
		uint get_Width();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Height")]
		uint get_Height();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Title")]
		string get_Title();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Title")]
		void put_Title(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Subtitle")]
		string get_Subtitle();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Subtitle")]
		void put_Subtitle(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Publisher")]
		string get_Publisher();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Publisher")]
		void put_Publisher(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Year")]
		uint get_Year();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Year")]
		void put_Year(uint value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Bitrate")]
		uint get_Bitrate();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		global::Windows.Storage.FileProperties.VideoOrientation get_Orientation();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IImageProperties : global::Windows.Storage.FileProperties.IStorageItemExtraProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Rating")]
		uint get_Rating();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Rating")]
		void put_Rating(uint value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Width")]
		uint get_Width();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Height")]
		uint get_Height();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Title")]
		string get_Title();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Title")]
		void put_Title(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CameraManufacturer")]
		string get_CameraManufacturer();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CameraManufacturer")]
		void put_CameraManufacturer(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CameraModel")]
		string get_CameraModel();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CameraModel")]
		void put_CameraModel(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orientation")]
		global::Windows.Storage.FileProperties.PhotoOrientation get_Orientation();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDocumentProperties : global::Windows.Storage.FileProperties.IStorageItemExtraProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Title")]
		string get_Title();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Title")]
		void put_Title(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Comment")]
		string get_Comment();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Comment")]
		void put_Comment(string value);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ThumbnailMode
	{
		PicturesView = 0,
		VideosView = 1,
		MusicView = 2,
		DocumentsView = 3,
		ListView = 4,
		SingleItem = 5,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ThumbnailOptions : uint
	{
		None = 0x0u,
		ReturnOnlyIfCached = 0x1u,
		ResizeThumbnail = 0x2u,
		UseCurrentScale = 0x4u,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ThumbnailType
	{
		Image = 0,
		Icon = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum VideoOrientation
	{
		Normal = 0,
		Rotate90 = 90,
		Rotate180 = 180,
		Rotate270 = 270,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum PhotoOrientation
	{
		Unspecified = 0,
		Normal = 1,
		FlipHorizontal = 2,
		Rotate180 = 3,
		FlipVertical = 4,
		Transpose = 5,
		Rotate270 = 6,
		Transverse = 7,
		Rotate90 = 8,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum PropertyPrefetchOptions : uint
	{
		None = 0x0u,
		MusicProperties = 0x1u,
		VideoProperties = 0x2u,
		ImageProperties = 0x4u,
		DocumentProperties = 0x8u,
		BasicProperties = 0x10u,
	}
}

namespace Windows.Storage.Search
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Search.IStorageFileQueryResult))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageFileQueryResult : global::System.__ComObject, global::Windows.Storage.Search.IStorageFileQueryResult, global::Windows.Storage.Search.IStorageQueryResultBase, global::Windows.Storage.Search.IStorageFileQueryResult2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> GetFilesAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> __retVal = global::Windows.Storage.Search.IStorageFileQueryResult__Impl.Stubs.GetFilesAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<uint> GetItemCountAsync()
		{
			global::Windows.Foundation.IAsyncOperation<uint> __retVal = global::Windows.Storage.Search.IStorageQueryResultBase__Impl.Stubs.GetItemCountAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Folder")]
		public global::Windows.Storage.StorageFolder get_Folder()
		{
			global::Windows.Storage.StorageFolder __retVal = global::Windows.Storage.Search.IStorageQueryResultBase__Impl.Stubs.get_Folder(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<uint> FindStartIndexAsync(object value)
		{
			global::Windows.Foundation.IAsyncOperation<uint> __retVal = global::Windows.Storage.Search.IStorageQueryResultBase__Impl.Stubs.FindStartIndexAsync(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Search.QueryOptions GetCurrentQueryOptions()
		{
			global::Windows.Storage.Search.QueryOptions __retVal = global::Windows.Storage.Search.IStorageQueryResultBase__Impl.Stubs.GetCurrentQueryOptions(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void ApplyNewQueryOptions(global::Windows.Storage.Search.QueryOptions newQueryOptions)
		{
			global::Windows.Storage.Search.IStorageQueryResultBase__Impl.Stubs.ApplyNewQueryOptions(
								this, 
								newQueryOptions
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public StorageFileQueryResult(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Search.IQueryOptions))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class QueryOptions : global::System.__ComObject, global::Windows.Storage.Search.IQueryOptions, global::Windows.Storage.Search.IQueryOptionsWithProviderFilter
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public QueryOptions(
					global::Windows.Storage.Search.CommonFileQuery query, 
					global::System.Collections.Generic.IEnumerable<string> fileTypeFilter)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Storage_Search__IQueryOptionsFactory_CreateCommonFileQuery(
								"Windows.Storage.Search.QueryOptions", 
								query, 
								fileTypeFilter
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_Storage_Search__IQueryOptionsFactory_CreateCommonFileQuery(
					string typeName, 
					global::Windows.Storage.Search.CommonFileQuery query, 
					global::System.Collections.Generic.IEnumerable<string> fileTypeFilter)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Storage.Search.IQueryOptionsFactory__Impl.Stubs.CreateCommonFileQuery(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Storage.Search.IQueryOptionsFactory).TypeHandle
												), 
								query, 
								fileTypeFilter
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public QueryOptions(global::Windows.Storage.Search.CommonFolderQuery query)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Storage_Search__IQueryOptionsFactory_CreateCommonFolderQuery(
								"Windows.Storage.Search.QueryOptions", 
								query
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_Storage_Search__IQueryOptionsFactory_CreateCommonFolderQuery(
					string typeName, 
					global::Windows.Storage.Search.CommonFolderQuery query)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Storage.Search.IQueryOptionsFactory__Impl.Stubs.CreateCommonFolderQuery(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Storage.Search.IQueryOptionsFactory).TypeHandle
												), 
								query
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public QueryOptions()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Storage.Search.QueryOptions");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FolderDepth")]
		public global::Windows.Storage.Search.FolderDepth get_FolderDepth()
		{
			global::Windows.Storage.Search.FolderDepth __retVal = global::Windows.Storage.Search.IQueryOptions__Impl.Stubs.get_FolderDepth(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FolderDepth")]
		public void put_FolderDepth(global::Windows.Storage.Search.FolderDepth value)
		{
			global::Windows.Storage.Search.IQueryOptions__Impl.Stubs.put_FolderDepth(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ApplicationSearchFilter")]
		public string get_ApplicationSearchFilter()
		{
			string __retVal = global::Windows.Storage.Search.IQueryOptions__Impl.Stubs.get_ApplicationSearchFilter(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ApplicationSearchFilter")]
		public void put_ApplicationSearchFilter(string value)
		{
			global::Windows.Storage.Search.IQueryOptions__Impl.Stubs.put_ApplicationSearchFilter(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UserSearchFilter")]
		public string get_UserSearchFilter()
		{
			string __retVal = global::Windows.Storage.Search.IQueryOptions__Impl.Stubs.get_UserSearchFilter(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UserSearchFilter")]
		public void put_UserSearchFilter(string value)
		{
			global::Windows.Storage.Search.IQueryOptions__Impl.Stubs.put_UserSearchFilter(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Language")]
		public string get_Language()
		{
			string __retVal = global::Windows.Storage.Search.IQueryOptions__Impl.Stubs.get_Language(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Language")]
		public void put_Language(string value)
		{
			global::Windows.Storage.Search.IQueryOptions__Impl.Stubs.put_Language(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IndexerOption")]
		public global::Windows.Storage.Search.IndexerOption get_IndexerOption()
		{
			global::Windows.Storage.Search.IndexerOption __retVal = global::Windows.Storage.Search.IQueryOptions__Impl.Stubs.get_IndexerOption(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IndexerOption")]
		public void put_IndexerOption(global::Windows.Storage.Search.IndexerOption value)
		{
			global::Windows.Storage.Search.IQueryOptions__Impl.Stubs.put_IndexerOption(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GroupPropertyName")]
		public string get_GroupPropertyName()
		{
			string __retVal = global::Windows.Storage.Search.IQueryOptions__Impl.Stubs.get_GroupPropertyName(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DateStackOption")]
		public global::Windows.Storage.Search.DateStackOption get_DateStackOption()
		{
			global::Windows.Storage.Search.DateStackOption __retVal = global::Windows.Storage.Search.IQueryOptions__Impl.Stubs.get_DateStackOption(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public string SaveToString()
		{
			string __retVal = global::Windows.Storage.Search.IQueryOptions__Impl.Stubs.SaveToString(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void LoadFromString(string value)
		{
			global::Windows.Storage.Search.IQueryOptions__Impl.Stubs.LoadFromString(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void SetThumbnailPrefetch(
					global::Windows.Storage.FileProperties.ThumbnailMode mode, 
					uint requestedSize, 
					global::Windows.Storage.FileProperties.ThumbnailOptions options)
		{
			global::Windows.Storage.Search.IQueryOptions__Impl.Stubs.SetThumbnailPrefetch(
								this, 
								mode, 
								requestedSize, 
								options
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public QueryOptions(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Search.IStorageFolderQueryResult))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageFolderQueryResult : global::System.__ComObject, global::Windows.Storage.Search.IStorageFolderQueryResult, global::Windows.Storage.Search.IStorageQueryResultBase
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFolder>> GetFoldersAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFolder>> __retVal = global::Windows.Storage.Search.IStorageFolderQueryResult__Impl.Stubs.GetFoldersAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<uint> GetItemCountAsync()
		{
			global::Windows.Foundation.IAsyncOperation<uint> __retVal = global::Windows.Storage.Search.IStorageQueryResultBase__Impl.Stubs.GetItemCountAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Folder")]
		public global::Windows.Storage.StorageFolder get_Folder()
		{
			global::Windows.Storage.StorageFolder __retVal = global::Windows.Storage.Search.IStorageQueryResultBase__Impl.Stubs.get_Folder(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<uint> FindStartIndexAsync(object value)
		{
			global::Windows.Foundation.IAsyncOperation<uint> __retVal = global::Windows.Storage.Search.IStorageQueryResultBase__Impl.Stubs.FindStartIndexAsync(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Search.QueryOptions GetCurrentQueryOptions()
		{
			global::Windows.Storage.Search.QueryOptions __retVal = global::Windows.Storage.Search.IStorageQueryResultBase__Impl.Stubs.GetCurrentQueryOptions(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void ApplyNewQueryOptions(global::Windows.Storage.Search.QueryOptions newQueryOptions)
		{
			global::Windows.Storage.Search.IStorageQueryResultBase__Impl.Stubs.ApplyNewQueryOptions(
								this, 
								newQueryOptions
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public StorageFolderQueryResult(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Search.IStorageItemQueryResult))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Search.IStorageQueryResultBase))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageItemQueryResult : global::System.__ComObject, global::Windows.Storage.Search.IStorageItemQueryResult, global::Windows.Storage.Search.IStorageQueryResultBase
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.IStorageItem>> GetItemsAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.IStorageItem>> __retVal = global::Windows.Storage.Search.IStorageItemQueryResult__Impl.Stubs.GetItemsAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<uint> GetItemCountAsync()
		{
			global::Windows.Foundation.IAsyncOperation<uint> __retVal = global::Windows.Storage.Search.IStorageQueryResultBase__Impl.Stubs.GetItemCountAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Folder")]
		public global::Windows.Storage.StorageFolder get_Folder()
		{
			global::Windows.Storage.StorageFolder __retVal = global::Windows.Storage.Search.IStorageQueryResultBase__Impl.Stubs.get_Folder(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<uint> FindStartIndexAsync(object value)
		{
			global::Windows.Foundation.IAsyncOperation<uint> __retVal = global::Windows.Storage.Search.IStorageQueryResultBase__Impl.Stubs.FindStartIndexAsync(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Search.QueryOptions GetCurrentQueryOptions()
		{
			global::Windows.Storage.Search.QueryOptions __retVal = global::Windows.Storage.Search.IStorageQueryResultBase__Impl.Stubs.GetCurrentQueryOptions(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void ApplyNewQueryOptions(global::Windows.Storage.Search.QueryOptions newQueryOptions)
		{
			global::Windows.Storage.Search.IStorageQueryResultBase__Impl.Stubs.ApplyNewQueryOptions(
								this, 
								newQueryOptions
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public StorageItemQueryResult(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolderQueryOperations
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Search.IndexedState> GetIndexedStateAsync();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Search.StorageFileQueryResult CreateFileQuery();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Search.StorageFileQueryResult CreateFileQuery(global::Windows.Storage.Search.CommonFileQuery query);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Search.StorageFileQueryResult CreateFileQueryWithOptions(global::Windows.Storage.Search.QueryOptions queryOptions);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Search.StorageFolderQueryResult CreateFolderQuery();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Search.StorageFolderQueryResult CreateFolderQuery(global::Windows.Storage.Search.CommonFolderQuery query);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Search.StorageFolderQueryResult CreateFolderQueryWithOptions(global::Windows.Storage.Search.QueryOptions queryOptions);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Search.StorageItemQueryResult CreateItemQuery();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Search.StorageItemQueryResult CreateItemQueryWithOptions(global::Windows.Storage.Search.QueryOptions queryOptions);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> GetFilesAsync(
					global::Windows.Storage.Search.CommonFileQuery query, 
					uint startIndex, 
					uint maxItemsToRetrieve);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool AreQueryOptionsSupported(global::Windows.Storage.Search.QueryOptions queryOptions);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsCommonFolderQuerySupported(global::Windows.Storage.Search.CommonFolderQuery query);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsCommonFileQuerySupported(global::Windows.Storage.Search.CommonFileQuery query);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFileQueryResult : global::Windows.Storage.Search.IStorageQueryResultBase
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> GetFilesAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageQueryResultBase
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<uint> GetItemCountAsync();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Folder")]
		global::Windows.Storage.StorageFolder get_Folder();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<uint> FindStartIndexAsync(object value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Search.QueryOptions GetCurrentQueryOptions();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void ApplyNewQueryOptions(global::Windows.Storage.Search.QueryOptions newQueryOptions);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IQueryOptionsFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr CreateCommonFileQuery(
					global::Windows.Storage.Search.CommonFileQuery query, 
					global::System.Collections.Generic.IEnumerable<string> fileTypeFilter);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr CreateCommonFolderQuery(global::Windows.Storage.Search.CommonFolderQuery query);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IQueryOptions
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FolderDepth")]
		global::Windows.Storage.Search.FolderDepth get_FolderDepth();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "FolderDepth")]
		void put_FolderDepth(global::Windows.Storage.Search.FolderDepth value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ApplicationSearchFilter")]
		string get_ApplicationSearchFilter();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ApplicationSearchFilter")]
		void put_ApplicationSearchFilter(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UserSearchFilter")]
		string get_UserSearchFilter();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UserSearchFilter")]
		void put_UserSearchFilter(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Language")]
		string get_Language();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Language")]
		void put_Language(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IndexerOption")]
		global::Windows.Storage.Search.IndexerOption get_IndexerOption();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IndexerOption")]
		void put_IndexerOption(global::Windows.Storage.Search.IndexerOption value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GroupPropertyName")]
		string get_GroupPropertyName();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DateStackOption")]
		global::Windows.Storage.Search.DateStackOption get_DateStackOption();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string SaveToString();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void LoadFromString(string value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetThumbnailPrefetch(
					global::Windows.Storage.FileProperties.ThumbnailMode mode, 
					uint requestedSize, 
					global::Windows.Storage.FileProperties.ThumbnailOptions options);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IQueryOptionsWithProviderFilter
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFileQueryResult2 : global::Windows.Storage.Search.IStorageQueryResultBase
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolderQueryResult : global::Windows.Storage.Search.IStorageQueryResultBase
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFolder>> GetFoldersAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItemQueryResult : global::Windows.Storage.Search.IStorageQueryResultBase
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.IStorageItem>> GetItemsAsync();
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum IndexedState
	{
		Unknown = 0,
		NotIndexed = 1,
		PartiallyIndexed = 2,
		FullyIndexed = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CommonFileQuery
	{
		DefaultQuery = 0,
		OrderByName = 1,
		OrderByTitle = 2,
		OrderByMusicProperties = 3,
		OrderBySearchRank = 4,
		OrderByDate = 5,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CommonFolderQuery
	{
		DefaultQuery = 0,
		GroupByYear = 100,
		GroupByMonth = 101,
		GroupByArtist = 102,
		GroupByAlbum = 103,
		GroupByAlbumArtist = 104,
		GroupByComposer = 105,
		GroupByGenre = 106,
		GroupByPublishedYear = 107,
		GroupByRating = 108,
		GroupByTag = 109,
		GroupByAuthor = 110,
		GroupByType = 111,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum FolderDepth
	{
		Shallow = 0,
		Deep = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum IndexerOption
	{
		UseIndexerWhenAvailable = 0,
		OnlyUseIndexer = 1,
		DoNotUseIndexer = 2,
		OnlyUseIndexerAndOptimizeForIndexedProperties = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum DateStackOption
	{
		None = 0,
		Year = 1,
		Month = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct SortEntry
	{
		public string PropertyName;
		public bool AscendingOrder;
	}
}

namespace Windows.Storage.Streams
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Streams.IRandomAccessStream))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Streams.IOutputStream))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Streams.IInputStream))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FileRandomAccessStream : global::System.__ComObject, global::Windows.Storage.Streams.IRandomAccessStream, global::Windows.Storage.Streams.IOutputStream, global::System.IDisposable, global::Windows.Storage.Streams.IInputStream
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Size")]
		public ulong get_Size()
		{
			ulong __retVal = global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.get_Size(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Size")]
		public void put_Size(ulong value)
		{
			global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.put_Size(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Streams.IInputStream GetInputStreamAt(ulong position)
		{
			global::Windows.Storage.Streams.IInputStream __retVal = global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.GetInputStreamAt(
								this, 
								position
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Streams.IOutputStream GetOutputStreamAt(ulong position)
		{
			global::Windows.Storage.Streams.IOutputStream __retVal = global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.GetOutputStreamAt(
								this, 
								position
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Position")]
		public ulong get_Position()
		{
			ulong __retVal = global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.get_Position(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void Seek(ulong position)
		{
			global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.Seek(
								this, 
								position
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Streams.IRandomAccessStream CloneStream()
		{
			global::Windows.Storage.Streams.IRandomAccessStream __retVal = global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.CloneStream(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanRead")]
		public bool get_CanRead()
		{
			bool __retVal = global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.get_CanRead(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanWrite")]
		public bool get_CanWrite()
		{
			bool __retVal = global::Windows.Storage.Streams.IRandomAccessStream__Impl.Stubs.get_CanWrite(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IBuffer, uint> ReadAsync(
					global::Windows.Storage.Streams.IBuffer buffer, 
					uint count, 
					global::Windows.Storage.Streams.InputStreamOptions options)
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IBuffer, uint> __retVal = global::Windows.Storage.Streams.IInputStream__Impl.Stubs.ReadAsync(
								this, 
								buffer, 
								count, 
								options
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperationWithProgress<uint, uint> WriteAsync(global::Windows.Storage.Streams.IBuffer buffer)
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<uint, uint> __retVal = global::Windows.Storage.Streams.IOutputStream__Impl.Stubs.WriteAsync(
								this, 
								buffer
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<bool> FlushAsync()
		{
			global::Windows.Foundation.IAsyncOperation<bool> __retVal = global::Windows.Storage.Streams.IOutputStream__Impl.Stubs.FlushAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public FileRandomAccessStream(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.Streams.IDataReader))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DataReader : global::System.__ComObject, global::Windows.Storage.Streams.IDataReader, global::System.IDisposable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public DataReader(global::Windows.Storage.Streams.IInputStream inputStream)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Storage_Streams__IDataReaderFactory_CreateDataReader(
								"Windows.Storage.Streams.DataReader", 
								inputStream
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_Storage_Streams__IDataReaderFactory_CreateDataReader(
					string typeName, 
					global::Windows.Storage.Streams.IInputStream inputStream)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Storage.Streams.IDataReaderFactory__Impl.Stubs.CreateDataReader(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Storage.Streams.IDataReaderFactory).TypeHandle
												), 
								inputStream
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void ReadBytes(byte[] value)
		{
			global::Windows.Storage.Streams.IDataReader__Impl.Stubs.ReadBytes(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Storage.Streams.DataReaderLoadOperation LoadAsync(uint count)
		{
			global::Windows.Storage.Streams.DataReaderLoadOperation __retVal = global::Windows.Storage.Streams.IDataReader__Impl.Stubs.LoadAsync(
								this, 
								count
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Storage.Streams.DataReader FromBuffer(global::Windows.Storage.Streams.IBuffer buffer)
		{
			global::Windows.Storage.Streams.DataReader retval;
			retval = __Factory_Windows_Storage_Streams__IDataReaderStatics_FromBuffer(
								"Windows.Storage.Streams.DataReader", 
								buffer
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Storage.Streams.DataReader __Factory_Windows_Storage_Streams__IDataReaderStatics_FromBuffer(
					string typeName, 
					global::Windows.Storage.Streams.IBuffer buffer)
		{
			global::Windows.Storage.Streams.DataReader __pRetVal;
			__pRetVal = global::Windows.Storage.Streams.IDataReaderStatics__Impl.Stubs.FromBuffer(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Storage.Streams.IDataReaderStatics).TypeHandle
												), 
								buffer
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public DataReader(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Foundation.IAsyncOperation<uint>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Foundation.IAsyncInfo))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DataReaderLoadOperation : global::System.__ComObject, global::Windows.Foundation.IAsyncOperation<uint>, global::Windows.Foundation.IAsyncInfo
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Completed")]
		public void put_Completed(global::Windows.Foundation.AsyncOperationCompletedHandler<uint> handler)
		{
			global::Windows.Foundation.IAsyncOperation_A_uint_V___Impl.Stubs.put_Completed(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Completed")]
		public global::Windows.Foundation.AsyncOperationCompletedHandler<uint> get_Completed()
		{
			global::Windows.Foundation.AsyncOperationCompletedHandler<uint> __retVal = global::Windows.Foundation.IAsyncOperation_A_uint_V___Impl.Stubs.get_Completed(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public uint GetResults()
		{
			uint __retVal = global::Windows.Foundation.IAsyncOperation_A_uint_V___Impl.Stubs.GetResults(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		public uint get_Id()
		{
			uint __retVal = global::Windows.Foundation.IAsyncInfo__Impl.Stubs.get_Id(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Status")]
		public global::Windows.Foundation.AsyncStatus get_Status()
		{
			global::Windows.Foundation.AsyncStatus __retVal = global::Windows.Foundation.IAsyncInfo__Impl.Stubs.get_Status(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ErrorCode")]
		public global::System.Exception get_ErrorCode()
		{
			global::System.Exception __retVal = global::Windows.Foundation.IAsyncInfo__Impl.Stubs.get_ErrorCode(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void Cancel()
		{
			global::Windows.Foundation.IAsyncInfo__Impl.Stubs.Cancel(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void Close()
		{
			global::Windows.Foundation.IAsyncInfo__Impl.Stubs.Close(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public DataReaderLoadOperation(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IOutputStream : global::System.IDisposable
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperationWithProgress<uint, uint> WriteAsync(global::Windows.Storage.Streams.IBuffer buffer);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<bool> FlushAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBuffer
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Capacity")]
		uint get_Capacity();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Length")]
		uint get_Length();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Length")]
		void put_Length(uint value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRandomAccessStreamReference
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStreamWithContentType> OpenReadAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRandomAccessStreamWithContentType : global::Windows.Storage.Streams.IRandomAccessStream, global::System.IDisposable, global::Windows.Storage.Streams.IInputStream, global::Windows.Storage.Streams.IOutputStream, global::Windows.Storage.Streams.IContentTypeProvider
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRandomAccessStream : global::System.IDisposable, global::Windows.Storage.Streams.IInputStream, global::Windows.Storage.Streams.IOutputStream
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Size")]
		ulong get_Size();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Size")]
		void put_Size(ulong value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Streams.IInputStream GetInputStreamAt(ulong position);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Streams.IOutputStream GetOutputStreamAt(ulong position);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Position")]
		ulong get_Position();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Seek(ulong position);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Streams.IRandomAccessStream CloneStream();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanRead")]
		bool get_CanRead();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanWrite")]
		bool get_CanWrite();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInputStream : global::System.IDisposable
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IBuffer, uint> ReadAsync(
					global::Windows.Storage.Streams.IBuffer buffer, 
					uint count, 
					global::Windows.Storage.Streams.InputStreamOptions options);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentTypeProvider
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentType")]
		string get_ContentType();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInputStreamReference
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IInputStream> OpenSequentialReadAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataReaderFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr CreateDataReader(global::Windows.Storage.Streams.IInputStream inputStream);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataReaderStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Streams.DataReader FromBuffer(global::Windows.Storage.Streams.IBuffer buffer);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataReader
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void ReadBytes(byte[] value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Storage.Streams.DataReaderLoadOperation LoadAsync(uint count);
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum InputStreamOptions : uint
	{
		None = 0x0u,
		Partial = 0x1u,
		ReadAhead = 0x2u,
	}
}

namespace Windows.System
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.System.IUser))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class User : global::System.__ComObject, global::Windows.System.IUser
	{
		public User(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MemoryManager : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AppMemoryUsage")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static ulong get_AppMemoryUsage()
		{
			ulong retval;
			retval = __Factory_Windows_System__IMemoryManagerStatics_get_AppMemoryUsage("Windows.System.MemoryManager");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static ulong __Factory_Windows_System__IMemoryManagerStatics_get_AppMemoryUsage(string typeName)
		{
			ulong __pRetVal;
			__pRetVal = global::Windows.System.IMemoryManagerStatics__Impl.Stubs.get_AppMemoryUsage(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.System.IMemoryManagerStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AppMemoryUsageLimit")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static ulong get_AppMemoryUsageLimit()
		{
			ulong retval;
			retval = __Factory_Windows_System__IMemoryManagerStatics_get_AppMemoryUsageLimit("Windows.System.MemoryManager");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static ulong __Factory_Windows_System__IMemoryManagerStatics_get_AppMemoryUsageLimit(string typeName)
		{
			ulong __pRetVal;
			__pRetVal = global::Windows.System.IMemoryManagerStatics__Impl.Stubs.get_AppMemoryUsageLimit(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.System.IMemoryManagerStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public MemoryManager(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Launcher : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Foundation.IAsyncOperation<bool> LaunchUriAsync(global::System.Uri uri)
		{
			global::Windows.Foundation.IAsyncOperation<bool> retval;
			retval = __Factory_Windows_System__ILauncherStatics_LaunchUriAsync(
								"Windows.System.Launcher", 
								uri
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Foundation.IAsyncOperation<bool> __Factory_Windows_System__ILauncherStatics_LaunchUriAsync(
					string typeName, 
					global::System.Uri uri)
		{
			global::Windows.Foundation.IAsyncOperation<bool> __pRetVal;
			__pRetVal = global::Windows.System.ILauncherStatics__Impl.Stubs.LaunchUriAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.System.ILauncherStatics).TypeHandle
												), 
								uri
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public Launcher(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUser
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMemoryManagerStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AppMemoryUsage")]
		ulong get_AppMemoryUsage();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AppMemoryUsageLimit")]
		ulong get_AppMemoryUsageLimit();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILauncherStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<bool> LaunchUriAsync(global::System.Uri uri);
	}
}

namespace Windows.System.Power
{
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum BatteryStatus
	{
		NotPresent = 0,
		Discharging = 1,
		Idle = 2,
		Charging = 3,
	}
}

namespace Windows.System.Profile
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.System.Profile.IHardwareToken))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HardwareToken : global::System.__ComObject, global::Windows.System.Profile.IHardwareToken
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		public global::Windows.Storage.Streams.IBuffer get_Id()
		{
			global::Windows.Storage.Streams.IBuffer __retVal = global::Windows.System.Profile.IHardwareToken__Impl.Stubs.get_Id(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public HardwareToken(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HardwareIdentification : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.System.Profile.HardwareToken GetPackageSpecificToken(global::Windows.Storage.Streams.IBuffer nonce)
		{
			global::Windows.System.Profile.HardwareToken retval;
			retval = __Factory_Windows_System_Profile__IHardwareIdentificationStatics_GetPackageSpecificToken(
								"Windows.System.Profile.HardwareIdentification", 
								nonce
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.System.Profile.HardwareToken __Factory_Windows_System_Profile__IHardwareIdentificationStatics_GetPackageSpecificToken(
					string typeName, 
					global::Windows.Storage.Streams.IBuffer nonce)
		{
			global::Windows.System.Profile.HardwareToken __pRetVal;
			__pRetVal = global::Windows.System.Profile.IHardwareIdentificationStatics__Impl.Stubs.GetPackageSpecificToken(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.System.Profile.IHardwareIdentificationStatics).TypeHandle
												), 
								nonce
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public HardwareIdentification(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHardwareToken
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		global::Windows.Storage.Streams.IBuffer get_Id();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHardwareIdentificationStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.System.Profile.HardwareToken GetPackageSpecificToken(global::Windows.Storage.Streams.IBuffer nonce);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct ProfileHardwareTokenContract
	{
	}
}

namespace Windows.System.Threading
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.System.Threading.IThreadPoolTimer))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ThreadPoolTimer : global::System.__ComObject, global::Windows.System.Threading.IThreadPoolTimer
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void Cancel()
		{
			global::Windows.System.Threading.IThreadPoolTimer__Impl.Stubs.Cancel(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.System.Threading.ThreadPoolTimer CreateTimer(
					global::Windows.System.Threading.TimerElapsedHandler handler, 
					global::System.TimeSpan delay)
		{
			global::Windows.System.Threading.ThreadPoolTimer retval;
			retval = __Factory_Windows_System_Threading__IThreadPoolTimerStatics_CreateTimer(
								"Windows.System.Threading.ThreadPoolTimer", 
								handler, 
								delay
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.System.Threading.ThreadPoolTimer __Factory_Windows_System_Threading__IThreadPoolTimerStatics_CreateTimer(
					string typeName, 
					global::Windows.System.Threading.TimerElapsedHandler handler, 
					global::System.TimeSpan delay)
		{
			global::Windows.System.Threading.ThreadPoolTimer __pRetVal;
			__pRetVal = global::Windows.System.Threading.IThreadPoolTimerStatics__Impl.Stubs.CreateTimer(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.System.Threading.IThreadPoolTimerStatics).TypeHandle
												), 
								handler, 
								delay
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public ThreadPoolTimer(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ThreadPool : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.Foundation.IAsyncAction RunAsync(
					global::Windows.System.Threading.WorkItemHandler handler, 
					global::Windows.System.Threading.WorkItemPriority priority, 
					global::Windows.System.Threading.WorkItemOptions options)
		{
			global::Windows.Foundation.IAsyncAction retval;
			retval = __Factory_Windows_System_Threading__IThreadPoolStatics_RunAsync(
								"Windows.System.Threading.ThreadPool", 
								handler, 
								priority, 
								options
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.Foundation.IAsyncAction __Factory_Windows_System_Threading__IThreadPoolStatics_RunAsync(
					string typeName, 
					global::Windows.System.Threading.WorkItemHandler handler, 
					global::Windows.System.Threading.WorkItemPriority priority, 
					global::Windows.System.Threading.WorkItemOptions options)
		{
			global::Windows.Foundation.IAsyncAction __pRetVal;
			__pRetVal = global::Windows.System.Threading.IThreadPoolStatics__Impl.Stubs.RunAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.System.Threading.IThreadPoolStatics).TypeHandle
												), 
								handler, 
								priority, 
								options
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public ThreadPool(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WorkItemHandler(global::Windows.Foundation.IAsyncAction operation);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void TimerElapsedHandler(global::Windows.System.Threading.ThreadPoolTimer timer);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IThreadPoolTimerStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.System.Threading.ThreadPoolTimer CreateTimer(
					global::Windows.System.Threading.TimerElapsedHandler handler, 
					global::System.TimeSpan delay);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IThreadPoolTimer
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Cancel();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IThreadPoolStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncAction RunAsync(
					global::Windows.System.Threading.WorkItemHandler handler, 
					global::Windows.System.Threading.WorkItemPriority priority, 
					global::Windows.System.Threading.WorkItemOptions options);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum WorkItemPriority
	{
		Low = -1,
		Normal = 0,
		High = 1,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum WorkItemOptions : uint
	{
		None = 0x0u,
		TimeSliced = 0x1u,
	}
}

namespace Windows.UI
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.IUIContext))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class UIContext : global::System.__ComObject, global::Windows.UI.IUIContext
	{
		public UIContext(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIContext
	{
	}
}

namespace Windows.UI.Composition
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Composition.ICompositionObject))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class CompositionObject : global::System.__ComObject, global::Windows.UI.Composition.ICompositionObject, global::System.IDisposable
	{
		public virtual void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		public CompositionObject(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Composition.IAnimationPropertyInfo))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AnimationPropertyInfo : global::Windows.UI.Composition.CompositionObject, global::Windows.UI.Composition.IAnimationPropertyInfo
	{
		public AnimationPropertyInfo(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICompositionObject
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimationPropertyInfo
	{
	}
}

namespace Windows.UI.Core
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.ICoreWindow))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreWindow : global::System.__ComObject, global::Windows.UI.Core.ICoreWindow
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Dispatcher")]
		public global::Windows.UI.Core.CoreDispatcher get_Dispatcher()
		{
			global::Windows.UI.Core.CoreDispatcher __retVal = global::Windows.UI.Core.ICoreWindow__Impl.Stubs.get_Dispatcher(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public void Activate()
		{
			global::Windows.UI.Core.ICoreWindow__Impl.Stubs.Activate(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.UI.Core.CoreWindow GetForCurrentThread()
		{
			global::Windows.UI.Core.CoreWindow retval;
			retval = __Factory_Windows_UI_Core__ICoreWindowStatic_GetForCurrentThread("Windows.UI.Core.CoreWindow");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.UI.Core.CoreWindow __Factory_Windows_UI_Core__ICoreWindowStatic_GetForCurrentThread(string typeName)
		{
			global::Windows.UI.Core.CoreWindow __pRetVal;
			__pRetVal = global::Windows.UI.Core.ICoreWindowStatic__Impl.Stubs.GetForCurrentThread(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.Core.ICoreWindowStatic).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public CoreWindow(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.ICoreDispatcher))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreDispatcher : global::System.__ComObject, global::Windows.UI.Core.ICoreDispatcher
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasThreadAccess")]
		public bool get_HasThreadAccess()
		{
			bool __retVal = global::Windows.UI.Core.ICoreDispatcher__Impl.Stubs.get_HasThreadAccess(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncAction RunAsync(
					global::Windows.UI.Core.CoreDispatcherPriority priority, 
					global::Windows.UI.Core.DispatchedHandler agileCallback)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.UI.Core.ICoreDispatcher__Impl.Stubs.RunAsync(
								this, 
								priority, 
								agileCallback
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public CoreDispatcher(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.IWindowActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WindowActivatedEventArgs : global::System.__ComObject, global::Windows.UI.Core.IWindowActivatedEventArgs, global::Windows.UI.Core.ICoreWindowEventArgs
	{
		public WindowActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.ICoreWindowEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreWindowEventArgs : global::System.__ComObject, global::Windows.UI.Core.ICoreWindowEventArgs
	{
		public CoreWindowEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.IWindowSizeChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WindowSizeChangedEventArgs : global::System.__ComObject, global::Windows.UI.Core.IWindowSizeChangedEventArgs, global::Windows.UI.Core.ICoreWindowEventArgs
	{
		public WindowSizeChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.IVisibilityChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class VisibilityChangedEventArgs : global::System.__ComObject, global::Windows.UI.Core.IVisibilityChangedEventArgs, global::Windows.UI.Core.ICoreWindowEventArgs
	{
		public VisibilityChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreWindowStatic
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Core.CoreWindow GetForCurrentThread();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreWindow
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Dispatcher")]
		global::Windows.UI.Core.CoreDispatcher get_Dispatcher();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void Activate();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreDispatcher
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasThreadAccess")]
		bool get_HasThreadAccess();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncAction RunAsync(
					global::Windows.UI.Core.CoreDispatcherPriority priority, 
					global::Windows.UI.Core.DispatchedHandler agileCallback);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DispatchedHandler();

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindowActivatedEventArgs : global::Windows.UI.Core.ICoreWindowEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreWindowEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindowSizeChangedEventArgs : global::Windows.UI.Core.ICoreWindowEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisibilityChangedEventArgs : global::Windows.UI.Core.ICoreWindowEventArgs
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CoreDispatcherPriority
	{
		Idle = -2,
		Low = -1,
		Normal = 0,
		High = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CoreWindowActivationState
	{
		CodeActivated = 0,
		Deactivated = 1,
		PointerActivated = 2,
	}
}

namespace Windows.UI.Input
{
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum GazeInputAccessStatus
	{
		Unspecified = 0,
		Allowed = 1,
		DeniedByUser = 2,
		DeniedBySystem = 3,
	}
}

namespace Windows.UI.Input.Spatial
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionManager))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(524288)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SpatialInteractionManager : global::System.__ComObject, global::Windows.UI.Input.Spatial.ISpatialInteractionManager
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Input.Spatial.SpatialInteractionSourceState> GetDetectedSourcesAtTimestamp(global::Windows.Perception.PerceptionTimestamp timeStamp)
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Input.Spatial.SpatialInteractionSourceState> __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionManager__Impl.Stubs.GetDetectedSourcesAtTimestamp(
								this, 
								timeStamp
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static bool IsSourceKindSupported(global::Windows.UI.Input.Spatial.SpatialInteractionSourceKind kind)
		{
			bool retval;
			retval = __Factory_Windows_UI_Input_Spatial__ISpatialInteractionManagerStatics2_IsSourceKindSupported(
								"Windows.UI.Input.Spatial.SpatialInteractionManager", 
								kind
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static bool __Factory_Windows_UI_Input_Spatial__ISpatialInteractionManagerStatics2_IsSourceKindSupported(
					string typeName, 
					global::Windows.UI.Input.Spatial.SpatialInteractionSourceKind kind)
		{
			bool __pRetVal;
			__pRetVal = global::Windows.UI.Input.Spatial.ISpatialInteractionManagerStatics2__Impl.Stubs.IsSourceKindSupported(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionManagerStatics2).TypeHandle
												), 
								kind
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.UI.Input.Spatial.SpatialInteractionManager GetForCurrentView()
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionManager retval;
			retval = __Factory_Windows_UI_Input_Spatial__ISpatialInteractionManagerStatics_GetForCurrentView("Windows.UI.Input.Spatial.SpatialInteractionManager");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.UI.Input.Spatial.SpatialInteractionManager __Factory_Windows_UI_Input_Spatial__ISpatialInteractionManagerStatics_GetForCurrentView(string typeName)
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionManager __pRetVal;
			__pRetVal = global::Windows.UI.Input.Spatial.ISpatialInteractionManagerStatics__Impl.Stubs.GetForCurrentView(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionManagerStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public SpatialInteractionManager(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState3))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SpatialInteractionSourceState : global::System.__ComObject, global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState, global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState2, global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionSource get_Source()
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionSource __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState__Impl.Stubs.get_Source(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Properties")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionSourceProperties get_Properties()
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionSourceProperties __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState__Impl.Stubs.get_Properties(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPressed")]
		public bool get_IsPressed()
		{
			bool __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState__Impl.Stubs.get_IsPressed(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Timestamp")]
		public global::Windows.Perception.PerceptionTimestamp get_Timestamp()
		{
			global::Windows.Perception.PerceptionTimestamp __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState__Impl.Stubs.get_Timestamp(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.UI.Input.Spatial.SpatialPointerPose TryGetPointerPose(global::Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem)
		{
			global::Windows.UI.Input.Spatial.SpatialPointerPose __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState__Impl.Stubs.TryGetPointerPose(
								this, 
								coordinateSystem
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSelectPressed")]
		public bool get_IsSelectPressed()
		{
			bool __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState2__Impl.Stubs.get_IsSelectPressed(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsMenuPressed")]
		public bool get_IsMenuPressed()
		{
			bool __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState2__Impl.Stubs.get_IsMenuPressed(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsGrasped")]
		public bool get_IsGrasped()
		{
			bool __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState2__Impl.Stubs.get_IsGrasped(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ControllerProperties")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionControllerProperties get_ControllerProperties()
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionControllerProperties __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState2__Impl.Stubs.get_ControllerProperties(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Perception.People.HandPose TryGetHandPose()
		{
			global::Windows.Perception.People.HandPose __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState3__Impl.Stubs.TryGetHandPose(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public SpatialInteractionSourceState(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionSource))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionSource2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionSource3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionSource4))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SpatialInteractionSource : global::System.__ComObject, global::Windows.UI.Input.Spatial.ISpatialInteractionSource, global::Windows.UI.Input.Spatial.ISpatialInteractionSource2, global::Windows.UI.Input.Spatial.ISpatialInteractionSource3, global::Windows.UI.Input.Spatial.ISpatialInteractionSource4
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		public uint get_Id()
		{
			uint __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSource__Impl.Stubs.get_Id(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Kind")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionSourceKind get_Kind()
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionSourceKind __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSource__Impl.Stubs.get_Kind(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPointingSupported")]
		public bool get_IsPointingSupported()
		{
			bool __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSource2__Impl.Stubs.get_IsPointingSupported(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsMenuSupported")]
		public bool get_IsMenuSupported()
		{
			bool __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSource2__Impl.Stubs.get_IsMenuSupported(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsGraspSupported")]
		public bool get_IsGraspSupported()
		{
			bool __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSource2__Impl.Stubs.get_IsGraspSupported(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Controller")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionController get_Controller()
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionController __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSource2__Impl.Stubs.get_Controller(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.UI.Input.Spatial.SpatialInteractionSourceState TryGetStateAtTimestamp(global::Windows.Perception.PerceptionTimestamp timestamp)
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionSourceState __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSource2__Impl.Stubs.TryGetStateAtTimestamp(
								this, 
								timestamp
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handedness")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionSourceHandedness get_Handedness()
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionSourceHandedness __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSource3__Impl.Stubs.get_Handedness(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Perception.People.HandMeshObserver TryCreateHandMeshObserver()
		{
			global::Windows.Perception.People.HandMeshObserver __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSource4__Impl.Stubs.TryCreateHandMeshObserver(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Perception.People.HandMeshObserver> TryCreateHandMeshObserverAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Perception.People.HandMeshObserver> __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSource4__Impl.Stubs.TryCreateHandMeshObserverAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public SpatialInteractionSource(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionController))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionController2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionController3))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SpatialInteractionController : global::System.__ComObject, global::Windows.UI.Input.Spatial.ISpatialInteractionController, global::Windows.UI.Input.Spatial.ISpatialInteractionController2, global::Windows.UI.Input.Spatial.ISpatialInteractionController3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasTouchpad")]
		public bool get_HasTouchpad()
		{
			bool __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionController__Impl.Stubs.get_HasTouchpad(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasThumbstick")]
		public bool get_HasThumbstick()
		{
			bool __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionController__Impl.Stubs.get_HasThumbstick(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SimpleHapticsController")]
		public global::Windows.Devices.Haptics.SimpleHapticsController get_SimpleHapticsController()
		{
			global::Windows.Devices.Haptics.SimpleHapticsController __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionController__Impl.Stubs.get_SimpleHapticsController(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VendorId")]
		public ushort get_VendorId()
		{
			ushort __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionController__Impl.Stubs.get_VendorId(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProductId")]
		public ushort get_ProductId()
		{
			ushort __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionController__Impl.Stubs.get_ProductId(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Version")]
		public ushort get_Version()
		{
			ushort __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionController__Impl.Stubs.get_Version(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStreamWithContentType> TryGetRenderableModelAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStreamWithContentType> __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionController2__Impl.Stubs.TryGetRenderableModelAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Devices.Power.BatteryReport TryGetBatteryReport()
		{
			global::Windows.Devices.Power.BatteryReport __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionController3__Impl.Stubs.TryGetBatteryReport(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public SpatialInteractionController(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionSourceProperties))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SpatialInteractionSourceProperties : global::System.__ComObject, global::Windows.UI.Input.Spatial.ISpatialInteractionSourceProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.UI.Input.Spatial.SpatialInteractionSourceLocation TryGetLocation(global::Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem)
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionSourceLocation __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSourceProperties__Impl.Stubs.TryGetLocation(
								this, 
								coordinateSystem
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public SpatialInteractionSourceProperties(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionSourceLocation))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionSourceLocation3))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SpatialInteractionSourceLocation : global::System.__ComObject, global::Windows.UI.Input.Spatial.ISpatialInteractionSourceLocation, global::Windows.UI.Input.Spatial.ISpatialInteractionSourceLocation2, global::Windows.UI.Input.Spatial.ISpatialInteractionSourceLocation3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PositionAccuracy")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionSourcePositionAccuracy get_PositionAccuracy()
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionSourcePositionAccuracy __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSourceLocation3__Impl.Stubs.get_PositionAccuracy(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourcePointerPose")]
		public global::Windows.UI.Input.Spatial.SpatialPointerInteractionSourcePose get_SourcePointerPose()
		{
			global::Windows.UI.Input.Spatial.SpatialPointerInteractionSourcePose __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSourceLocation3__Impl.Stubs.get_SourcePointerPose(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public SpatialInteractionSourceLocation(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SpatialPointerInteractionSourcePose : global::System.__ComObject, global::Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose, global::Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PositionAccuracy")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionSourcePositionAccuracy get_PositionAccuracy()
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionSourcePositionAccuracy __retVal = global::Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose2__Impl.Stubs.get_PositionAccuracy(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public SpatialPointerInteractionSourcePose(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialPointerPose))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialPointerPose2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialPointerPose3))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(131072)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SpatialPointerPose : global::System.__ComObject, global::Windows.UI.Input.Spatial.ISpatialPointerPose, global::Windows.UI.Input.Spatial.ISpatialPointerPose2, global::Windows.UI.Input.Spatial.ISpatialPointerPose3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Timestamp")]
		public global::Windows.Perception.PerceptionTimestamp get_Timestamp()
		{
			global::Windows.Perception.PerceptionTimestamp __retVal = global::Windows.UI.Input.Spatial.ISpatialPointerPose__Impl.Stubs.get_Timestamp(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Head")]
		public global::Windows.Perception.People.HeadPose get_Head()
		{
			global::Windows.Perception.People.HeadPose __retVal = global::Windows.UI.Input.Spatial.ISpatialPointerPose__Impl.Stubs.get_Head(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.UI.Input.Spatial.SpatialPointerInteractionSourcePose TryGetInteractionSourcePose(global::Windows.UI.Input.Spatial.SpatialInteractionSource source)
		{
			global::Windows.UI.Input.Spatial.SpatialPointerInteractionSourcePose __retVal = global::Windows.UI.Input.Spatial.ISpatialPointerPose2__Impl.Stubs.TryGetInteractionSourcePose(
								this, 
								source
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Eyes")]
		public global::Windows.Perception.People.EyesPose get_Eyes()
		{
			global::Windows.Perception.People.EyesPose __retVal = global::Windows.UI.Input.Spatial.ISpatialPointerPose3__Impl.Stubs.get_Eyes(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsHeadCapturedBySystem")]
		public bool get_IsHeadCapturedBySystem()
		{
			bool __retVal = global::Windows.UI.Input.Spatial.ISpatialPointerPose3__Impl.Stubs.get_IsHeadCapturedBySystem(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.UI.Input.Spatial.SpatialPointerPose TryGetAtTimestamp(
					global::Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem, 
					global::Windows.Perception.PerceptionTimestamp timestamp)
		{
			global::Windows.UI.Input.Spatial.SpatialPointerPose retval;
			retval = __Factory_Windows_UI_Input_Spatial__ISpatialPointerPoseStatics_TryGetAtTimestamp(
								"Windows.UI.Input.Spatial.SpatialPointerPose", 
								coordinateSystem, 
								timestamp
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.UI.Input.Spatial.SpatialPointerPose __Factory_Windows_UI_Input_Spatial__ISpatialPointerPoseStatics_TryGetAtTimestamp(
					string typeName, 
					global::Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem, 
					global::Windows.Perception.PerceptionTimestamp timestamp)
		{
			global::Windows.UI.Input.Spatial.SpatialPointerPose __pRetVal;
			__pRetVal = global::Windows.UI.Input.Spatial.ISpatialPointerPoseStatics__Impl.Stubs.TryGetAtTimestamp(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Input.Spatial.ISpatialPointerPoseStatics).TypeHandle
												), 
								coordinateSystem, 
								timestamp
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public SpatialPointerPose(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionControllerProperties))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SpatialInteractionControllerProperties : global::System.__ComObject, global::Windows.UI.Input.Spatial.ISpatialInteractionControllerProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsTouchpadTouched")]
		public bool get_IsTouchpadTouched()
		{
			bool __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionControllerProperties__Impl.Stubs.get_IsTouchpadTouched(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsTouchpadPressed")]
		public bool get_IsTouchpadPressed()
		{
			bool __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionControllerProperties__Impl.Stubs.get_IsTouchpadPressed(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsThumbstickPressed")]
		public bool get_IsThumbstickPressed()
		{
			bool __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionControllerProperties__Impl.Stubs.get_IsThumbstickPressed(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public SpatialInteractionControllerProperties(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionDetectedEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionDetectedEventArgs2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SpatialInteractionDetectedEventArgs : global::System.__ComObject, global::Windows.UI.Input.Spatial.ISpatialInteractionDetectedEventArgs, global::Windows.UI.Input.Spatial.ISpatialInteractionDetectedEventArgs2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InteractionSourceKind")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionSourceKind get_InteractionSourceKind()
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionSourceKind __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionDetectedEventArgs__Impl.Stubs.get_InteractionSourceKind(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.UI.Input.Spatial.SpatialPointerPose TryGetPointerPose(global::Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem)
		{
			global::Windows.UI.Input.Spatial.SpatialPointerPose __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionDetectedEventArgs__Impl.Stubs.TryGetPointerPose(
								this, 
								coordinateSystem
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Interaction")]
		public global::Windows.UI.Input.Spatial.SpatialInteraction get_Interaction()
		{
			global::Windows.UI.Input.Spatial.SpatialInteraction __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionDetectedEventArgs__Impl.Stubs.get_Interaction(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InteractionSource")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionSource get_InteractionSource()
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionSource __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionDetectedEventArgs2__Impl.Stubs.get_InteractionSource(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public SpatialInteractionDetectedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteraction))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SpatialInteraction : global::System.__ComObject, global::Windows.UI.Input.Spatial.ISpatialInteraction
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceState")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionSourceState get_SourceState()
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionSourceState __retVal = global::Windows.UI.Input.Spatial.ISpatialInteraction__Impl.Stubs.get_SourceState(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public SpatialInteraction(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionSourceEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Input.Spatial.ISpatialInteractionSourceEventArgs2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SpatialInteractionSourceEventArgs : global::System.__ComObject, global::Windows.UI.Input.Spatial.ISpatialInteractionSourceEventArgs, global::Windows.UI.Input.Spatial.ISpatialInteractionSourceEventArgs2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "State")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionSourceState get_State()
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionSourceState __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSourceEventArgs__Impl.Stubs.get_State(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PressKind")]
		public global::Windows.UI.Input.Spatial.SpatialInteractionPressKind get_PressKind()
		{
			global::Windows.UI.Input.Spatial.SpatialInteractionPressKind __retVal = global::Windows.UI.Input.Spatial.ISpatialInteractionSourceEventArgs2__Impl.Stubs.get_PressKind(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public SpatialInteractionSourceEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionManagerStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Input.Spatial.SpatialInteractionManager GetForCurrentView();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionManagerStatics2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsSourceKindSupported(global::Windows.UI.Input.Spatial.SpatialInteractionSourceKind kind);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionManager
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Input.Spatial.SpatialInteractionSourceState> GetDetectedSourcesAtTimestamp(global::Windows.Perception.PerceptionTimestamp timeStamp);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionSourceState
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Source")]
		global::Windows.UI.Input.Spatial.SpatialInteractionSource get_Source();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Properties")]
		global::Windows.UI.Input.Spatial.SpatialInteractionSourceProperties get_Properties();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPressed")]
		bool get_IsPressed();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Timestamp")]
		global::Windows.Perception.PerceptionTimestamp get_Timestamp();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Input.Spatial.SpatialPointerPose TryGetPointerPose(global::Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionSource
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		uint get_Id();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Kind")]
		global::Windows.UI.Input.Spatial.SpatialInteractionSourceKind get_Kind();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionSource2 : global::Windows.UI.Input.Spatial.ISpatialInteractionSource
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsPointingSupported")]
		bool get_IsPointingSupported();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsMenuSupported")]
		bool get_IsMenuSupported();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsGraspSupported")]
		bool get_IsGraspSupported();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Controller")]
		global::Windows.UI.Input.Spatial.SpatialInteractionController get_Controller();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Input.Spatial.SpatialInteractionSourceState TryGetStateAtTimestamp(global::Windows.Perception.PerceptionTimestamp timestamp);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionController
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasTouchpad")]
		bool get_HasTouchpad();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasThumbstick")]
		bool get_HasThumbstick();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SimpleHapticsController")]
		global::Windows.Devices.Haptics.SimpleHapticsController get_SimpleHapticsController();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VendorId")]
		ushort get_VendorId();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ProductId")]
		ushort get_ProductId();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Version")]
		ushort get_Version();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionController2 : global::Windows.UI.Input.Spatial.ISpatialInteractionController
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStreamWithContentType> TryGetRenderableModelAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionController3 : global::Windows.UI.Input.Spatial.ISpatialInteractionController2, global::Windows.UI.Input.Spatial.ISpatialInteractionController
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Devices.Power.BatteryReport TryGetBatteryReport();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionSource3 : global::Windows.UI.Input.Spatial.ISpatialInteractionSource2, global::Windows.UI.Input.Spatial.ISpatialInteractionSource
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Handedness")]
		global::Windows.UI.Input.Spatial.SpatialInteractionSourceHandedness get_Handedness();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionSource4
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Perception.People.HandMeshObserver TryCreateHandMeshObserver();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperation<global::Windows.Perception.People.HandMeshObserver> TryCreateHandMeshObserverAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionSourceProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Input.Spatial.SpatialInteractionSourceLocation TryGetLocation(global::Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionSourceLocation
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionSourceLocation2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionSourceLocation3 : global::Windows.UI.Input.Spatial.ISpatialInteractionSourceLocation2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PositionAccuracy")]
		global::Windows.UI.Input.Spatial.SpatialInteractionSourcePositionAccuracy get_PositionAccuracy();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourcePointerPose")]
		global::Windows.UI.Input.Spatial.SpatialPointerInteractionSourcePose get_SourcePointerPose();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialPointerInteractionSourcePose
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialPointerInteractionSourcePose2 : global::Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PositionAccuracy")]
		global::Windows.UI.Input.Spatial.SpatialInteractionSourcePositionAccuracy get_PositionAccuracy();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialPointerPoseStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Input.Spatial.SpatialPointerPose TryGetAtTimestamp(
					global::Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem, 
					global::Windows.Perception.PerceptionTimestamp timestamp);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialPointerPose
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Timestamp")]
		global::Windows.Perception.PerceptionTimestamp get_Timestamp();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Head")]
		global::Windows.Perception.People.HeadPose get_Head();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialPointerPose2 : global::Windows.UI.Input.Spatial.ISpatialPointerPose
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Input.Spatial.SpatialPointerInteractionSourcePose TryGetInteractionSourcePose(global::Windows.UI.Input.Spatial.SpatialInteractionSource source);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialPointerPose3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Eyes")]
		global::Windows.Perception.People.EyesPose get_Eyes();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsHeadCapturedBySystem")]
		bool get_IsHeadCapturedBySystem();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionSourceState2 : global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsSelectPressed")]
		bool get_IsSelectPressed();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsMenuPressed")]
		bool get_IsMenuPressed();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsGrasped")]
		bool get_IsGrasped();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ControllerProperties")]
		global::Windows.UI.Input.Spatial.SpatialInteractionControllerProperties get_ControllerProperties();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionControllerProperties
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsTouchpadTouched")]
		bool get_IsTouchpadTouched();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsTouchpadPressed")]
		bool get_IsTouchpadPressed();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsThumbstickPressed")]
		bool get_IsThumbstickPressed();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionSourceState3 : global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState2, global::Windows.UI.Input.Spatial.ISpatialInteractionSourceState
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Perception.People.HandPose TryGetHandPose();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionDetectedEventArgs
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InteractionSourceKind")]
		global::Windows.UI.Input.Spatial.SpatialInteractionSourceKind get_InteractionSourceKind();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Input.Spatial.SpatialPointerPose TryGetPointerPose(global::Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Interaction")]
		global::Windows.UI.Input.Spatial.SpatialInteraction get_Interaction();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteraction
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourceState")]
		global::Windows.UI.Input.Spatial.SpatialInteractionSourceState get_SourceState();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionDetectedEventArgs2 : global::Windows.UI.Input.Spatial.ISpatialInteractionDetectedEventArgs
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InteractionSource")]
		global::Windows.UI.Input.Spatial.SpatialInteractionSource get_InteractionSource();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionSourceEventArgs
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "State")]
		global::Windows.UI.Input.Spatial.SpatialInteractionSourceState get_State();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISpatialInteractionSourceEventArgs2 : global::Windows.UI.Input.Spatial.ISpatialInteractionSourceEventArgs
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PressKind")]
		global::Windows.UI.Input.Spatial.SpatialInteractionPressKind get_PressKind();
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum SpatialInteractionSourceKind
	{
		Other = 0,
		Hand = 1,
		Voice = 2,
		Controller = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum SpatialInteractionSourceHandedness
	{
		Unspecified = 0,
		Left = 1,
		Right = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum SpatialInteractionSourcePositionAccuracy
	{
		High = 0,
		Approximate = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum SpatialInteractionPressKind
	{
		None = 0,
		Select = 1,
		Menu = 2,
		Grasp = 3,
		Touchpad = 4,
		Thumbstick = 5,
	}
}

namespace Windows.UI.ViewManagement
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.ViewManagement.IInputPane))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.ViewManagement.IInputPane2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.ViewManagement.IInputPaneControl))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(524288)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class InputPane : global::System.__ComObject, global::Windows.UI.ViewManagement.IInputPane, global::Windows.UI.ViewManagement.IInputPane2, global::Windows.UI.ViewManagement.IInputPaneControl
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Showing")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Showing(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.ViewManagement.InputPane, global::Windows.UI.ViewManagement.InputPaneVisibilityEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.ViewManagement.IInputPane__Impl.Stubs.add_Showing(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Showing")]
		public void remove_Showing(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.ViewManagement.IInputPane__Impl.Stubs.remove_Showing(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Hiding")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Hiding(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.ViewManagement.InputPane, global::Windows.UI.ViewManagement.InputPaneVisibilityEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.ViewManagement.IInputPane__Impl.Stubs.add_Hiding(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Hiding")]
		public void remove_Hiding(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.ViewManagement.IInputPane__Impl.Stubs.remove_Hiding(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool TryShow()
		{
			bool __retVal = global::Windows.UI.ViewManagement.IInputPane2__Impl.Stubs.TryShow(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool TryHide()
		{
			bool __retVal = global::Windows.UI.ViewManagement.IInputPane2__Impl.Stubs.TryHide(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Visible")]
		public bool get_Visible()
		{
			bool __retVal = global::Windows.UI.ViewManagement.IInputPaneControl__Impl.Stubs.get_Visible(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Visible")]
		public void put_Visible(bool value)
		{
			global::Windows.UI.ViewManagement.IInputPaneControl__Impl.Stubs.put_Visible(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.UI.ViewManagement.InputPane GetForUIContext(global::Windows.UI.UIContext context)
		{
			global::Windows.UI.ViewManagement.InputPane retval;
			retval = __Factory_Windows_UI_ViewManagement__IInputPaneStatics2_GetForUIContext(
								"Windows.UI.ViewManagement.InputPane", 
								context
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.UI.ViewManagement.InputPane __Factory_Windows_UI_ViewManagement__IInputPaneStatics2_GetForUIContext(
					string typeName, 
					global::Windows.UI.UIContext context)
		{
			global::Windows.UI.ViewManagement.InputPane __pRetVal;
			__pRetVal = global::Windows.UI.ViewManagement.IInputPaneStatics2__Impl.Stubs.GetForUIContext(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.ViewManagement.IInputPaneStatics2).TypeHandle
												), 
								context
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.UI.ViewManagement.InputPane GetForCurrentView()
		{
			global::Windows.UI.ViewManagement.InputPane retval;
			retval = __Factory_Windows_UI_ViewManagement__IInputPaneStatics_GetForCurrentView("Windows.UI.ViewManagement.InputPane");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.UI.ViewManagement.InputPane __Factory_Windows_UI_ViewManagement__IInputPaneStatics_GetForCurrentView(string typeName)
		{
			global::Windows.UI.ViewManagement.InputPane __pRetVal;
			__pRetVal = global::Windows.UI.ViewManagement.IInputPaneStatics__Impl.Stubs.GetForCurrentView(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.ViewManagement.IInputPaneStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public InputPane(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.ViewManagement.IInputPaneVisibilityEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class InputPaneVisibilityEventArgs : global::System.__ComObject, global::Windows.UI.ViewManagement.IInputPaneVisibilityEventArgs
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "EnsuredFocusedElementInView")]
		public void put_EnsuredFocusedElementInView(bool value)
		{
			global::Windows.UI.ViewManagement.IInputPaneVisibilityEventArgs__Impl.Stubs.put_EnsuredFocusedElementInView(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EnsuredFocusedElementInView")]
		public bool get_EnsuredFocusedElementInView()
		{
			bool __retVal = global::Windows.UI.ViewManagement.IInputPaneVisibilityEventArgs__Impl.Stubs.get_EnsuredFocusedElementInView(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public InputPaneVisibilityEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.ViewManagement.IApplicationView))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.ViewManagement.IApplicationView2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ApplicationView : global::System.__ComObject, global::Windows.UI.ViewManagement.IApplicationView, global::Windows.UI.ViewManagement.IApplicationView2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SuppressSystemOverlays")]
		public void put_SuppressSystemOverlays(bool value)
		{
			global::Windows.UI.ViewManagement.IApplicationView2__Impl.Stubs.put_SuppressSystemOverlays(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PreferredLaunchWindowingMode")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static void put_PreferredLaunchWindowingMode(global::Windows.UI.ViewManagement.ApplicationViewWindowingMode value)
		{
			__Factory_Windows_UI_ViewManagement__IApplicationViewStatics3_put_PreferredLaunchWindowingMode(
								"Windows.UI.ViewManagement.ApplicationView", 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static void __Factory_Windows_UI_ViewManagement__IApplicationViewStatics3_put_PreferredLaunchWindowingMode(
					string typeName, 
					global::Windows.UI.ViewManagement.ApplicationViewWindowingMode value)
		{
			global::Windows.UI.ViewManagement.IApplicationViewStatics3__Impl.Stubs.put_PreferredLaunchWindowingMode(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.ViewManagement.IApplicationViewStatics3).TypeHandle
												), 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.UI.ViewManagement.ApplicationView GetForCurrentView()
		{
			global::Windows.UI.ViewManagement.ApplicationView retval;
			retval = __Factory_Windows_UI_ViewManagement__IApplicationViewStatics2_GetForCurrentView("Windows.UI.ViewManagement.ApplicationView");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.UI.ViewManagement.ApplicationView __Factory_Windows_UI_ViewManagement__IApplicationViewStatics2_GetForCurrentView(string typeName)
		{
			global::Windows.UI.ViewManagement.ApplicationView __pRetVal;
			__pRetVal = global::Windows.UI.ViewManagement.IApplicationViewStatics2__Impl.Stubs.GetForCurrentView(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.ViewManagement.IApplicationViewStatics2).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public ApplicationView(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInputPaneStatics2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.ViewManagement.InputPane GetForUIContext(global::Windows.UI.UIContext context);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInputPaneStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.ViewManagement.InputPane GetForCurrentView();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInputPane
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Showing")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Showing(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.ViewManagement.InputPane, global::Windows.UI.ViewManagement.InputPaneVisibilityEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Showing")]
		void remove_Showing(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Hiding")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Hiding(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.ViewManagement.InputPane, global::Windows.UI.ViewManagement.InputPaneVisibilityEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Hiding")]
		void remove_Hiding(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInputPaneVisibilityEventArgs
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "EnsuredFocusedElementInView")]
		void put_EnsuredFocusedElementInView(bool value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "EnsuredFocusedElementInView")]
		bool get_EnsuredFocusedElementInView();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInputPane2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool TryShow();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool TryHide();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInputPaneControl
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Visible")]
		bool get_Visible();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Visible")]
		void put_Visible(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationViewStatics3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "PreferredLaunchWindowingMode")]
		void put_PreferredLaunchWindowingMode(global::Windows.UI.ViewManagement.ApplicationViewWindowingMode value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationViewStatics2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.ViewManagement.ApplicationView GetForCurrentView();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationView
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationView2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SuppressSystemOverlays")]
		void put_SuppressSystemOverlays(bool value);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ApplicationViewWindowingMode
	{
		Auto = 0,
		PreferredLaunchViewSize = 1,
		FullScreen = 2,
		CompactOverlay = 3,
		Maximized = 4,
	}
}

namespace Windows.UI.Xaml
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDependencyObject))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class DependencyObject : global::System.__ComObject, global::Windows.UI.Xaml.IDependencyObject, global::Windows.UI.Xaml.IDependencyObject2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		protected DependencyObject()
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml__IDependencyObjectFactory_CreateInstance("Windows.UI.Xaml.DependencyObject");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_UI_Xaml__IDependencyObjectFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
			global::System.IntPtr __pRetVal_WithAggregation;
			__pRetVal_WithAggregation = global::Windows.UI.Xaml.IDependencyObjectFactory__Impl.Stubs.CreateInstance(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.IDependencyObjectFactory).TypeHandle
												), 
								outerInspectable, 
								out innerInspectable
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
			return innerInspectable;
		}

		public DependencyObject(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement4))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement5))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement8))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElementOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElementOverrides7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElementOverrides8))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElementOverrides9))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class UIElement : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.IUIElement, global::Windows.UI.Xaml.IUIElement3, global::Windows.UI.Xaml.IUIElement4, global::Windows.UI.Xaml.IUIElement5, global::Windows.UI.Xaml.IUIElement7, global::Windows.UI.Xaml.IUIElement8, global::Windows.UI.Xaml.IUIElementOverrides, global::Windows.UI.Xaml.IUIElementOverrides7, global::Windows.UI.Xaml.IUIElementOverrides8, global::Windows.UI.Xaml.IUIElementOverrides9
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "KeyUp")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_KeyUp(global::Windows.UI.Xaml.Input.KeyEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_KeyUp(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "KeyUp")]
		public virtual void remove_KeyUp(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_KeyUp(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "KeyDown")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_KeyDown(global::Windows.UI.Xaml.Input.KeyEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_KeyDown(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "KeyDown")]
		public virtual void remove_KeyDown(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_KeyDown(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GotFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GotFocus(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_GotFocus(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GotFocus")]
		public virtual void remove_GotFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_GotFocus(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LostFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LostFocus(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_LostFocus(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LostFocus")]
		public virtual void remove_LostFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_LostFocus(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragEnter")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragEnter(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_DragEnter(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragEnter")]
		public virtual void remove_DragEnter(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_DragEnter(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragLeave")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragLeave(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_DragLeave(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragLeave")]
		public virtual void remove_DragLeave(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_DragLeave(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragOver")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragOver(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_DragOver(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragOver")]
		public virtual void remove_DragOver(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_DragOver(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Drop")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Drop(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_Drop(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Drop")]
		public virtual void remove_Drop(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_Drop(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerPressed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerPressed(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerPressed(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerPressed")]
		public virtual void remove_PointerPressed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerPressed(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerMoved")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerMoved(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerMoved(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerMoved")]
		public virtual void remove_PointerMoved(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerMoved(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerReleased")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerReleased(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerReleased(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerReleased")]
		public virtual void remove_PointerReleased(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerReleased(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerEntered")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerEntered(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerEntered(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerEntered")]
		public virtual void remove_PointerEntered(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerEntered(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerExited")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerExited(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerExited(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerExited")]
		public virtual void remove_PointerExited(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerExited(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerCaptureLost")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerCaptureLost(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerCaptureLost(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerCaptureLost")]
		public virtual void remove_PointerCaptureLost(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerCaptureLost(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerCanceled")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerCanceled(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerCanceled(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerCanceled")]
		public virtual void remove_PointerCanceled(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerCanceled(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerWheelChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerWheelChanged(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerWheelChanged(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerWheelChanged")]
		public virtual void remove_PointerWheelChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerWheelChanged(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Tapped")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Tapped(global::Windows.UI.Xaml.Input.TappedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_Tapped(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Tapped")]
		public virtual void remove_Tapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_Tapped(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DoubleTapped")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_DoubleTapped(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DoubleTapped")]
		public virtual void remove_DoubleTapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_DoubleTapped(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Holding")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Holding(global::Windows.UI.Xaml.Input.HoldingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_Holding(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Holding")]
		public virtual void remove_Holding(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_Holding(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RightTapped")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RightTapped(global::Windows.UI.Xaml.Input.RightTappedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_RightTapped(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RightTapped")]
		public virtual void remove_RightTapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_RightTapped(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationStarting(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationStarting")]
		public virtual void remove_ManipulationStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationStarting(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationInertiaStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationInertiaStarting(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationInertiaStarting")]
		public virtual void remove_ManipulationInertiaStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationInertiaStarting(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationStarted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationStarted(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationStarted")]
		public virtual void remove_ManipulationStarted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationStarted(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationDelta")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationDelta(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationDelta")]
		public virtual void remove_ManipulationDelta(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationDelta(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationCompleted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationCompleted(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationCompleted")]
		public virtual void remove_ManipulationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationCompleted(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragStarting(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement3__Impl.Stubs.add_DragStarting(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragStarting")]
		public virtual void remove_DragStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement3__Impl.Stubs.remove_DragStarting(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DropCompleted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DropCompleted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement3__Impl.Stubs.add_DropCompleted(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DropCompleted")]
		public virtual void remove_DropCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement3__Impl.Stubs.remove_DropCompleted(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.ContextRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_ContextRequested(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextRequested")]
		public virtual void remove_ContextRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_ContextRequested(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextCanceled")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextCanceled(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.RoutedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_ContextCanceled(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextCanceled")]
		public virtual void remove_ContextCanceled(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_ContextCanceled(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyDisplayRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyDisplayRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_AccessKeyDisplayRequested(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyDisplayRequested")]
		public virtual void remove_AccessKeyDisplayRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_AccessKeyDisplayRequested(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyDisplayDismissed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyDisplayDismissed(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_AccessKeyDisplayDismissed(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyDisplayDismissed")]
		public virtual void remove_AccessKeyDisplayDismissed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_AccessKeyDisplayDismissed(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyInvoked")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyInvoked(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_AccessKeyInvoked(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyInvoked")]
		public virtual void remove_AccessKeyInvoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_AccessKeyInvoked(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GettingFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GettingFocus(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.GettingFocusEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.add_GettingFocus(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GettingFocus")]
		public virtual void remove_GettingFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.remove_GettingFocus(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LosingFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LosingFocus(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.LosingFocusEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.add_LosingFocus(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LosingFocus")]
		public virtual void remove_LosingFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.remove_LosingFocus(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NoFocusCandidateFound")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NoFocusCandidateFound(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.NoFocusCandidateFoundEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.add_NoFocusCandidateFound(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NoFocusCandidateFound")]
		public virtual void remove_NoFocusCandidateFound(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.remove_NoFocusCandidateFound(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CharacterReceived")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CharacterReceived(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.add_CharacterReceived(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CharacterReceived")]
		public virtual void remove_CharacterReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.remove_CharacterReceived(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ProcessKeyboardAccelerators")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ProcessKeyboardAccelerators(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.add_ProcessKeyboardAccelerators(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ProcessKeyboardAccelerators")]
		public virtual void remove_ProcessKeyboardAccelerators(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.remove_ProcessKeyboardAccelerators(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PreviewKeyDown")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PreviewKeyDown(global::Windows.UI.Xaml.Input.KeyEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.add_PreviewKeyDown(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PreviewKeyDown")]
		public virtual void remove_PreviewKeyDown(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.remove_PreviewKeyDown(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PreviewKeyUp")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PreviewKeyUp(global::Windows.UI.Xaml.Input.KeyEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.add_PreviewKeyUp(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PreviewKeyUp")]
		public virtual void remove_PreviewKeyUp(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.remove_PreviewKeyUp(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BringIntoViewRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BringIntoViewRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement8__Impl.Stubs.add_BringIntoViewRequested(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BringIntoViewRequested")]
		public virtual void remove_BringIntoViewRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement8__Impl.Stubs.remove_BringIntoViewRequested(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer global::Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal_1 = this.OnCreateAutomationPeer();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal = global::Windows.UI.Xaml.IUIElementOverrides__Impl.Stubs.OnCreateAutomationPeer(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren()
		{
			this.OnDisconnectVisualChildren();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnDisconnectVisualChildren()
		{
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Stubs.OnDisconnectVisualChildren(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> global::Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(
					global::Windows.Foundation.Point point, 
					global::Windows.Foundation.Rect boundingRect)
		{
			global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> __retVal_1 = this.FindSubElementsForTouchTargeting(
								point, 
								boundingRect
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> FindSubElementsForTouchTargeting(
					global::Windows.Foundation.Point point, 
					global::Windows.Foundation.Rect boundingRect)
		{
			global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> __retVal = global::Windows.UI.Xaml.IUIElementOverrides__Impl.Stubs.FindSubElementsForTouchTargeting(
								this, 
								point, 
								boundingRect
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> global::Windows.UI.Xaml.IUIElementOverrides7.GetChildrenInTabFocusOrder()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> __retVal_1 = this.GetChildrenInTabFocusOrder();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> GetChildrenInTabFocusOrder()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> __retVal = global::Windows.UI.Xaml.IUIElementOverrides7__Impl.Stubs.GetChildrenInTabFocusOrder(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.IUIElementOverrides7.OnProcessKeyboardAccelerators(global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args)
		{
			this.OnProcessKeyboardAccelerators(args);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnProcessKeyboardAccelerators(global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args)
		{
			global::Windows.UI.Xaml.IUIElementOverrides7__Impl.Stubs.OnProcessKeyboardAccelerators(
								this, 
								args
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.IUIElementOverrides8.OnKeyboardAcceleratorInvoked(global::Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs args)
		{
			this.OnKeyboardAcceleratorInvoked(args);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnKeyboardAcceleratorInvoked(global::Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs args)
		{
			global::Windows.UI.Xaml.IUIElementOverrides8__Impl.Stubs.OnKeyboardAcceleratorInvoked(
								this, 
								args
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.IUIElementOverrides8.OnBringIntoViewRequested(global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs e)
		{
			this.OnBringIntoViewRequested(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnBringIntoViewRequested(global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs e)
		{
			global::Windows.UI.Xaml.IUIElementOverrides8__Impl.Stubs.OnBringIntoViewRequested(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.IUIElementOverrides9.PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo)
		{
			this.PopulatePropertyInfoOverride(
								propertyName, 
								animationPropertyInfo
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo)
		{
			global::Windows.UI.Xaml.IUIElementOverrides9__Impl.Stubs.PopulatePropertyInfoOverride(
								this, 
								propertyName, 
								animationPropertyInfo
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public UIElement(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RoutedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IRoutedEventArgs
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RoutedEventArgs()
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml__IRoutedEventArgsFactory_CreateInstance("Windows.UI.Xaml.RoutedEventArgs");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_UI_Xaml__IRoutedEventArgsFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.RoutedEventArgs).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.IRoutedEventArgsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IRoutedEventArgsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.IRoutedEventArgsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IRoutedEventArgsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public RoutedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDragEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DragEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IDragEventArgs
	{
		public DragEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDragStartingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DragStartingEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IDragStartingEventArgs
	{
		public DragStartingEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDropCompletedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DropCompletedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IDropCompletedEventArgs
	{
		public DropCompletedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IBringIntoViewRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class BringIntoViewRequestedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IBringIntoViewRequestedEventArgs
	{
		public BringIntoViewRequestedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement6))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElementProtected7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElementOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElementOverrides2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class FrameworkElement : global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.IFrameworkElement, global::Windows.UI.Xaml.IFrameworkElement2, global::Windows.UI.Xaml.IFrameworkElement3, global::Windows.UI.Xaml.IFrameworkElement6, global::Windows.UI.Xaml.IFrameworkElement7, global::Windows.UI.Xaml.IFrameworkElementProtected7, global::Windows.UI.Xaml.IFrameworkElementOverrides, global::Windows.UI.Xaml.IFrameworkElementOverrides2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		protected FrameworkElement() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml__IFrameworkElementFactory_CreateInstance("Windows.UI.Xaml.FrameworkElement");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_UI_Xaml__IFrameworkElementFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
			global::System.IntPtr __pRetVal_WithAggregation;
			__pRetVal_WithAggregation = global::Windows.UI.Xaml.IFrameworkElementFactory__Impl.Stubs.CreateInstance(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.IFrameworkElementFactory).TypeHandle
												), 
								outerInspectable, 
								out innerInspectable
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
			return innerInspectable;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Loaded")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Loaded(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.add_Loaded(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Loaded")]
		public virtual void remove_Loaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.remove_Loaded(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Unloaded")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Unloaded(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.add_Unloaded(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Unloaded")]
		public virtual void remove_Unloaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.remove_Unloaded(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SizeChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SizeChanged(global::Windows.UI.Xaml.SizeChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.add_SizeChanged(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SizeChanged")]
		public virtual void remove_SizeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.remove_SizeChanged(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LayoutUpdated")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LayoutUpdated(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.add_LayoutUpdated(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LayoutUpdated")]
		public virtual void remove_LayoutUpdated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.remove_LayoutUpdated(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DataContextChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DataContextChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement2__Impl.Stubs.add_DataContextChanged(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DataContextChanged")]
		public virtual void remove_DataContextChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement2__Impl.Stubs.remove_DataContextChanged(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Loading")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Loading(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement3__Impl.Stubs.add_Loading(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Loading")]
		public virtual void remove_Loading(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement3__Impl.Stubs.remove_Loading(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ActualThemeChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ActualThemeChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement6__Impl.Stubs.add_ActualThemeChanged(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ActualThemeChanged")]
		public virtual void remove_ActualThemeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement6__Impl.Stubs.remove_ActualThemeChanged(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EffectiveViewportChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EffectiveViewportChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.EffectiveViewportChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement7__Impl.Stubs.add_EffectiveViewportChanged(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EffectiveViewportChanged")]
		public virtual void remove_EffectiveViewportChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement7__Impl.Stubs.remove_EffectiveViewportChanged(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.IFrameworkElementProtected7.InvalidateViewport()
		{
			this.InvalidateViewport();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void InvalidateViewport()
		{
			global::Windows.UI.Xaml.IFrameworkElementProtected7__Impl.Stubs.InvalidateViewport(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		global::Windows.Foundation.Size global::Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(global::Windows.Foundation.Size availableSize)
		{
			global::Windows.Foundation.Size __retVal_1 = this.MeasureOverride(availableSize);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.Foundation.Size MeasureOverride(global::Windows.Foundation.Size availableSize)
		{
			global::Windows.Foundation.Size __retVal = global::Windows.UI.Xaml.IFrameworkElementOverrides__Impl.Stubs.MeasureOverride(
								this, 
								availableSize
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::Windows.Foundation.Size global::Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(global::Windows.Foundation.Size finalSize)
		{
			global::Windows.Foundation.Size __retVal_1 = this.ArrangeOverride(finalSize);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.Foundation.Size ArrangeOverride(global::Windows.Foundation.Size finalSize)
		{
			global::Windows.Foundation.Size __retVal = global::Windows.UI.Xaml.IFrameworkElementOverrides__Impl.Stubs.ArrangeOverride(
								this, 
								finalSize
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate()
		{
			this.OnApplyTemplate();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnApplyTemplate()
		{
			global::Windows.UI.Xaml.IFrameworkElementOverrides__Impl.Stubs.OnApplyTemplate(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		bool global::Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(
					string stateName, 
					bool useTransitions)
		{
			bool __retVal_1 = this.GoToElementStateCore(
								stateName, 
								useTransitions
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual bool GoToElementStateCore(
					string stateName, 
					bool useTransitions)
		{
			bool __retVal = global::Windows.UI.Xaml.IFrameworkElementOverrides2__Impl.Stubs.GoToElementStateCore(
								this, 
								stateName, 
								useTransitions
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public FrameworkElement(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.ISizeChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SizeChangedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.ISizeChangedEventArgs
	{
		public SizeChangedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDataContextChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DataContextChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IDataContextChangedEventArgs
	{
		public DataContextChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IEffectiveViewportChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class EffectiveViewportChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IEffectiveViewportChangedEventArgs
	{
		public EffectiveViewportChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DependencyPropertyChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs
	{
		public DependencyPropertyChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkTemplate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class FrameworkTemplate : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.IFrameworkTemplate
	{
		public FrameworkTemplate(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDataTemplate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class DataTemplate : global::Windows.UI.Xaml.FrameworkTemplate, global::Windows.UI.Xaml.IDataTemplate
	{
		public DataTemplate(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUnhandledExceptionEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class UnhandledExceptionEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IUnhandledExceptionEventArgs
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Exception")]
		public global::System.Exception get_Exception()
		{
			global::System.Exception __retVal = global::Windows.UI.Xaml.IUnhandledExceptionEventArgs__Impl.Stubs.get_Exception(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public UnhandledExceptionEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IWindow))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Window : global::System.__ComObject, global::Windows.UI.Xaml.IWindow
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public global::Windows.UI.Xaml.UIElement get_Content()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.get_Content(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Activated")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Activated(global::Windows.UI.Xaml.WindowActivatedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.add_Activated(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Activated")]
		public void remove_Activated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.remove_Activated(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closed")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closed(global::Windows.UI.Xaml.WindowClosedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.add_Closed(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closed")]
		public void remove_Closed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.remove_Closed(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SizeChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SizeChanged(global::Windows.UI.Xaml.WindowSizeChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.add_SizeChanged(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SizeChanged")]
		public void remove_SizeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.remove_SizeChanged(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "VisibilityChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_VisibilityChanged(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.add_VisibilityChanged(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "VisibilityChanged")]
		public void remove_VisibilityChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.remove_VisibilityChanged(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.UI.Xaml.Window get_Current()
		{
			global::Windows.UI.Xaml.Window retval;
			retval = __Factory_Windows_UI_Xaml__IWindowStatics_get_Current("Windows.UI.Xaml.Window");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.UI.Xaml.Window __Factory_Windows_UI_Xaml__IWindowStatics_get_Current(string typeName)
		{
			global::Windows.UI.Xaml.Window __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.IWindowStatics__Impl.Stubs.get_Current(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.Xaml.IWindowStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public Window(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplication))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplication2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplicationOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplicationOverrides2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Application : global::System.__ComObject, global::Windows.UI.Xaml.IApplication, global::Windows.UI.Xaml.IApplication2, global::Windows.UI.Xaml.IApplicationOverrides, global::Windows.UI.Xaml.IApplicationOverrides2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "UnhandledException")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_UnhandledException(global::Windows.UI.Xaml.UnhandledExceptionEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication__Impl.Stubs.add_UnhandledException(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "UnhandledException")]
		public virtual void remove_UnhandledException(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication__Impl.Stubs.remove_UnhandledException(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Suspending")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Suspending(global::Windows.UI.Xaml.SuspendingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication__Impl.Stubs.add_Suspending(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Suspending")]
		public virtual void remove_Suspending(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication__Impl.Stubs.remove_Suspending(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Resuming")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Resuming(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication__Impl.Stubs.add_Resuming(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Resuming")]
		public virtual void remove_Resuming(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication__Impl.Stubs.remove_Resuming(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LeavingBackground")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LeavingBackground(global::Windows.UI.Xaml.LeavingBackgroundEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication2__Impl.Stubs.add_LeavingBackground(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LeavingBackground")]
		public virtual void remove_LeavingBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication2__Impl.Stubs.remove_LeavingBackground(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EnteredBackground")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EnteredBackground(global::Windows.UI.Xaml.EnteredBackgroundEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication2__Impl.Stubs.add_EnteredBackground(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EnteredBackground")]
		public virtual void remove_EnteredBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication2__Impl.Stubs.remove_EnteredBackground(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnActivated(global::Windows.ApplicationModel.Activation.IActivatedEventArgs args)
		{
			this.OnActivated(args);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnActivated(global::Windows.ApplicationModel.Activation.IActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnActivated(
								this, 
								args
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnLaunched(global::Windows.ApplicationModel.Activation.LaunchActivatedEventArgs args)
		{
			this.OnLaunched(args);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnLaunched(global::Windows.ApplicationModel.Activation.LaunchActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnLaunched(
								this, 
								args
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnFileActivated(global::Windows.ApplicationModel.Activation.FileActivatedEventArgs args)
		{
			this.OnFileActivated(args);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnFileActivated(global::Windows.ApplicationModel.Activation.FileActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnFileActivated(
								this, 
								args
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnSearchActivated(global::Windows.ApplicationModel.Activation.SearchActivatedEventArgs args)
		{
			this.OnSearchActivated(args);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnSearchActivated(global::Windows.ApplicationModel.Activation.SearchActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnSearchActivated(
								this, 
								args
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnShareTargetActivated(global::Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs args)
		{
			this.OnShareTargetActivated(args);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnShareTargetActivated(global::Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnShareTargetActivated(
								this, 
								args
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnFileOpenPickerActivated(global::Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs args)
		{
			this.OnFileOpenPickerActivated(args);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnFileOpenPickerActivated(global::Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnFileOpenPickerActivated(
								this, 
								args
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnFileSavePickerActivated(global::Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs args)
		{
			this.OnFileSavePickerActivated(args);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnFileSavePickerActivated(global::Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnFileSavePickerActivated(
								this, 
								args
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnCachedFileUpdaterActivated(global::Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs args)
		{
			this.OnCachedFileUpdaterActivated(args);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnCachedFileUpdaterActivated(global::Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnCachedFileUpdaterActivated(
								this, 
								args
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnWindowCreated(global::Windows.UI.Xaml.WindowCreatedEventArgs args)
		{
			this.OnWindowCreated(args);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnWindowCreated(global::Windows.UI.Xaml.WindowCreatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnWindowCreated(
								this, 
								args
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides2.OnBackgroundActivated(global::Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs args)
		{
			this.OnBackgroundActivated(args);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnBackgroundActivated(global::Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides2__Impl.Stubs.OnBackgroundActivated(
								this, 
								args
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.UI.Xaml.Application get_Current()
		{
			global::Windows.UI.Xaml.Application retval;
			retval = __Factory_Windows_UI_Xaml__IApplicationStatics_get_Current("Windows.UI.Xaml.Application");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.UI.Xaml.Application __Factory_Windows_UI_Xaml__IApplicationStatics_get_Current(string typeName)
		{
			global::Windows.UI.Xaml.Application __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.IApplicationStatics__Impl.Stubs.get_Current(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.Xaml.IApplicationStatics).TypeHandle
								));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public Application(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IWindowCreatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WindowCreatedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IWindowCreatedEventArgs
	{
		public WindowCreatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDependencyObjectFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDependencyObject
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDependencyObject2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "KeyUp")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_KeyUp(global::Windows.UI.Xaml.Input.KeyEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "KeyUp")]
		void remove_KeyUp(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "KeyDown")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_KeyDown(global::Windows.UI.Xaml.Input.KeyEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "KeyDown")]
		void remove_KeyDown(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GotFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GotFocus(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GotFocus")]
		void remove_GotFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LostFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LostFocus(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LostFocus")]
		void remove_LostFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragEnter")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragEnter(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragEnter")]
		void remove_DragEnter(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragLeave")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragLeave(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragLeave")]
		void remove_DragLeave(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragOver")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragOver(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragOver")]
		void remove_DragOver(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Drop")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Drop(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Drop")]
		void remove_Drop(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerPressed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerPressed(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerPressed")]
		void remove_PointerPressed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerMoved")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerMoved(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerMoved")]
		void remove_PointerMoved(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerReleased")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerReleased(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerReleased")]
		void remove_PointerReleased(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerEntered")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerEntered(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerEntered")]
		void remove_PointerEntered(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerExited")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerExited(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerExited")]
		void remove_PointerExited(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerCaptureLost")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerCaptureLost(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerCaptureLost")]
		void remove_PointerCaptureLost(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerCanceled")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerCanceled(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerCanceled")]
		void remove_PointerCanceled(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerWheelChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerWheelChanged(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerWheelChanged")]
		void remove_PointerWheelChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Tapped")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Tapped(global::Windows.UI.Xaml.Input.TappedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Tapped")]
		void remove_Tapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DoubleTapped")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DoubleTapped")]
		void remove_DoubleTapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Holding")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Holding(global::Windows.UI.Xaml.Input.HoldingEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Holding")]
		void remove_Holding(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RightTapped")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RightTapped(global::Windows.UI.Xaml.Input.RightTappedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RightTapped")]
		void remove_RightTapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationStarting")]
		void remove_ManipulationStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationInertiaStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationInertiaStarting")]
		void remove_ManipulationInertiaStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationStarted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationStarted")]
		void remove_ManipulationStarted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationDelta")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationDelta")]
		void remove_ManipulationDelta(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationCompleted")]
		void remove_ManipulationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRoutedEventArgsFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void RoutedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.RoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DragEventHandler(
				object sender, 
				global::Windows.UI.Xaml.DragEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDragEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragStarting(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragStarting")]
		void remove_DragStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DropCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DropCompleted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DropCompleted")]
		void remove_DropCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDragStartingEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDropCompletedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement4
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.ContextRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextRequested")]
		void remove_ContextRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextCanceled")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextCanceled(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.RoutedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextCanceled")]
		void remove_ContextCanceled(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyDisplayRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyDisplayRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyDisplayRequested")]
		void remove_AccessKeyDisplayRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyDisplayDismissed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyDisplayDismissed(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyDisplayDismissed")]
		void remove_AccessKeyDisplayDismissed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyInvoked")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyInvoked(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyInvoked")]
		void remove_AccessKeyInvoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement5
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GettingFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GettingFocus(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.GettingFocusEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GettingFocus")]
		void remove_GettingFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LosingFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LosingFocus(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.LosingFocusEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LosingFocus")]
		void remove_LosingFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NoFocusCandidateFound")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NoFocusCandidateFound(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.NoFocusCandidateFoundEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NoFocusCandidateFound")]
		void remove_NoFocusCandidateFound(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement7
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CharacterReceived")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CharacterReceived(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CharacterReceived")]
		void remove_CharacterReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ProcessKeyboardAccelerators")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ProcessKeyboardAccelerators(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ProcessKeyboardAccelerators")]
		void remove_ProcessKeyboardAccelerators(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PreviewKeyDown")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PreviewKeyDown(global::Windows.UI.Xaml.Input.KeyEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PreviewKeyDown")]
		void remove_PreviewKeyDown(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PreviewKeyUp")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PreviewKeyUp(global::Windows.UI.Xaml.Input.KeyEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PreviewKeyUp")]
		void remove_PreviewKeyUp(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement8
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BringIntoViewRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BringIntoViewRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BringIntoViewRequested")]
		void remove_BringIntoViewRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBringIntoViewRequestedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElementOverrides
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer OnCreateAutomationPeer();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnDisconnectVisualChildren();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> FindSubElementsForTouchTargeting(
					global::Windows.Foundation.Point point, 
					global::Windows.Foundation.Rect boundingRect);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElementOverrides7
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> GetChildrenInTabFocusOrder();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnProcessKeyboardAccelerators(global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElementOverrides8
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnKeyboardAcceleratorInvoked(global::Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs args);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnBringIntoViewRequested(global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElementOverrides9
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElementFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Loaded")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Loaded(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Loaded")]
		void remove_Loaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Unloaded")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Unloaded(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Unloaded")]
		void remove_Unloaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SizeChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SizeChanged(global::Windows.UI.Xaml.SizeChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SizeChanged")]
		void remove_SizeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LayoutUpdated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LayoutUpdated(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LayoutUpdated")]
		void remove_LayoutUpdated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SizeChangedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.SizeChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISizeChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DataContextChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DataContextChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DataContextChanged")]
		void remove_DataContextChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataContextChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Loading")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Loading(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Loading")]
		void remove_Loading(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement6
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ActualThemeChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ActualThemeChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ActualThemeChanged")]
		void remove_ActualThemeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement7
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EffectiveViewportChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EffectiveViewportChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.EffectiveViewportChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EffectiveViewportChanged")]
		void remove_EffectiveViewportChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IEffectiveViewportChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElementProtected7
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void InvalidateViewport();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElementOverrides
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.Size MeasureOverride(global::Windows.Foundation.Size availableSize);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.Size ArrangeOverride(global::Windows.Foundation.Size finalSize);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnApplyTemplate();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElementOverrides2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool GoToElementStateCore(
					string stateName, 
					bool useTransitions);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DependencyPropertyChangedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDependencyPropertyChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkTemplate
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplate
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUnhandledExceptionEventArgs
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Exception")]
		global::System.Exception get_Exception();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void UnhandledExceptionEventHandler(
				object sender, 
				global::Windows.UI.Xaml.UnhandledExceptionEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindowStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		global::Windows.UI.Xaml.Window get_Current();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindow
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		global::Windows.UI.Xaml.UIElement get_Content();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Activated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Activated(global::Windows.UI.Xaml.WindowActivatedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Activated")]
		void remove_Activated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closed(global::Windows.UI.Xaml.WindowClosedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closed")]
		void remove_Closed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SizeChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SizeChanged(global::Windows.UI.Xaml.WindowSizeChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SizeChanged")]
		void remove_SizeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "VisibilityChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_VisibilityChanged(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "VisibilityChanged")]
		void remove_VisibilityChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WindowActivatedEventHandler(
				object sender, 
				global::Windows.UI.Core.WindowActivatedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WindowClosedEventHandler(
				object sender, 
				global::Windows.UI.Core.CoreWindowEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WindowSizeChangedEventHandler(
				object sender, 
				global::Windows.UI.Core.WindowSizeChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WindowVisibilityChangedEventHandler(
				object sender, 
				global::Windows.UI.Core.VisibilityChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		global::Windows.UI.Xaml.Application get_Current();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplication
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "UnhandledException")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_UnhandledException(global::Windows.UI.Xaml.UnhandledExceptionEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "UnhandledException")]
		void remove_UnhandledException(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Suspending")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Suspending(global::Windows.UI.Xaml.SuspendingEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Suspending")]
		void remove_Suspending(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Resuming")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Resuming(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Resuming")]
		void remove_Resuming(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SuspendingEventHandler(
				object sender, 
				global::Windows.ApplicationModel.SuspendingEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplication2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LeavingBackground")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LeavingBackground(global::Windows.UI.Xaml.LeavingBackgroundEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LeavingBackground")]
		void remove_LeavingBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EnteredBackground")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EnteredBackground(global::Windows.UI.Xaml.EnteredBackgroundEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EnteredBackground")]
		void remove_EnteredBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void LeavingBackgroundEventHandler(
				object sender, 
				global::Windows.ApplicationModel.LeavingBackgroundEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void EnteredBackgroundEventHandler(
				object sender, 
				global::Windows.ApplicationModel.EnteredBackgroundEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationOverrides
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnActivated(global::Windows.ApplicationModel.Activation.IActivatedEventArgs args);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnLaunched(global::Windows.ApplicationModel.Activation.LaunchActivatedEventArgs args);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnFileActivated(global::Windows.ApplicationModel.Activation.FileActivatedEventArgs args);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnSearchActivated(global::Windows.ApplicationModel.Activation.SearchActivatedEventArgs args);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnShareTargetActivated(global::Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs args);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnFileOpenPickerActivated(global::Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs args);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnFileSavePickerActivated(global::Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs args);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnCachedFileUpdaterActivated(global::Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs args);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnWindowCreated(global::Windows.UI.Xaml.WindowCreatedEventArgs args);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindowCreatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationOverrides2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnBackgroundActivated(global::Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs args);
	}
}

namespace Windows.UI.Xaml.Automation.Peers
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class AutomationPeer : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer5, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer6, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer7, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer8, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer9, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		protected AutomationPeer() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Automation_Peers__IAutomationPeerFactory_CreateInstance("Windows.UI.Xaml.Automation.Peers.AutomationPeer");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_UI_Xaml_Automation_Peers__IAutomationPeerFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
			global::System.IntPtr __pRetVal_WithAggregation;
			__pRetVal_WithAggregation = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerFactory__Impl.Stubs.CreateInstance(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerFactory).TypeHandle
												), 
								outerInspectable, 
								out innerInspectable
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
			return innerInspectable;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected.PeerFromProvider(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal_1 = this.PeerFromProvider(provider);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationPeer PeerFromProvider(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Stubs.PeerFromProvider(
								this, 
								provider
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected.ProviderFromPeer(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer peer)
		{
			global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple __retVal_1 = this.ProviderFromPeer(peer);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple ProviderFromPeer(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer peer)
		{
			global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Stubs.ProviderFromPeer(
								this, 
								peer
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		object global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPatternCore(global::Windows.UI.Xaml.Automation.Peers.PatternInterface patternInterface)
		{
			object __retVal_1 = this.GetPatternCore(patternInterface);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual object GetPatternCore(global::Windows.UI.Xaml.Automation.Peers.PatternInterface patternInterface)
		{
			object __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetPatternCore(
								this, 
								patternInterface
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAcceleratorKeyCore()
		{
			string __retVal_1 = this.GetAcceleratorKeyCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual string GetAcceleratorKeyCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetAcceleratorKeyCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAccessKeyCore()
		{
			string __retVal_1 = this.GetAccessKeyCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual string GetAccessKeyCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetAccessKeyCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationControlType global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAutomationControlTypeCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationControlType __retVal_1 = this.GetAutomationControlTypeCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationControlType GetAutomationControlTypeCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationControlType __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetAutomationControlTypeCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAutomationIdCore()
		{
			string __retVal_1 = this.GetAutomationIdCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual string GetAutomationIdCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetAutomationIdCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::Windows.Foundation.Rect global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetBoundingRectangleCore()
		{
			global::Windows.Foundation.Rect __retVal_1 = this.GetBoundingRectangleCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.Foundation.Rect GetBoundingRectangleCore()
		{
			global::Windows.Foundation.Rect __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetBoundingRectangleCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetChildrenCore()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetChildrenCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetChildrenCore()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetChildrenCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetClassNameCore()
		{
			string __retVal_1 = this.GetClassNameCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual string GetClassNameCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetClassNameCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::Windows.Foundation.Point global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetClickablePointCore()
		{
			global::Windows.Foundation.Point __retVal_1 = this.GetClickablePointCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.Foundation.Point GetClickablePointCore()
		{
			global::Windows.Foundation.Point __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetClickablePointCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetHelpTextCore()
		{
			string __retVal_1 = this.GetHelpTextCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual string GetHelpTextCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetHelpTextCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetItemStatusCore()
		{
			string __retVal_1 = this.GetItemStatusCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual string GetItemStatusCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetItemStatusCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetItemTypeCore()
		{
			string __retVal_1 = this.GetItemTypeCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual string GetItemTypeCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetItemTypeCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetLabeledByCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal_1 = this.GetLabeledByCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationPeer GetLabeledByCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetLabeledByCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetLocalizedControlTypeCore()
		{
			string __retVal_1 = this.GetLocalizedControlTypeCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual string GetLocalizedControlTypeCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetLocalizedControlTypeCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetNameCore()
		{
			string __retVal_1 = this.GetNameCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual string GetNameCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetNameCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetOrientationCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation __retVal_1 = this.GetOrientationCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation GetOrientationCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetOrientationCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.HasKeyboardFocusCore()
		{
			bool __retVal_1 = this.HasKeyboardFocusCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual bool HasKeyboardFocusCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.HasKeyboardFocusCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsContentElementCore()
		{
			bool __retVal_1 = this.IsContentElementCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual bool IsContentElementCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsContentElementCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsControlElementCore()
		{
			bool __retVal_1 = this.IsControlElementCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual bool IsControlElementCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsControlElementCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsEnabledCore()
		{
			bool __retVal_1 = this.IsEnabledCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual bool IsEnabledCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsEnabledCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsKeyboardFocusableCore()
		{
			bool __retVal_1 = this.IsKeyboardFocusableCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual bool IsKeyboardFocusableCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsKeyboardFocusableCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsOffscreenCore()
		{
			bool __retVal_1 = this.IsOffscreenCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual bool IsOffscreenCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsOffscreenCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsPasswordCore()
		{
			bool __retVal_1 = this.IsPasswordCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual bool IsPasswordCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsPasswordCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsRequiredForFormCore()
		{
			bool __retVal_1 = this.IsRequiredForFormCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual bool IsRequiredForFormCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsRequiredForFormCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.SetFocusCore()
		{
			this.SetFocusCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void SetFocusCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.SetFocusCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPeerFromPointCore(global::Windows.Foundation.Point point)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal_1 = this.GetPeerFromPointCore(point);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationPeer GetPeerFromPointCore(global::Windows.Foundation.Point point)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetPeerFromPointCore(
								this, 
								point
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetLiveSettingCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting __retVal_1 = this.GetLiveSettingCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSettingCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetLiveSettingCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2.ShowContextMenuCore()
		{
			this.ShowContextMenuCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void ShowContextMenuCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Stubs.ShowContextMenuCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2.GetControlledPeersCore()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetControlledPeersCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetControlledPeersCore()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Stubs.GetControlledPeersCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		object global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.NavigateCore(global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction)
		{
			object __retVal_1 = this.NavigateCore(direction);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual object NavigateCore(global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction)
		{
			object __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.NavigateCore(
								this, 
								direction
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		object global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetElementFromPointCore(global::Windows.Foundation.Point pointInWindowCoordinates)
		{
			object __retVal_1 = this.GetElementFromPointCore(pointInWindowCoordinates);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual object GetElementFromPointCore(global::Windows.Foundation.Point pointInWindowCoordinates)
		{
			object __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetElementFromPointCore(
								this, 
								pointInWindowCoordinates
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		object global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetFocusedElementCore()
		{
			object __retVal_1 = this.GetFocusedElementCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual object GetFocusedElementCore()
		{
			object __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetFocusedElementCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetAnnotationsCore()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> __retVal_1 = this.GetAnnotationsCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> GetAnnotationsCore()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetAnnotationsCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		int global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetPositionInSetCore()
		{
			int __retVal_1 = this.GetPositionInSetCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual int GetPositionInSetCore()
		{
			int __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetPositionInSetCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		int global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetSizeOfSetCore()
		{
			int __retVal_1 = this.GetSizeOfSetCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual int GetSizeOfSetCore()
		{
			int __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetSizeOfSetCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		int global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetLevelCore()
		{
			int __retVal_1 = this.GetLevelCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual int GetLevelCore()
		{
			int __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetLevelCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4.GetLandmarkTypeCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType __retVal_1 = this.GetLandmarkTypeCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType GetLandmarkTypeCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Stubs.GetLandmarkTypeCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4.GetLocalizedLandmarkTypeCore()
		{
			string __retVal_1 = this.GetLocalizedLandmarkTypeCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual string GetLocalizedLandmarkTypeCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Stubs.GetLocalizedLandmarkTypeCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.IsPeripheralCore()
		{
			bool __retVal_1 = this.IsPeripheralCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual bool IsPeripheralCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.IsPeripheralCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.IsDataValidForFormCore()
		{
			bool __retVal_1 = this.IsDataValidForFormCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual bool IsDataValidForFormCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.IsDataValidForFormCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.GetFullDescriptionCore()
		{
			string __retVal_1 = this.GetFullDescriptionCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual string GetFullDescriptionCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.GetFullDescriptionCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.GetDescribedByCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetDescribedByCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetDescribedByCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.GetDescribedByCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.GetFlowsToCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetFlowsToCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsToCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.GetFlowsToCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.GetFlowsFromCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetFlowsFromCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsFromCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.GetFlowsFromCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		int global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6.GetCultureCore()
		{
			int __retVal_1 = this.GetCultureCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual int GetCultureCore()
		{
			int __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6__Impl.Stubs.GetCultureCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8.GetHeadingLevelCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel __retVal_1 = this.GetHeadingLevelCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevelCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8__Impl.Stubs.GetHeadingLevelCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9.IsDialogCore()
		{
			bool __retVal_1 = this.IsDialogCore();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual bool IsDialogCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9__Impl.Stubs.IsDialogCore(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public AutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AutomationPeerAnnotation : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AutomationPeerAnnotation() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		public AutomationPeerAnnotation(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer3
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer4
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer5
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer6
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer7
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer8
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer9
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerProtected
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer PeerFromProvider(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple ProviderFromPeer(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer peer);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		object GetPatternCore(global::Windows.UI.Xaml.Automation.Peers.PatternInterface patternInterface);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string GetAcceleratorKeyCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string GetAccessKeyCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Xaml.Automation.Peers.AutomationControlType GetAutomationControlTypeCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string GetAutomationIdCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.Rect GetBoundingRectangleCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetChildrenCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string GetClassNameCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.Point GetClickablePointCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string GetHelpTextCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string GetItemStatusCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string GetItemTypeCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer GetLabeledByCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string GetLocalizedControlTypeCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string GetNameCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation GetOrientationCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool HasKeyboardFocusCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsContentElementCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsControlElementCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsEnabledCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsKeyboardFocusableCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsOffscreenCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsPasswordCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsRequiredForFormCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void SetFocusCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer GetPeerFromPointCore(global::Windows.Foundation.Point point);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSettingCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void ShowContextMenuCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetControlledPeersCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		object NavigateCore(global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		object GetElementFromPointCore(global::Windows.Foundation.Point pointInWindowCoordinates);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		object GetFocusedElementCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> GetAnnotationsCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int GetPositionInSetCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int GetSizeOfSetCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int GetLevelCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerAnnotation
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides4
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType GetLandmarkTypeCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string GetLocalizedLandmarkTypeCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides5
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsPeripheralCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsDataValidForFormCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		string GetFullDescriptionCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetDescribedByCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsToCore();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsFromCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides6
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int GetCultureCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides8
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevelCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides9
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool IsDialogCore();
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum PatternInterface
	{
		Invoke = 0,
		Selection = 1,
		Value = 2,
		RangeValue = 3,
		Scroll = 4,
		ScrollItem = 5,
		ExpandCollapse = 6,
		Grid = 7,
		GridItem = 8,
		MultipleView = 9,
		Window = 10,
		SelectionItem = 11,
		Dock = 12,
		Table = 13,
		TableItem = 14,
		Toggle = 15,
		Transform = 16,
		Text = 17,
		ItemContainer = 18,
		VirtualizedItem = 19,
		Text2 = 20,
		TextChild = 21,
		TextRange = 22,
		Annotation = 23,
		Drag = 24,
		DropTarget = 25,
		ObjectModel = 26,
		Spreadsheet = 27,
		SpreadsheetItem = 28,
		Styles = 29,
		Transform2 = 30,
		SynchronizedInput = 31,
		TextEdit = 32,
		CustomNavigation = 33,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationControlType
	{
		Button = 0,
		Calendar = 1,
		CheckBox = 2,
		ComboBox = 3,
		Edit = 4,
		Hyperlink = 5,
		Image = 6,
		ListItem = 7,
		List = 8,
		Menu = 9,
		MenuBar = 10,
		MenuItem = 11,
		ProgressBar = 12,
		RadioButton = 13,
		ScrollBar = 14,
		Slider = 15,
		Spinner = 16,
		StatusBar = 17,
		Tab = 18,
		TabItem = 19,
		Text = 20,
		ToolBar = 21,
		ToolTip = 22,
		Tree = 23,
		TreeItem = 24,
		Custom = 25,
		Group = 26,
		Thumb = 27,
		DataGrid = 28,
		DataItem = 29,
		Document = 30,
		SplitButton = 31,
		Window = 32,
		Pane = 33,
		Header = 34,
		HeaderItem = 35,
		Table = 36,
		TitleBar = 37,
		Separator = 38,
		SemanticZoom = 39,
		AppBar = 40,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationOrientation
	{
		None = 0,
		Horizontal = 1,
		Vertical = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationLiveSetting
	{
		Off = 0,
		Polite = 1,
		Assertive = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationNavigationDirection
	{
		Parent = 0,
		NextSibling = 1,
		PreviousSibling = 2,
		FirstChild = 3,
		LastChild = 4,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationLandmarkType
	{
		None = 0,
		Custom = 1,
		Form = 2,
		Main = 3,
		Navigation = 4,
		Search = 5,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationHeadingLevel
	{
		None = 0,
		Level1 = 1,
		Level2 = 2,
		Level3 = 3,
		Level4 = 4,
		Level5 = 5,
		Level6 = 6,
		Level7 = 7,
		Level8 = 8,
		Level9 = 9,
	}
}

namespace Windows.UI.Xaml.Automation.Provider
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class IRawElementProviderSimple : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple
	{
		public IRawElementProviderSimple(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IIRawElementProviderSimple
	{
	}
}

namespace Windows.UI.Xaml.Controls
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IPanel))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Panel : global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.Controls.IPanel
	{
		public Panel(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IGrid))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Grid : global::Windows.UI.Xaml.Controls.Panel, global::Windows.UI.Xaml.Controls.IGrid
	{
		public Grid(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ISwapChainPanel))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class SwapChainPanel : global::Windows.UI.Xaml.Controls.Grid, global::Windows.UI.Xaml.Controls.ISwapChainPanel
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public SwapChainPanel() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__ISwapChainPanelFactory_CreateInstance("Windows.UI.Xaml.Controls.SwapChainPanel");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__ISwapChainPanelFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.SwapChainPanel).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.ISwapChainPanelFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.ISwapChainPanelFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.ISwapChainPanelFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.ISwapChainPanelFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CompositionScaleChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CompositionScaleChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SwapChainPanel, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.ISwapChainPanel__Impl.Stubs.add_CompositionScaleChanged(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CompositionScaleChanged")]
		public virtual void remove_CompositionScaleChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.ISwapChainPanel__Impl.Stubs.remove_CompositionScaleChanged(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public SwapChainPanel(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControl))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControl4))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControlProtected))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControlOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControlOverrides6))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Control : global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.Controls.IControl, global::Windows.UI.Xaml.Controls.IControl4, global::Windows.UI.Xaml.Controls.IControlProtected, global::Windows.UI.Xaml.Controls.IControlOverrides, global::Windows.UI.Xaml.Controls.IControlOverrides6
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		protected Control() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IControlFactory_CreateInstance("Windows.UI.Xaml.Controls.Control");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IControlFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
			global::System.IntPtr __pRetVal_WithAggregation;
			__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IControlFactory__Impl.Stubs.CreateInstance(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Controls.IControlFactory).TypeHandle
												), 
								outerInspectable, 
								out innerInspectable
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
			return innerInspectable;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsEnabledChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsEnabledChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.add_IsEnabledChanged(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsEnabledChanged")]
		public virtual void remove_IsEnabledChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.remove_IsEnabledChanged(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FocusEngaged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FocusEngaged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.FocusEngagedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IControl4__Impl.Stubs.add_FocusEngaged(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FocusEngaged")]
		public virtual void remove_FocusEngaged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IControl4__Impl.Stubs.remove_FocusEngaged(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FocusDisengaged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FocusDisengaged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.FocusDisengagedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IControl4__Impl.Stubs.add_FocusDisengaged(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FocusDisengaged")]
		public virtual void remove_FocusDisengaged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IControl4__Impl.Stubs.remove_FocusDisengaged(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		object global::Windows.UI.Xaml.Controls.IControlProtected.get_DefaultStyleKey()
		{
			object __retVal_1 = this.get_DefaultStyleKey();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultStyleKey")]
		protected virtual object get_DefaultStyleKey()
		{
			object __retVal = global::Windows.UI.Xaml.Controls.IControlProtected__Impl.Stubs.get_DefaultStyleKey(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Controls.IControlProtected.put_DefaultStyleKey(object value)
		{
			this.put_DefaultStyleKey(value);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultStyleKey")]
		protected virtual void put_DefaultStyleKey(object value)
		{
			global::Windows.UI.Xaml.Controls.IControlProtected__Impl.Stubs.put_DefaultStyleKey(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		global::Windows.UI.Xaml.DependencyObject global::Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(string childName)
		{
			global::Windows.UI.Xaml.DependencyObject __retVal_1 = this.GetTemplateChild(childName);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.UI.Xaml.DependencyObject GetTemplateChild(string childName)
		{
			global::Windows.UI.Xaml.DependencyObject __retVal = global::Windows.UI.Xaml.Controls.IControlProtected__Impl.Stubs.GetTemplateChild(
								this, 
								childName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerEntered(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnPointerEntered(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerEntered(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerPressed(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnPointerPressed(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerPressed(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerMoved(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnPointerMoved(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerMoved(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerReleased(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnPointerReleased(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerReleased(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerExited(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnPointerExited(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerExited(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerCaptureLost(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnPointerCaptureLost(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerCaptureLost(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerCanceled(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnPointerCanceled(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerCanceled(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerWheelChanged(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnPointerWheelChanged(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerWheelChanged(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e)
		{
			this.OnTapped(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnTapped(global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnTapped(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e)
		{
			this.OnDoubleTapped(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnDoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDoubleTapped(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e)
		{
			this.OnHolding(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnHolding(global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnHolding(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e)
		{
			this.OnRightTapped(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnRightTapped(global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnRightTapped(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e)
		{
			this.OnManipulationStarting(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationStarting(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e)
		{
			this.OnManipulationInertiaStarting(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationInertiaStarting(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e)
		{
			this.OnManipulationStarted(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationStarted(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e)
		{
			this.OnManipulationDelta(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationDelta(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e)
		{
			this.OnManipulationCompleted(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationCompleted(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			this.OnKeyUp(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnKeyUp(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			this.OnKeyDown(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnKeyDown(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(global::Windows.UI.Xaml.RoutedEventArgs e)
		{
			this.OnGotFocus(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnGotFocus(global::Windows.UI.Xaml.RoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnGotFocus(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(global::Windows.UI.Xaml.RoutedEventArgs e)
		{
			this.OnLostFocus(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnLostFocus(global::Windows.UI.Xaml.RoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnLostFocus(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(global::Windows.UI.Xaml.DragEventArgs e)
		{
			this.OnDragEnter(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnDragEnter(global::Windows.UI.Xaml.DragEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDragEnter(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(global::Windows.UI.Xaml.DragEventArgs e)
		{
			this.OnDragLeave(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnDragLeave(global::Windows.UI.Xaml.DragEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDragLeave(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(global::Windows.UI.Xaml.DragEventArgs e)
		{
			this.OnDragOver(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnDragOver(global::Windows.UI.Xaml.DragEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDragOver(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(global::Windows.UI.Xaml.DragEventArgs e)
		{
			this.OnDrop(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnDrop(global::Windows.UI.Xaml.DragEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDrop(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides6.OnPreviewKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			this.OnPreviewKeyDown(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnPreviewKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides6__Impl.Stubs.OnPreviewKeyDown(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides6.OnPreviewKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			this.OnPreviewKeyUp(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnPreviewKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides6__Impl.Stubs.OnPreviewKeyUp(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides6.OnCharacterReceived(global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs e)
		{
			this.OnCharacterReceived(e);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnCharacterReceived(global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides6__Impl.Stubs.OnCharacterReceived(
								this, 
								e
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public Control(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IFocusEngagedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FocusEngagedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Controls.IFocusEngagedEventArgs
	{
		public FocusEngagedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IFocusDisengagedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FocusDisengagedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Controls.IFocusDisengagedEventArgs
	{
		public FocusDisengagedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContentControl))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContentControlOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ContentControl : global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.IContentControl, global::Windows.UI.Xaml.Controls.IContentControlOverrides
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public virtual object get_Content()
		{
			object __retVal = global::Windows.UI.Xaml.Controls.IContentControl__Impl.Stubs.get_Content(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentChanged(
					object oldContent, 
					object newContent)
		{
			this.OnContentChanged(
								oldContent, 
								newContent
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnContentChanged(
					object oldContent, 
					object newContent)
		{
			global::Windows.UI.Xaml.Controls.IContentControlOverrides__Impl.Stubs.OnContentChanged(
								this, 
								oldContent, 
								newContent
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate)
		{
			this.OnContentTemplateChanged(
								oldContentTemplate, 
								newContentTemplate
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnContentTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate)
		{
			global::Windows.UI.Xaml.Controls.IContentControlOverrides__Impl.Stubs.OnContentTemplateChanged(
								this, 
								oldContentTemplate, 
								newContentTemplate
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		void global::Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector)
		{
			this.OnContentTemplateSelectorChanged(
								oldContentTemplateSelector, 
								newContentTemplateSelector
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual void OnContentTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector)
		{
			global::Windows.UI.Xaml.Controls.IContentControlOverrides__Impl.Stubs.OnContentTemplateSelectorChanged(
								this, 
								oldContentTemplateSelector, 
								newContentTemplateSelector
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public ContentControl(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelector))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class DataTemplateSelector : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IDataTemplateSelector, global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides, global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2
	{
		global::Windows.UI.Xaml.DataTemplate global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides.SelectTemplateCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container)
		{
			global::Windows.UI.Xaml.DataTemplate __retVal_1 = this.SelectTemplateCore(
								item, 
								container
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.UI.Xaml.DataTemplate SelectTemplateCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container)
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides__Impl.Stubs.SelectTemplateCore(
								this, 
								item, 
								container
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.DataTemplate global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2.SelectTemplateCore(object item)
		{
			global::Windows.UI.Xaml.DataTemplate __retVal_1 = this.SelectTemplateCore(item);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		protected virtual global::Windows.UI.Xaml.DataTemplate SelectTemplateCore(object item)
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2__Impl.Stubs.SelectTemplateCore(
								this, 
								item
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public DataTemplateSelector(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IFrame))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Frame : global::Windows.UI.Xaml.Controls.ContentControl, global::Windows.UI.Xaml.Controls.IFrame
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Navigated")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Navigated(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.add_Navigated(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Navigated")]
		public virtual void remove_Navigated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.remove_Navigated(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Navigating")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Navigating(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.add_Navigating(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Navigating")]
		public virtual void remove_Navigating(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.remove_Navigating(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationFailed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationFailed(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.add_NavigationFailed(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationFailed")]
		public virtual void remove_NavigationFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.remove_NavigationFailed(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationStopped")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationStopped(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.add_NavigationStopped(
								this, 
								handler
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationStopped")]
		public virtual void remove_NavigationStopped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.remove_NavigationStopped(
								this, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public Frame(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPanel
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGrid
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISwapChainPanelFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISwapChainPanel
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CompositionScaleChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CompositionScaleChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SwapChainPanel, object> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CompositionScaleChanged")]
		void remove_CompositionScaleChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControlFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControl
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsEnabledChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsEnabledChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsEnabledChanged")]
		void remove_IsEnabledChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControl4
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FocusEngaged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FocusEngaged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.FocusEngagedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FocusEngaged")]
		void remove_FocusEngaged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FocusDisengaged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FocusDisengaged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.FocusDisengagedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FocusDisengaged")]
		void remove_FocusDisengaged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFocusEngagedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFocusDisengagedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControlProtected
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultStyleKey")]
		object get_DefaultStyleKey();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultStyleKey")]
		void put_DefaultStyleKey(object value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Xaml.DependencyObject GetTemplateChild(string childName);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControlOverrides
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnPointerEntered(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnPointerPressed(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnPointerMoved(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnPointerReleased(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnPointerExited(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnPointerCaptureLost(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnPointerCanceled(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnPointerWheelChanged(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnTapped(global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnDoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnHolding(global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnRightTapped(global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnGotFocus(global::Windows.UI.Xaml.RoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnLostFocus(global::Windows.UI.Xaml.RoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnDragEnter(global::Windows.UI.Xaml.DragEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnDragLeave(global::Windows.UI.Xaml.DragEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnDragOver(global::Windows.UI.Xaml.DragEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnDrop(global::Windows.UI.Xaml.DragEventArgs e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControlOverrides6
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnPreviewKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnPreviewKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnCharacterReceived(global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentControl
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		object get_Content();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentControlOverrides
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnContentChanged(
					object oldContent, 
					object newContent);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnContentTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		void OnContentTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplateSelector
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplateSelectorOverrides
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Xaml.DataTemplate SelectTemplateCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplateSelectorOverrides2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Xaml.DataTemplate SelectTemplateCore(object item);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrame
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Navigated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Navigated(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Navigated")]
		void remove_Navigated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Navigating")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Navigating(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Navigating")]
		void remove_Navigating(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationFailed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationFailed(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationFailed")]
		void remove_NavigationFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationStopped")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationStopped(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler handler);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationStopped")]
		void remove_NavigationStopped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}
}

namespace Windows.UI.Xaml.Data
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IValueConverter
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		object Convert(
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		object ConvertBack(
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language);
	}
}

namespace Windows.UI.Xaml.Input
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class KeyRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs
	{
		public KeyRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PointerRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs
	{
		public PointerRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TappedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs
	{
		public TappedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DoubleTappedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs
	{
		public DoubleTappedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HoldingRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs
	{
		public HoldingRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RightTappedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs
	{
		public RightTappedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ManipulationStartingRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs
	{
		public ManipulationStartingRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ManipulationInertiaStartingRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs
	{
		public ManipulationInertiaStartingRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ManipulationStartedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs
	{
		public ManipulationStartedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ManipulationDeltaRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs
	{
		public ManipulationDeltaRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ManipulationCompletedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs
	{
		public ManipulationCompletedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IContextRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContextRequestedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IContextRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ContextRequestedEventArgs() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Input.ContextRequestedEventArgs");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		public ContextRequestedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IAccessKeyDisplayRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AccessKeyDisplayRequestedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IAccessKeyDisplayRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AccessKeyDisplayRequestedEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		public AccessKeyDisplayRequestedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IAccessKeyDisplayDismissedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AccessKeyDisplayDismissedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IAccessKeyDisplayDismissedEventArgs
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AccessKeyDisplayDismissedEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		public AccessKeyDisplayDismissedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IAccessKeyInvokedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AccessKeyInvokedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IAccessKeyInvokedEventArgs
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AccessKeyInvokedEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		public AccessKeyInvokedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IGettingFocusEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class GettingFocusEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IGettingFocusEventArgs
	{
		public GettingFocusEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.ILosingFocusEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class LosingFocusEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.ILosingFocusEventArgs
	{
		public LosingFocusEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.INoFocusCandidateFoundEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NoFocusCandidateFoundEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.INoFocusCandidateFoundEventArgs
	{
		public NoFocusCandidateFoundEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.ICharacterReceivedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CharacterReceivedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.ICharacterReceivedRoutedEventArgs
	{
		public CharacterReceivedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IProcessKeyboardAcceleratorEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ProcessKeyboardAcceleratorEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IProcessKeyboardAcceleratorEventArgs
	{
		public ProcessKeyboardAcceleratorEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IKeyboardAcceleratorInvokedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class KeyboardAcceleratorInvokedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IKeyboardAcceleratorInvokedEventArgs
	{
		public KeyboardAcceleratorInvokedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void KeyEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IKeyRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void PointerEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPointerRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void TappedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITappedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DoubleTappedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDoubleTappedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void HoldingEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHoldingRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void RightTappedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRightTappedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationStartingEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationStartingRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationInertiaStartingEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationInertiaStartingRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationStartedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationStartedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationDeltaEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationDeltaRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationCompletedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationCompletedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContextRequestedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAccessKeyDisplayRequestedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAccessKeyDisplayDismissedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAccessKeyInvokedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGettingFocusEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILosingFocusEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INoFocusCandidateFoundEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICharacterReceivedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IProcessKeyboardAcceleratorEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IKeyboardAcceleratorInvokedEventArgs
	{
	}
}

namespace Windows.UI.Xaml.Markup
{
	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContentPropertyAttribute : global::System.Attribute
	{
		public ContentPropertyAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.UI.Xaml.Markup.ContentPropertyAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}
		public string Name;
	}
}

namespace Windows.UI.Xaml.Media
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IVisualTreeHelper))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class VisualTreeHelper : global::System.__ComObject, global::Windows.UI.Xaml.Media.IVisualTreeHelper
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static global::Windows.UI.Xaml.DependencyObject GetChild(
					global::Windows.UI.Xaml.DependencyObject reference, 
					int childIndex)
		{
			global::Windows.UI.Xaml.DependencyObject retval;
			retval = __Factory_Windows_UI_Xaml_Media__IVisualTreeHelperStatics_GetChild(
								"Windows.UI.Xaml.Media.VisualTreeHelper", 
								reference, 
								childIndex
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static global::Windows.UI.Xaml.DependencyObject __Factory_Windows_UI_Xaml_Media__IVisualTreeHelperStatics_GetChild(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject reference, 
					int childIndex)
		{
			global::Windows.UI.Xaml.DependencyObject __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Media.IVisualTreeHelperStatics__Impl.Stubs.GetChild(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Media.IVisualTreeHelperStatics).TypeHandle
												), 
								reference, 
								childIndex
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public static int GetChildrenCount(global::Windows.UI.Xaml.DependencyObject reference)
		{
			int retval;
			retval = __Factory_Windows_UI_Xaml_Media__IVisualTreeHelperStatics_GetChildrenCount(
								"Windows.UI.Xaml.Media.VisualTreeHelper", 
								reference
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return retval;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		static int __Factory_Windows_UI_Xaml_Media__IVisualTreeHelperStatics_GetChildrenCount(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject reference)
		{
			int __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Media.IVisualTreeHelperStatics__Impl.Stubs.GetChildrenCount(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Media.IVisualTreeHelperStatics).TypeHandle
												), 
								reference
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __pRetVal;
		}

		public VisualTreeHelper(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisualTreeHelperStatics
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.UI.Xaml.DependencyObject GetChild(
					global::Windows.UI.Xaml.DependencyObject reference, 
					int childIndex);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		int GetChildrenCount(global::Windows.UI.Xaml.DependencyObject reference);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisualTreeHelper
	{
	}
}

namespace Windows.UI.Xaml.Navigation
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Navigation.INavigationEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigationEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Navigation.INavigationEventArgs
	{
		public NavigationEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigatingCancelEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs
	{
		public NavigatingCancelEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigationFailedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs
	{
		public NavigationFailedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void NavigatedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Navigation.NavigationEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void NavigatingCancelEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigatingCancelEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void NavigationFailedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Navigation.NavigationFailedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationFailedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void NavigationStoppedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Navigation.NavigationEventArgs e);
}

namespace Windows.Web.Http
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.IHttpRequestMessage))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpRequestMessage : global::System.__ComObject, global::Windows.Web.Http.IHttpRequestMessage, global::System.IDisposable, global::Windows.Foundation.IStringable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public HttpRequestMessage(
					global::Windows.Web.Http.HttpMethod method, 
					global::System.Uri uri)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Web_Http__IHttpRequestMessageFactory_Create(
								"Windows.Web.Http.HttpRequestMessage", 
								method, 
								uri
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_Web_Http__IHttpRequestMessageFactory_Create(
					string typeName, 
					global::Windows.Web.Http.HttpMethod method, 
					global::System.Uri uri)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Web.Http.IHttpRequestMessageFactory__Impl.Stubs.Create(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Web.Http.IHttpRequestMessageFactory).TypeHandle
												), 
								method, 
								uri
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public HttpRequestMessage()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Web.Http.HttpRequestMessage");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		public void put_Content(global::Windows.Web.Http.IHttpContent value)
		{
			global::Windows.Web.Http.IHttpRequestMessage__Impl.Stubs.put_Content(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		public global::Windows.Web.Http.Headers.HttpRequestHeaderCollection get_Headers()
		{
			global::Windows.Web.Http.Headers.HttpRequestHeaderCollection __retVal = global::Windows.Web.Http.IHttpRequestMessage__Impl.Stubs.get_Headers(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Properties")]
		public global::System.Collections.Generic.IDictionary<string, object> get_Properties()
		{
			global::System.Collections.Generic.IDictionary<string, object> __retVal = global::Windows.Web.Http.IHttpRequestMessage__Impl.Stubs.get_Properties(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RequestUri")]
		public global::System.Uri get_RequestUri()
		{
			global::System.Uri __retVal = global::Windows.Web.Http.IHttpRequestMessage__Impl.Stubs.get_RequestUri(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public HttpRequestMessage(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.IHttpMethod))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpMethod : global::System.__ComObject, global::Windows.Web.Http.IHttpMethod, global::Windows.Foundation.IStringable
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public HttpMethod(string method)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Web_Http__IHttpMethodFactory_Create(
								"Windows.Web.Http.HttpMethod", 
								method
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_Web_Http__IHttpMethodFactory_Create(
					string typeName, 
					string method)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Web.Http.IHttpMethodFactory__Impl.Stubs.Create(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Web.Http.IHttpMethodFactory).TypeHandle
												), 
								method
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public HttpMethod(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.IHttpResponseMessage))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpResponseMessage : global::System.__ComObject, global::Windows.Web.Http.IHttpResponseMessage, global::System.IDisposable, global::Windows.Foundation.IStringable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public HttpResponseMessage()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Web.Http.HttpResponseMessage");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public global::Windows.Web.Http.IHttpContent get_Content()
		{
			global::Windows.Web.Http.IHttpContent __retVal = global::Windows.Web.Http.IHttpResponseMessage__Impl.Stubs.get_Content(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		public global::Windows.Web.Http.Headers.HttpResponseHeaderCollection get_Headers()
		{
			global::Windows.Web.Http.Headers.HttpResponseHeaderCollection __retVal = global::Windows.Web.Http.IHttpResponseMessage__Impl.Stubs.get_Headers(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ReasonPhrase")]
		public string get_ReasonPhrase()
		{
			string __retVal = global::Windows.Web.Http.IHttpResponseMessage__Impl.Stubs.get_ReasonPhrase(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StatusCode")]
		public global::Windows.Web.Http.HttpStatusCode get_StatusCode()
		{
			global::Windows.Web.Http.HttpStatusCode __retVal = global::Windows.Web.Http.IHttpResponseMessage__Impl.Stubs.get_StatusCode(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Version")]
		public global::Windows.Web.Http.HttpVersion get_Version()
		{
			global::Windows.Web.Http.HttpVersion __retVal = global::Windows.Web.Http.IHttpResponseMessage__Impl.Stubs.get_Version(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public HttpResponseMessage(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.IHttpContent))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpBufferContent : global::System.__ComObject, global::Windows.Web.Http.IHttpContent, global::System.IDisposable, global::Windows.Foundation.IStringable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public HttpBufferContent(
					global::Windows.Storage.Streams.IBuffer content, 
					uint offset, 
					uint count)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Web_Http__IHttpBufferContentFactory_CreateFromBufferWithOffset(
								"Windows.Web.Http.HttpBufferContent", 
								content, 
								offset, 
								count
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_Web_Http__IHttpBufferContentFactory_CreateFromBufferWithOffset(
					string typeName, 
					global::Windows.Storage.Streams.IBuffer content, 
					uint offset, 
					uint count)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Web.Http.IHttpBufferContentFactory__Impl.Stubs.CreateFromBufferWithOffset(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Web.Http.IHttpBufferContentFactory).TypeHandle
												), 
								content, 
								offset, 
								count
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		public global::Windows.Web.Http.Headers.HttpContentHeaderCollection get_Headers()
		{
			global::Windows.Web.Http.Headers.HttpContentHeaderCollection __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.get_Headers(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> ReadAsInputStreamAsync()
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.ReadAsInputStreamAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public HttpBufferContent(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.IHttpContent))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.IDisposable))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Foundation.IStringable))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpStreamContent : global::System.__ComObject, global::Windows.Web.Http.IHttpContent, global::System.IDisposable, global::Windows.Foundation.IStringable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public HttpStreamContent(global::Windows.Storage.Streams.IInputStream content)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Web_Http__IHttpStreamContentFactory_CreateFromInputStream(
								"Windows.Web.Http.HttpStreamContent", 
								content
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr __Factory_Windows_Web_Http__IHttpStreamContentFactory_CreateFromInputStream(
					string typeName, 
					global::Windows.Storage.Streams.IInputStream content)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Web.Http.IHttpStreamContentFactory__Impl.Stubs.CreateFromInputStream(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Web.Http.IHttpStreamContentFactory).TypeHandle
												), 
								content
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		public global::Windows.Web.Http.Headers.HttpContentHeaderCollection get_Headers()
		{
			global::Windows.Web.Http.Headers.HttpContentHeaderCollection __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.get_Headers(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> ReadAsInputStreamAsync()
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.ReadAsInputStreamAsync(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public HttpStreamContent(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpRequestMessageFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr Create(
					global::Windows.Web.Http.HttpMethod method, 
					global::System.Uri uri);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpMethodFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr Create(string method);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpMethod
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpRequestMessage
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		void put_Content(global::Windows.Web.Http.IHttpContent value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		global::Windows.Web.Http.Headers.HttpRequestHeaderCollection get_Headers();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Properties")]
		global::System.Collections.Generic.IDictionary<string, object> get_Properties();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RequestUri")]
		global::System.Uri get_RequestUri();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpContent : global::System.IDisposable
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		global::Windows.Web.Http.Headers.HttpContentHeaderCollection get_Headers();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> ReadAsInputStreamAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpResponseMessage
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		global::Windows.Web.Http.IHttpContent get_Content();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		global::Windows.Web.Http.Headers.HttpResponseHeaderCollection get_Headers();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ReasonPhrase")]
		string get_ReasonPhrase();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StatusCode")]
		global::Windows.Web.Http.HttpStatusCode get_StatusCode();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Version")]
		global::Windows.Web.Http.HttpVersion get_Version();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpBufferContentFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr CreateFromBufferWithOffset(
					global::Windows.Storage.Streams.IBuffer content, 
					uint offset, 
					uint count);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpStreamContentFactory
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::System.IntPtr CreateFromInputStream(global::Windows.Storage.Streams.IInputStream content);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HttpVersion
	{
		None = 0,
		Http10 = 1,
		Http11 = 2,
		Http20 = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HttpStatusCode
	{
		None = 0,
		Continue = 100,
		SwitchingProtocols = 101,
		Processing = 102,
		Ok = 200,
		Created = 201,
		Accepted = 202,
		NonAuthoritativeInformation = 203,
		NoContent = 204,
		ResetContent = 205,
		PartialContent = 206,
		MultiStatus = 207,
		AlreadyReported = 208,
		IMUsed = 226,
		MultipleChoices = 300,
		MovedPermanently = 301,
		Found = 302,
		SeeOther = 303,
		NotModified = 304,
		UseProxy = 305,
		TemporaryRedirect = 307,
		PermanentRedirect = 308,
		BadRequest = 400,
		Unauthorized = 401,
		PaymentRequired = 402,
		Forbidden = 403,
		NotFound = 404,
		MethodNotAllowed = 405,
		NotAcceptable = 406,
		ProxyAuthenticationRequired = 407,
		RequestTimeout = 408,
		Conflict = 409,
		Gone = 410,
		LengthRequired = 411,
		PreconditionFailed = 412,
		RequestEntityTooLarge = 413,
		RequestUriTooLong = 414,
		UnsupportedMediaType = 415,
		RequestedRangeNotSatisfiable = 416,
		ExpectationFailed = 417,
		UnprocessableEntity = 422,
		Locked = 423,
		FailedDependency = 424,
		UpgradeRequired = 426,
		PreconditionRequired = 428,
		TooManyRequests = 429,
		RequestHeaderFieldsTooLarge = 431,
		InternalServerError = 500,
		NotImplemented = 501,
		BadGateway = 502,
		ServiceUnavailable = 503,
		GatewayTimeout = 504,
		HttpVersionNotSupported = 505,
		VariantAlsoNegotiates = 506,
		InsufficientStorage = 507,
		LoopDetected = 508,
		NotExtended = 510,
		NetworkAuthenticationRequired = 511,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct HttpProgress
	{
		public global::Windows.Web.Http.HttpProgressStage Stage;
		public ulong BytesSent;
		public global::System.Nullable<ulong> TotalBytesToSend;
		public ulong BytesReceived;
		public global::System.Nullable<ulong> TotalBytesToReceive;
		public uint Retries;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HttpProgressStage
	{
		None = 0,
		DetectingProxy = 10,
		ResolvingName = 20,
		ConnectingToServer = 30,
		NegotiatingSsl = 40,
		SendingHeaders = 50,
		SendingContent = 60,
		WaitingForResponse = 70,
		ReceivingHeaders = 80,
		ReceivingContent = 90,
	}
}

namespace Windows.Web.Http.Filters
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Filters.IHttpFilter))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpBaseProtocolFilter : global::System.__ComObject, global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter, global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter2, global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter3, global::Windows.Web.Http.Filters.IHttpFilter, global::System.IDisposable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public HttpBaseProtocolFilter()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Web.Http.Filters.HttpBaseProtocolFilter");
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AllowUI")]
		public void put_AllowUI(bool value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.put_AllowUI(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AutomaticDecompression")]
		public void put_AutomaticDecompression(bool value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.put_AutomaticDecompression(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CacheControl")]
		public global::Windows.Web.Http.Filters.HttpCacheControl get_CacheControl()
		{
			global::Windows.Web.Http.Filters.HttpCacheControl __retVal = global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.get_CacheControl(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ClientCertificate")]
		public void put_ClientCertificate(global::Windows.Security.Cryptography.Certificates.Certificate value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.put_ClientCertificate(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ProxyCredential")]
		public void put_ProxyCredential(global::Windows.Security.Credentials.PasswordCredential value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.put_ProxyCredential(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ServerCredential")]
		public void put_ServerCredential(global::Windows.Security.Credentials.PasswordCredential value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.put_ServerCredential(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UseProxy")]
		public void put_UseProxy(bool value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.put_UseProxy(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxVersion")]
		public void put_MaxVersion(global::Windows.Web.Http.HttpVersion value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter2__Impl.Stubs.put_MaxVersion(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CookieUsageBehavior")]
		public void put_CookieUsageBehavior(global::Windows.Web.Http.Filters.HttpCookieUsageBehavior value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter3__Impl.Stubs.put_CookieUsageBehavior(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> SendRequestAsync(global::Windows.Web.Http.HttpRequestMessage request)
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> __retVal = global::Windows.Web.Http.Filters.IHttpFilter__Impl.Stubs.SendRequestAsync(
								this, 
								request
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public HttpBaseProtocolFilter(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Filters.IHttpCacheControl))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpCacheControl : global::System.__ComObject, global::Windows.Web.Http.Filters.IHttpCacheControl
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ReadBehavior")]
		public void put_ReadBehavior(global::Windows.Web.Http.Filters.HttpCacheReadBehavior value)
		{
			global::Windows.Web.Http.Filters.IHttpCacheControl__Impl.Stubs.put_ReadBehavior(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "WriteBehavior")]
		public void put_WriteBehavior(global::Windows.Web.Http.Filters.HttpCacheWriteBehavior value)
		{
			global::Windows.Web.Http.Filters.IHttpCacheControl__Impl.Stubs.put_WriteBehavior(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		public HttpCacheControl(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpBaseProtocolFilter
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AllowUI")]
		void put_AllowUI(bool value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AutomaticDecompression")]
		void put_AutomaticDecompression(bool value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CacheControl")]
		global::Windows.Web.Http.Filters.HttpCacheControl get_CacheControl();

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ClientCertificate")]
		void put_ClientCertificate(global::Windows.Security.Cryptography.Certificates.Certificate value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ProxyCredential")]
		void put_ProxyCredential(global::Windows.Security.Credentials.PasswordCredential value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ServerCredential")]
		void put_ServerCredential(global::Windows.Security.Credentials.PasswordCredential value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UseProxy")]
		void put_UseProxy(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpCacheControl
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ReadBehavior")]
		void put_ReadBehavior(global::Windows.Web.Http.Filters.HttpCacheReadBehavior value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "WriteBehavior")]
		void put_WriteBehavior(global::Windows.Web.Http.Filters.HttpCacheWriteBehavior value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpBaseProtocolFilter2
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxVersion")]
		void put_MaxVersion(global::Windows.Web.Http.HttpVersion value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpBaseProtocolFilter3
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CookieUsageBehavior")]
		void put_CookieUsageBehavior(global::Windows.Web.Http.Filters.HttpCookieUsageBehavior value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpFilter : global::System.IDisposable
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> SendRequestAsync(global::Windows.Web.Http.HttpRequestMessage request);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HttpCacheReadBehavior
	{
		Default = 0,
		MostRecent = 1,
		OnlyFromCache = 2,
		NoCache = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HttpCacheWriteBehavior
	{
		Default = 0,
		NoCache = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HttpCookieUsageBehavior
	{
		Default = 0,
		NoCookies = 1,
	}
}

namespace Windows.Web.Http.Headers
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Headers.IHttpContentHeaderCollection))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpContentHeaderCollection : global::System.__ComObject, global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>, global::System.Collections.Generic.IDictionary<string, string>, global::Windows.Web.Http.Headers.IHttpContentHeaderCollection, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>, global::Windows.Foundation.IStringable
	{
		int global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Count(this);
			}
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.IsReadOnly(this);
			}
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Add(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Clear(this);
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Contains(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.CopyTo(
					global::System.Collections.Generic.KeyValuePair<string, string>[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Remove(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		string global::System.Collections.Generic.IDictionary<string, string>.this[string index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Indexer_Get(
									this, 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		global::System.Collections.Generic.ICollection<string> global::System.Collections.Generic.IDictionary<string, string>.Keys
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Keys(this);
			}
		}

		global::System.Collections.Generic.ICollection<string> global::System.Collections.Generic.IDictionary<string, string>.Values
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Values(this);
			}
		}

		void global::System.Collections.Generic.IDictionary<string, string>.Add(
					string key, 
					string value)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Add(
								this, 
								key, 
								value
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.ContainsKey(string key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.ContainsKey(
								this, 
								key
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.Remove(string key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Remove(
								this, 
								key
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.TryGetValue(
					string key, 
					out string value)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.TryGetValue(
								this, 
								key, 
								out value
							);
		}

		global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>> global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>.GetEnumerator()
		{
			return (global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>).TypeHandle
							);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentLength")]
		public void put_ContentLength(global::System.Nullable<ulong> value)
		{
			global::Windows.Web.Http.Headers.IHttpContentHeaderCollection__Impl.Stubs.put_ContentLength(
								this, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool TryAppendWithoutValidation(
					string name, 
					string value)
		{
			bool __retVal = global::Windows.Web.Http.Headers.IHttpContentHeaderCollection__Impl.Stubs.TryAppendWithoutValidation(
								this, 
								name, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public HttpContentHeaderCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Headers.IHttpRequestHeaderCollection))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpRequestHeaderCollection : global::System.__ComObject, global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>, global::System.Collections.Generic.IDictionary<string, string>, global::Windows.Web.Http.Headers.IHttpRequestHeaderCollection, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>, global::Windows.Foundation.IStringable
	{
		int global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Count(this);
			}
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.IsReadOnly(this);
			}
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Add(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Clear(this);
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Contains(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.CopyTo(
					global::System.Collections.Generic.KeyValuePair<string, string>[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Remove(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		string global::System.Collections.Generic.IDictionary<string, string>.this[string index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Indexer_Get(
									this, 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		global::System.Collections.Generic.ICollection<string> global::System.Collections.Generic.IDictionary<string, string>.Keys
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Keys(this);
			}
		}

		global::System.Collections.Generic.ICollection<string> global::System.Collections.Generic.IDictionary<string, string>.Values
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Values(this);
			}
		}

		void global::System.Collections.Generic.IDictionary<string, string>.Add(
					string key, 
					string value)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Add(
								this, 
								key, 
								value
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.ContainsKey(string key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.ContainsKey(
								this, 
								key
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.Remove(string key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Remove(
								this, 
								key
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.TryGetValue(
					string key, 
					out string value)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.TryGetValue(
								this, 
								key, 
								out value
							);
		}

		global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>> global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>.GetEnumerator()
		{
			return (global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>).TypeHandle
							);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public bool TryAppendWithoutValidation(
					string name, 
					string value)
		{
			bool __retVal = global::Windows.Web.Http.Headers.IHttpRequestHeaderCollection__Impl.Stubs.TryAppendWithoutValidation(
								this, 
								name, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public HttpRequestHeaderCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Headers.IHttpResponseHeaderCollection))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IDictionary<string, string>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.ICollection<string>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpResponseHeaderCollection : global::System.__ComObject, global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>, global::System.Collections.Generic.IDictionary<string, string>, global::Windows.Web.Http.Headers.IHttpResponseHeaderCollection, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>, global::Windows.Foundation.IStringable
	{
		int global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Count(this);
			}
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.IsReadOnly(this);
			}
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Add(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Clear(this);
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Contains(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.CopyTo(
					global::System.Collections.Generic.KeyValuePair<string, string>[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Remove(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		string global::System.Collections.Generic.IDictionary<string, string>.this[string index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Indexer_Get(
									this, 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		global::System.Collections.Generic.ICollection<string> global::System.Collections.Generic.IDictionary<string, string>.Keys
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Keys(this);
			}
		}

		global::System.Collections.Generic.ICollection<string> global::System.Collections.Generic.IDictionary<string, string>.Values
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Values(this);
			}
		}

		void global::System.Collections.Generic.IDictionary<string, string>.Add(
					string key, 
					string value)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Add(
								this, 
								key, 
								value
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.ContainsKey(string key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.ContainsKey(
								this, 
								key
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.Remove(string key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Remove(
								this, 
								key
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.TryGetValue(
					string key, 
					out string value)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.TryGetValue(
								this, 
								key, 
								out value
							);
		}

		global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>> global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>.GetEnumerator()
		{
			return (global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>).TypeHandle
							);
		}

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			return __retVal;
		}

		public HttpResponseHeaderCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpContentHeaderCollection
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentLength")]
		void put_ContentLength(global::System.Nullable<ulong> value);

		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool TryAppendWithoutValidation(
					string name, 
					string value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpRequestHeaderCollection
	{
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		bool TryAppendWithoutValidation(
					string name, 
					string value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpResponseHeaderCollection
	{
	}
}

namespace WinRT
{
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.TrustLevel,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=nu" +
		"ll")]
	public enum TrustLevel__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		BaseTrust = 0,
		PartialTrust = 1,
		FullTrust = 2,
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Mono+mono_thread_cleanup_initialize,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=n" +
		"eutral, PublicKeyToken=null")]
	public unsafe delegate void Mono_mono_thread_cleanup_initialize__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr* threadCleanupRequested, 
				global::System.IntPtr* threadCleanupCompleted);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Mono+mono_thread_cleanup_register,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neu" +
		"tral, PublicKeyToken=null")]
	public unsafe delegate void Mono_mono_thread_cleanup_register__Microsoft_Windows_MixedReality_DotNetWinRT(global::System.IntPtr threadPtr);

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.VftblPtr,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe partial struct VftblPtr__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::System.IntPtr Vftbl;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.DllModule+DllGetActivationFactory,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neu" +
		"tral, PublicKeyToken=null")]
	public unsafe delegate int DllModule_DllGetActivationFactory__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr activatableClassId, 
				global::System.IntPtr* activationFactory);

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Delegate+UnmanagedObject,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, Pub" +
		"licKeyToken=null")]
	public unsafe partial struct Delegate_UnmanagedObject__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::System.IntPtr _vftblPtr;
		public global::System.IntPtr _gchandlePtr;
	}
}

namespace WinRT.Interop
{
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IClosable+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, Publ" +
		"icKeyToken=null")]
	public unsafe partial struct IClosable_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._method0__Microsoft_Windows_MixedReality_DotNetWinRT Close;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IInspectableVftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, Pu" +
		"blicKeyToken=null")]
	public unsafe partial struct IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IUnknownVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IUnknownVftbl;
		public global::WinRT.Interop.IInspectableVftbl__GetIids__Microsoft_Windows_MixedReality_DotNetWinRT GetIids;
		public global::WinRT.Interop.IInspectableVftbl__GetRuntimeClassName__Microsoft_Windows_MixedReality_DotNetWinRT GetRuntimeClassName;
		public global::WinRT.Interop.IInspectableVftbl__GetTrustLevel__Microsoft_Windows_MixedReality_DotNetWinRT GetTrustLevel;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IUnknownVftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, Public" +
		"KeyToken=null")]
	public unsafe partial struct IUnknownVftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IUnknownVftbl__QueryInterface__Microsoft_Windows_MixedReality_DotNetWinRT QueryInterface;
		public global::WinRT.Interop.IUnknownVftbl__AddRef__Microsoft_Windows_MixedReality_DotNetWinRT AddRef;
		public global::WinRT.Interop.IUnknownVftbl__Release__Microsoft_Windows_MixedReality_DotNetWinRT Release;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IUnknownVftbl+_QueryInterface,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture" +
		"=neutral, PublicKeyToken=null")]
	public unsafe delegate int IUnknownVftbl__QueryInterface__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr pThis, 
				global::System.Guid* iid, 
				global::System.IntPtr* vftbl);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IUnknownVftbl+_AddRef,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral" +
		", PublicKeyToken=null")]
	public unsafe delegate uint IUnknownVftbl__AddRef__Microsoft_Windows_MixedReality_DotNetWinRT(global::System.IntPtr pThis);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IUnknownVftbl+_Release,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutra" +
		"l, PublicKeyToken=null")]
	public unsafe delegate uint IUnknownVftbl__Release__Microsoft_Windows_MixedReality_DotNetWinRT(global::System.IntPtr pThis);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IInspectableVftbl+_GetIids,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=ne" +
		"utral, PublicKeyToken=null")]
	public unsafe delegate int IInspectableVftbl__GetIids__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr pThis, 
				uint* iidCount, 
				global::System.IntPtr* iids);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IInspectableVftbl+_GetRuntimeClassName,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0" +
		", Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IInspectableVftbl__GetRuntimeClassName__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr pThis, 
				global::System.IntPtr* className);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IInspectableVftbl+_GetTrustLevel,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Cult" +
		"ure=neutral, PublicKeyToken=null")]
	public unsafe delegate int IInspectableVftbl__GetTrustLevel__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr pThis, 
				global::WinRT.TrustLevel__Microsoft_Windows_MixedReality_DotNetWinRT* trustLevel);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._method0,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyTo" +
		"ken=null")]
	public unsafe delegate int _method0__Microsoft_Windows_MixedReality_DotNetWinRT(global::System.IntPtr thisPtr);

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IAsyncInfo+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, Pub" +
		"licKeyToken=null")]
	public unsafe partial struct IAsyncInfo_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsInt__Microsoft_Windows_MixedReality_DotNetWinRT get_Id;
		public global::WinRT.Interop._get_PropertyAsEnum__Microsoft_Windows_MixedReality_DotNetWinRT get_Status;
		public global::WinRT.Interop._get_PropertyAsInt__Microsoft_Windows_MixedReality_DotNetWinRT get_ErrorCode;
		public global::WinRT.Interop._method0__Microsoft_Windows_MixedReality_DotNetWinRT Cancel;
		public global::WinRT.Interop._method0__Microsoft_Windows_MixedReality_DotNetWinRT Close;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._get_PropertyAsInt,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, P" +
		"ublicKeyToken=null")]
	public unsafe delegate int _get_PropertyAsInt__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				int* value);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._get_PropertyAsEnum,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, " +
		"PublicKeyToken=null")]
	public unsafe delegate int _get_PropertyAsEnum__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				int* value);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._get_PropertyAsObject,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral" +
		", PublicKeyToken=null")]
	public unsafe delegate int _get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr* value);

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._Bool,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken" +
		"=null")]
	public unsafe partial struct _Bool__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public int RawValue;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._get_PropertyAsBool,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, " +
		"PublicKeyToken=null")]
	public unsafe delegate int _get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* value);

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._TimeSpan,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyT" +
		"oken=null")]
	public unsafe partial struct _TimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public long Duration;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._get_PropertyAsUShort,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral" +
		", PublicKeyToken=null")]
	public unsafe delegate int _get_PropertyAsUShort__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				ushort* value);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._get_PropertyAsTimeSpan,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutr" +
		"al, PublicKeyToken=null")]
	public unsafe delegate int _get_PropertyAsTimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::WinRT.Interop._TimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT* value);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._get_PropertyAsUInt,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, " +
		"PublicKeyToken=null")]
	public unsafe delegate int _get_PropertyAsUInt__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				uint* value);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._get_PropertyAsVector3,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutra" +
		"l, PublicKeyToken=null")]
	public unsafe delegate int _get_PropertyAsVector3__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.Numerics.Vector3__System_Numerics_Vectors* value);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._get_PropertyAsQuaternion,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neu" +
		"tral, PublicKeyToken=null")]
	public unsafe delegate int _get_PropertyAsQuaternion__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.Numerics.Quaternion__System_Numerics_Vectors* value);

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.EventRegistrationToken,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutra" +
		"l, PublicKeyToken=null")]
	public unsafe partial struct EventRegistrationToken__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public long Value;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._add_EventHandler,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, Pu" +
		"blicKeyToken=null")]
	public unsafe delegate int _add_EventHandler__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr handler, 
				global::WinRT.Interop.EventRegistrationToken__Microsoft_Windows_MixedReality_DotNetWinRT* token);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._remove_EventHandler,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral," +
		" PublicKeyToken=null")]
	public unsafe delegate int _remove_EventHandler__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::WinRT.Interop.EventRegistrationToken__Microsoft_Windows_MixedReality_DotNetWinRT token);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._get_PropertyAsDouble,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral" +
		", PublicKeyToken=null")]
	public unsafe delegate int _get_PropertyAsDouble__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				double* value);

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._DateTime,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyT" +
		"oken=null")]
	public unsafe partial struct _DateTime__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public long UniversalTime;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._get_PropertyAsDateTime,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutr" +
		"al, PublicKeyToken=null")]
	public unsafe delegate int _get_PropertyAsDateTime__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::WinRT.Interop._DateTime__Microsoft_Windows_MixedReality_DotNetWinRT* value);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._get_PropertyAsGuid,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, " +
		"PublicKeyToken=null")]
	public unsafe delegate int _get_PropertyAsGuid__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.Guid* value);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._get_PropertyAsMatrix4x4,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neut" +
		"ral, PublicKeyToken=null")]
	public unsafe delegate int _get_PropertyAsMatrix4x4__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.Numerics.Matrix4x4__System_Numerics_Vectors* value);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._put_PropertyAsBool,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, " +
		"PublicKeyToken=null")]
	public unsafe delegate int _put_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT value);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._put_PropertyAsEnum,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, " +
		"PublicKeyToken=null")]
	public unsafe delegate int _put_PropertyAsEnum__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				int value);

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._Size,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, PublicKeyToken" +
		"=null")]
	public unsafe partial struct _Size__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public float width;
		public float height;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._get_PropertyAsSize,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, " +
		"PublicKeyToken=null")]
	public unsafe delegate int _get_PropertyAsSize__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::WinRT.Interop._Size__Microsoft_Windows_MixedReality_DotNetWinRT* value);

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IActivationFactoryVftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutr" +
		"al, PublicKeyToken=null")]
	public unsafe partial struct IActivationFactoryVftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop.IActivationFactoryVftbl__ActivateInstance__Microsoft_Windows_MixedReality_DotNetWinRT ActivateInstance;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IActivationFactoryVftbl+_ActivateInstance,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0." +
		"0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate int IActivationFactoryVftbl__ActivateInstance__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr pThis, 
				global::System.IntPtr* instance);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop._put_PropertyAsObject,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral" +
		", PublicKeyToken=null")]
	public unsafe delegate int _put_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr value);

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IReference_Matrix4x4,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral," +
		" PublicKeyToken=null")]
	public unsafe partial struct IReference_Matrix4x4__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsMatrix4x4__Microsoft_Windows_MixedReality_DotNetWinRT get_Value;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IDelegateVftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, Publi" +
		"cKeyToken=null")]
	public unsafe partial struct IDelegateVftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::System.IntPtr QueryInterface;
		public global::System.IntPtr AddRef;
		public global::System.IntPtr Release;
		public global::System.IntPtr Invoke;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IDelegate1_Obj,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, Publi" +
		"cKeyToken=null")]
	public unsafe delegate int IDelegate1_Obj__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr arg1);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IDelegate2_Obj_Obj,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, P" +
		"ublicKeyToken=null")]
	public unsafe delegate int IDelegate2_Obj_Obj__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr arg1, 
				global::System.IntPtr arg2);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IDelegate2_Obj_Enum,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, " +
		"PublicKeyToken=null")]
	public unsafe delegate int IDelegate2_Obj_Enum__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr arg1, 
				int arg2);

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IAsyncOperation+Vftbl,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral" +
		", PublicKeyToken=null")]
	public unsafe partial struct IAsyncOperation_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._put_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT put_Completed;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_Completed;
		public global::System.IntPtr GetResults;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IIteratorOfObject,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, Pu" +
		"blicKeyToken=null")]
	public unsafe partial struct IIteratorOfObject__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_Current;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_HasCurrent;
		public global::WinRT.Interop.IIteratorOfObject__MoveNext__Microsoft_Windows_MixedReality_DotNetWinRT MoveNext;
		public global::WinRT.Interop.IIteratorOfObject__GetMany__Microsoft_Windows_MixedReality_DotNetWinRT GetMany;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IIteratorOfObject+_MoveNext,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=n" +
		"eutral, PublicKeyToken=null")]
	public unsafe delegate int IIteratorOfObject__MoveNext__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* hasCurrent);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IIteratorOfObject+_GetMany,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=ne" +
		"utral, PublicKeyToken=null")]
	public unsafe delegate int IIteratorOfObject__GetMany__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				uint capacity, 
				global::System.IntPtr* values, 
				uint* actual);

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IIterableOfObject,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, Pu" +
		"blicKeyToken=null")]
	public unsafe partial struct IIterableOfObject__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_First;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IVectorViewOfObject,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, " +
		"PublicKeyToken=null")]
	public unsafe partial struct IVectorViewOfObject__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop.IVectorViewOfObject__GetAt__Microsoft_Windows_MixedReality_DotNetWinRT GetAt;
		public global::WinRT.Interop._get_PropertyAsUInt__Microsoft_Windows_MixedReality_DotNetWinRT get_Size;
		public global::WinRT.Interop.IVectorViewOfObject__IndexOf__Microsoft_Windows_MixedReality_DotNetWinRT IndexOf;
		public global::WinRT.Interop.IVectorViewOfObject__GetMany__Microsoft_Windows_MixedReality_DotNetWinRT GetMany;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IVectorViewOfObject+_GetAt,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=ne" +
		"utral, PublicKeyToken=null")]
	public unsafe delegate int IVectorViewOfObject__GetAt__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				uint index, 
				global::System.IntPtr* result);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IVectorViewOfObject+_IndexOf,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=" +
		"neutral, PublicKeyToken=null")]
	public unsafe delegate int IVectorViewOfObject__IndexOf__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr value, 
				uint* index, 
				global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* found);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IVectorViewOfObject+_GetMany,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=" +
		"neutral, PublicKeyToken=null")]
	public unsafe delegate int IVectorViewOfObject__GetMany__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				uint startingIndex, 
				uint capacity, 
				global::System.IntPtr* values, 
				uint* actual);

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IVectorOfObject,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, Publ" +
		"icKeyToken=null")]
	public unsafe partial struct IVectorOfObject__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop.IVectorViewOfObject__GetAt__Microsoft_Windows_MixedReality_DotNetWinRT GetAt;
		public global::WinRT.Interop._get_PropertyAsUInt__Microsoft_Windows_MixedReality_DotNetWinRT get_Size;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT GetView;
		public global::WinRT.Interop.IVectorViewOfObject__IndexOf__Microsoft_Windows_MixedReality_DotNetWinRT IndexOf;
		public global::WinRT.Interop.IVectorOfObject__SetOrInsertAt__Microsoft_Windows_MixedReality_DotNetWinRT SetAt;
		public global::WinRT.Interop.IVectorOfObject__SetOrInsertAt__Microsoft_Windows_MixedReality_DotNetWinRT InsertAt;
		public global::WinRT.Interop.IVectorOfObject__RemoveAt__Microsoft_Windows_MixedReality_DotNetWinRT RemoveAt;
		public global::WinRT.Interop.IVectorOfObject__Append__Microsoft_Windows_MixedReality_DotNetWinRT Append;
		public global::WinRT.Interop._method0__Microsoft_Windows_MixedReality_DotNetWinRT RemoveAtEnd;
		public global::WinRT.Interop._method0__Microsoft_Windows_MixedReality_DotNetWinRT Clear;
		public global::WinRT.Interop.IVectorViewOfObject__GetMany__Microsoft_Windows_MixedReality_DotNetWinRT GetMany;
		public global::WinRT.Interop.IVectorOfObject__ReplaceAll__Microsoft_Windows_MixedReality_DotNetWinRT ReplaceAll;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IVectorOfObject+_SetOrInsertAt,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Cultur" +
		"e=neutral, PublicKeyToken=null")]
	public unsafe delegate int IVectorOfObject__SetOrInsertAt__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				uint index, 
				global::System.IntPtr valuePtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IVectorOfObject+_RemoveAt,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neu" +
		"tral, PublicKeyToken=null")]
	public unsafe delegate int IVectorOfObject__RemoveAt__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				uint index);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IVectorOfObject+_Append,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutr" +
		"al, PublicKeyToken=null")]
	public unsafe delegate int IVectorOfObject__Append__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::System.IntPtr valuePtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IVectorOfObject+_ReplaceAll,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=n" +
		"eutral, PublicKeyToken=null")]
	public unsafe delegate int IVectorOfObject__ReplaceAll__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				uint capacity, 
				global::System.IntPtr* values);

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IIteratorOfEnum,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, Publ" +
		"icKeyToken=null")]
	public unsafe partial struct IIteratorOfEnum__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsEnum__Microsoft_Windows_MixedReality_DotNetWinRT get_Current;
		public global::WinRT.Interop._get_PropertyAsBool__Microsoft_Windows_MixedReality_DotNetWinRT get_HasCurrent;
		public global::WinRT.Interop.IIteratorOfEnum__MoveNext__Microsoft_Windows_MixedReality_DotNetWinRT MoveNext;
		public global::WinRT.Interop.IIteratorOfEnum__GetMany__Microsoft_Windows_MixedReality_DotNetWinRT GetMany;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IIteratorOfEnum+_MoveNext,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neu" +
		"tral, PublicKeyToken=null")]
	public unsafe delegate int IIteratorOfEnum__MoveNext__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* hasCurrent);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IIteratorOfEnum+_GetMany,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neut" +
		"ral, PublicKeyToken=null")]
	public unsafe delegate int IIteratorOfEnum__GetMany__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				uint capacity, 
				int* values, 
				uint* actual);

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IIterableOfEnum,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, Publ" +
		"icKeyToken=null")]
	public unsafe partial struct IIterableOfEnum__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop._get_PropertyAsObject__Microsoft_Windows_MixedReality_DotNetWinRT get_First;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IVectorViewOfEnum,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neutral, Pu" +
		"blicKeyToken=null")]
	public unsafe partial struct IVectorViewOfEnum__Microsoft_Windows_MixedReality_DotNetWinRT
	{
		public global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT IInspectableVftbl;
		public global::WinRT.Interop.IVectorViewOfEnum__GetAt__Microsoft_Windows_MixedReality_DotNetWinRT GetAt;
		public global::WinRT.Interop._get_PropertyAsUInt__Microsoft_Windows_MixedReality_DotNetWinRT get_Size;
		public global::WinRT.Interop.IVectorViewOfEnum__IndexOf__Microsoft_Windows_MixedReality_DotNetWinRT IndexOf;
		public global::WinRT.Interop.IVectorViewOfEnum__GetMany__Microsoft_Windows_MixedReality_DotNetWinRT GetMany;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IVectorViewOfEnum+_GetAt,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=neut" +
		"ral, PublicKeyToken=null")]
	public unsafe delegate int IVectorViewOfEnum__GetAt__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				uint index, 
				int* result);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IVectorViewOfEnum+_IndexOf,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=ne" +
		"utral, PublicKeyToken=null")]
	public unsafe delegate int IVectorViewOfEnum__IndexOf__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				int value, 
				uint* index, 
				global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* found);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRT.Interop.IVectorViewOfEnum+_GetMany,Microsoft.Windows.MixedReality.DotNetWinRT, Version=1.0.0.0, Culture=ne" +
		"utral, PublicKeyToken=null")]
	public unsafe delegate int IVectorViewOfEnum__GetMany__Microsoft_Windows_MixedReality_DotNetWinRT(
				global::System.IntPtr thisPtr, 
				uint startingIndex, 
				uint capacity, 
				int* values, 
				uint* actual);
}

namespace WinRTBridge
{
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.NamedSerializationTransferFunctions,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=nu" +
		"ll")]
	public unsafe partial struct NamedSerializationTransferFunctions__WinRTBridge
	{
		public global::WinRTBridge.Serialization_Align__WinRTBridge alignTransfer;
		public global::WinRTBridge.SerializationNamedTransfer_SByte__WinRTBridge sbyteTransfer;
		public global::WinRTBridge.SerializationNamedTransfer_Byte__WinRTBridge byteTransfer;
		public global::WinRTBridge.SerializationNamedTransfer_Char__WinRTBridge charTransfer;
		public global::WinRTBridge.SerializationNamedTransfer_Int16__WinRTBridge int16Transfer;
		public global::WinRTBridge.SerializationNamedTransfer_UInt16__WinRTBridge uint16Transfer;
		public global::WinRTBridge.SerializationNamedTransfer_Int32__WinRTBridge int32Transfer;
		public global::WinRTBridge.SerializationNamedTransfer_UInt32__WinRTBridge uint32Transfer;
		public global::WinRTBridge.SerializationNamedTransfer_Int64__WinRTBridge int64Transfer;
		public global::WinRTBridge.SerializationNamedTransfer_UInt64__WinRTBridge uint64Transfer;
		public global::WinRTBridge.SerializationNamedTransfer_Single__WinRTBridge singleTransfer;
		public global::WinRTBridge.SerializationNamedTransfer_Double__WinRTBridge doubleTransfer;
		public global::WinRTBridge.SerializationNamedTransfer_Boolean__WinRTBridge booleanTransfer;
		public global::WinRTBridge.SerializationNamedTransfer_String__WinRTBridge stringTransfer;
		public global::WinRTBridge.SerializationNamedTransfer_ByteArray__WinRTBridge byteArrayTransfer;
		public global::WinRTBridge.SerializationNamedTransfer_Object__WinRTBridge unityEngineObjectTransfer;
		public global::WinRTBridge.SerializationNamedTransfer_PPtr__WinRTBridge pptrTransfer;
		public global::WinRTBridge.SerializationNamedTransfer_Ptr__WinRTBridge animationCurveTransfer;
		public global::WinRTBridge.SerializationNamedTransfer_Ptr__WinRTBridge gradientTransfer;
		public global::WinRTBridge.SerializationNamedTransfer_Ptr__WinRTBridge guiStyleTransfer;
		public global::WinRTBridge.SerializationNamedTransfer_Ptr__WinRTBridge rectOffsetTransfer;
		public global::WinRTBridge.SerializationNamedTransfer_Matrix4x4__WinRTBridge matrix4x4Transfer;
		public global::WinRTBridge.SerializationNamedTransfer_Color32__WinRTBridge color32Transfer;
		public global::WinRTBridge.SerializationNamedTransfer_PropertyName__WinRTBridge propertyNameTransfer;
		public global::WinRTBridge.SerializationNamedTransfer_BeginMetaGroup__WinRTBridge beginMetaGroup;
		public global::WinRTBridge.SerializationNamedTransfer_EndMetaGroup__WinRTBridge endMetaGroup;
		public global::WinRTBridge.SerializationNamedTransfer_BeginSequenceGroup__WinRTBridge beginSequenceGroup;
		public global::WinRTBridge.SerializationNamedTransfer_FreeTemporaryMemory__WinRTBridge freeTemporaryMemory;
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.Serialization_Align,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void Serialization_Align__WinRTBridge();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_SByte,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void SerializationNamedTransfer_SByte__WinRTBridge(
				sbyte* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_Byte,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void SerializationNamedTransfer_Byte__WinRTBridge(
				byte* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_Char,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void SerializationNamedTransfer_Char__WinRTBridge(
				char* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_Int16,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void SerializationNamedTransfer_Int16__WinRTBridge(
				short* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_UInt16,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe delegate void SerializationNamedTransfer_UInt16__WinRTBridge(
				ushort* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_Int32,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void SerializationNamedTransfer_Int32__WinRTBridge(
				int* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_UInt32,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe delegate void SerializationNamedTransfer_UInt32__WinRTBridge(
				uint* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_Int64,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void SerializationNamedTransfer_Int64__WinRTBridge(
				long* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_UInt64,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe delegate void SerializationNamedTransfer_UInt64__WinRTBridge(
				ulong* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_Single,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe delegate void SerializationNamedTransfer_Single__WinRTBridge(
				float* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_Double,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe delegate void SerializationNamedTransfer_Double__WinRTBridge(
				double* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_Boolean,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=nul" +
		"l")]
	public unsafe delegate void SerializationNamedTransfer_Boolean__WinRTBridge(
				byte* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_String,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe delegate void SerializationNamedTransfer_String__WinRTBridge(
				char** data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_ByteArray,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=n" +
		"ull")]
	public unsafe delegate void SerializationNamedTransfer_ByteArray__WinRTBridge(
				byte** data, 
				int* arrayLength, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_Object,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe delegate void SerializationNamedTransfer_Object__WinRTBridge(
				long* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_PPtr,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void SerializationNamedTransfer_PPtr__WinRTBridge(
				int* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_Ptr,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void SerializationNamedTransfer_Ptr__WinRTBridge(
				global::System.IntPtr data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_Matrix4x4,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=n" +
		"ull")]
	public unsafe delegate void SerializationNamedTransfer_Matrix4x4__WinRTBridge(
				global::UnityEngine.Matrix4x4__UnityEngine_CoreModule* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_Color32,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=nul" +
		"l")]
	public unsafe delegate void SerializationNamedTransfer_Color32__WinRTBridge(
				global::UnityEngine.Color32__UnityEngine_CoreModule* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_PropertyName,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToke" +
		"n=null")]
	public unsafe delegate void SerializationNamedTransfer_PropertyName__WinRTBridge(
				global::UnityEngine.PropertyName__UnityEngine_CoreModule* data, 
				global::System.IntPtr fieldName);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_BeginMetaGroup,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyTo" +
		"ken=null")]
	public unsafe delegate void SerializationNamedTransfer_BeginMetaGroup__WinRTBridge(global::System.IntPtr name);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_EndMetaGroup,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToke" +
		"n=null")]
	public unsafe delegate void SerializationNamedTransfer_EndMetaGroup__WinRTBridge();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_BeginSequenceGroup,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicK" +
		"eyToken=null")]
	public unsafe delegate void SerializationNamedTransfer_BeginSequenceGroup__WinRTBridge(
				global::System.IntPtr name, 
				int* sequenceLength);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationNamedTransfer_FreeTemporaryMemory,WinRTBridge, Version=0.0.0.0, Culture=neutral, Public" +
		"KeyToken=null")]
	public unsafe delegate void SerializationNamedTransfer_FreeTemporaryMemory__WinRTBridge(void* data);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationWeaverWriter_Write,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void SerializationWeaverWriter_Write__WinRTBridge(
				int ptr, 
				int size);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationWeaverWriter_WritePPtr,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=nu" +
		"ll")]
	public unsafe delegate void SerializationWeaverWriter_WritePPtr__WinRTBridge(int instanceID);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationWeaverWriter_WriteStruct,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=" +
		"null")]
	public unsafe delegate void SerializationWeaverWriter_WriteStruct__WinRTBridge(int ptr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationWeaverReader_Read,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void SerializationWeaverReader_Read__WinRTBridge(
				int ptr, 
				int size);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationWeaverReader_ReadPPtr,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=nul" +
		"l")]
	public unsafe delegate long SerializationWeaverReader_ReadPPtr__WinRTBridge();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationWeaverReader_ReadStruct,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=n" +
		"ull")]
	public unsafe delegate void SerializationWeaverReader_ReadStruct__WinRTBridge(int ptr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationWeaverReader_Align,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void SerializationWeaverReader_Align__WinRTBridge();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationWeaverRemapper_GetScriptingWrapper,WinRTBridge, Version=0.0.0.0, Culture=neutral, Publi" +
		"cKeyToken=null")]
	public unsafe delegate long SerializationWeaverRemapper_GetScriptingWrapper__WinRTBridge(int oldInstanceId);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.SerializationWeaver_TransferPropertyName,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyTok" +
		"en=null")]
	public unsafe delegate void SerializationWeaver_TransferPropertyName__WinRTBridge(global::UnityEngine.PropertyName__UnityEngine_CoreModule* ptr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.Marshalling+MarshalNativePtrIntoFirstFieldDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, Pu" +
		"blicKeyToken=null")]
	public unsafe delegate void Marshalling_MarshalNativePtrIntoFirstFieldDelegate__WinRTBridge(
				long instance, 
				int ptr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.Marshalling+MarshalFirstFieldIntoNativePtrDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, Pu" +
		"blicKeyToken=null")]
	public unsafe delegate int Marshalling_MarshalFirstFieldIntoNativePtrDelegate__WinRTBridge(long instance);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+GetUnityTypeDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate global::System.IntPtr MethodTools_GetUnityTypeDelegate__WinRTBridge(
				int id, 
				global::System.IntPtr methodPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+CreateInstanceDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=nul" +
		"l")]
	public unsafe delegate long MethodTools_CreateInstanceDelegate__WinRTBridge(
				global::System.IntPtr managedHandle, 
				global::System.UIntPtr argument);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+CreateInstanceAndInvokeDefaultConstructorDelegate,WinRTBridge, Version=0.0.0.0, Culture=" +
		"neutral, PublicKeyToken=null")]
	public unsafe delegate long MethodTools_CreateInstanceAndInvokeDefaultConstructorDelegate__WinRTBridge(
				global::System.IntPtr managedHandle, 
				global::System.UIntPtr argument, 
				long* exception);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+InvokeDefaultConstructorDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKe" +
		"yToken=null")]
	public unsafe delegate long MethodTools_InvokeDefaultConstructorDelegate__WinRTBridge(long instance);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+InvokeMethodDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate long MethodTools_InvokeMethodDelegate__WinRTBridge(
				long instance, 
				long* args, 
				global::System.IntPtr methodPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+InvokeMethodTypeDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=n" +
		"ull")]
	public unsafe delegate long MethodTools_InvokeMethodTypeDelegate__WinRTBridge(
				long instance, 
				long arg, 
				global::System.IntPtr unityMethod);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+GetFieldBooleanDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=nu" +
		"ll")]
	public unsafe delegate bool MethodTools_GetFieldBooleanDelegate__WinRTBridge(
				long instance, 
				global::System.IntPtr getterMethodPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+SetFieldBooleanDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=nu" +
		"ll")]
	public unsafe delegate void MethodTools_SetFieldBooleanDelegate__WinRTBridge(
				long instance, 
				bool value, 
				global::System.IntPtr setterMethodPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+GetFieldSingleDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=nul" +
		"l")]
	public unsafe delegate float MethodTools_GetFieldSingleDelegate__WinRTBridge(
				long instance, 
				global::System.IntPtr getterMethodPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+SetFieldSingleDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=nul" +
		"l")]
	public unsafe delegate void MethodTools_SetFieldSingleDelegate__WinRTBridge(
				long instance, 
				float value, 
				global::System.IntPtr setterMethodPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+GetFieldStructDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=nul" +
		"l")]
	public unsafe delegate float MethodTools_GetFieldStructDelegate__WinRTBridge(
				long instance, 
				int index, 
				global::System.IntPtr getterMethodPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+SetFieldStructDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=nul" +
		"l")]
	public unsafe delegate void MethodTools_SetFieldStructDelegate__WinRTBridge(
				long instance, 
				float value, 
				int index, 
				global::System.IntPtr setterMethodPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+GetFieldInt32Delegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe delegate int MethodTools_GetFieldInt32Delegate__WinRTBridge(
				long instance, 
				global::System.IntPtr getterMethodPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+SetFieldInt32Delegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe delegate void MethodTools_SetFieldInt32Delegate__WinRTBridge(
				long instance, 
				int value, 
				global::System.IntPtr setterMethodPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+GetFieldInt64Delegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe delegate long MethodTools_GetFieldInt64Delegate__WinRTBridge(
				long instance, 
				global::System.IntPtr getterMethodPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+SetFieldInt64Delegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe delegate void MethodTools_SetFieldInt64Delegate__WinRTBridge(
				long instance, 
				long value, 
				global::System.IntPtr setterMethodPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+SetFieldObjectDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=nul" +
		"l")]
	public unsafe delegate void MethodTools_SetFieldObjectDelegate__WinRTBridge(
				long instance, 
				long value, 
				global::System.IntPtr setterMethodPtr);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+GetSystemTypeHandleDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToke" +
		"n=null")]
	public unsafe delegate long MethodTools_GetSystemTypeHandleDelegate__WinRTBridge(int typeId);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+GetTypeIdFromObjectDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToke" +
		"n=null")]
	public unsafe delegate int MethodTools_GetTypeIdFromObjectDelegate__WinRTBridge(long instance);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+GatherTypeInformationDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyTo" +
		"ken=null")]
	public unsafe delegate void MethodTools_GatherTypeInformationDelegate__WinRTBridge(
				int typeId, 
				global::System.IntPtr typeInformation);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+CreateObjectFromTypeIdDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyT" +
		"oken=null")]
	public unsafe delegate long MethodTools_CreateObjectFromTypeIdDelegate__WinRTBridge(
				int typeId, 
				out long exception);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+FillIListWithObjectsDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyTok" +
		"en=null")]
	public unsafe delegate void MethodTools_FillIListWithObjectsDelegate__WinRTBridge(
				long listObject, 
				long* scriptingObjects, 
				int objectCount);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+IsDebuggerAttachedDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken" +
		"=null")]
	public unsafe delegate bool MethodTools_IsDebuggerAttachedDelegate__WinRTBridge();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+ThrowNewExceptionDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKeyToken=" +
		"null")]
	public unsafe delegate long MethodTools_ThrowNewExceptionDelegate__WinRTBridge(string message);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+GetBlittableStructSizeOfDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, PublicKe" +
		"yToken=null")]
	public unsafe delegate int MethodTools_GetBlittableStructSizeOfDelegate__WinRTBridge(int instance);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("WinRTBridge.MethodTools+TypeArrayToNativeTypeArrayDelegate,WinRTBridge, Version=0.0.0.0, Culture=neutral, Public" +
		"KeyToken=null")]
	public unsafe delegate void MethodTools_TypeArrayToNativeTypeArrayDelegate__WinRTBridge(
				long array, 
				int* result);
}

[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, CharSet=global::System.Runtime.InteropServices.CharSet.Unicode)]
[global::System.Runtime.InteropServices.McgRedirectedType("Interop+mincore+CPINFOEXW,System.Text.Encoding.CodePages, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5" +
	"f7f11d50a3a")]
public unsafe partial struct Interop_mincore_CPINFOEXW__System_Text_Encoding_CodePages
{
	public uint MaxCharSize;
	public global::Interop_mincore_CPINFOEXW__DefaultChar_e__FixedBuffer__System_Text_Encoding_CodePages DefaultChar;
	public global::Interop_mincore_CPINFOEXW__LeadByte_e__FixedBuffer__System_Text_Encoding_CodePages LeadByte;
	public char UnicodeDefaultChar;
	public uint CodePage;
	public global::Interop_mincore_CPINFOEXW__CodePageName_e__FixedBuffer__System_Text_Encoding_CodePages CodePageName;
}

[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=2)]
[global::System.Runtime.InteropServices.McgRedirectedType("Interop+mincore+CPINFOEXW+<DefaultChar>e__FixedBuffer,System.Text.Encoding.CodePages, Version=4.0.1.0, Culture=n" +
	"eutral, PublicKeyToken=b03f5f7f11d50a3a")]
public unsafe partial struct Interop_mincore_CPINFOEXW__DefaultChar_e__FixedBuffer__System_Text_Encoding_CodePages
{
	[global::System.Runtime.InteropServices.FieldOffset(0)]
	public byte FixedElementField;
}

[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=12)]
[global::System.Runtime.InteropServices.McgRedirectedType("Interop+mincore+CPINFOEXW+<LeadByte>e__FixedBuffer,System.Text.Encoding.CodePages, Version=4.0.1.0, Culture=neut" +
	"ral, PublicKeyToken=b03f5f7f11d50a3a")]
public unsafe partial struct Interop_mincore_CPINFOEXW__LeadByte_e__FixedBuffer__System_Text_Encoding_CodePages
{
	[global::System.Runtime.InteropServices.FieldOffset(0)]
	public byte FixedElementField;
}

[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=260)]
[global::System.Runtime.InteropServices.McgRedirectedType("Interop+mincore+CPINFOEXW+<CodePageName>e__FixedBuffer,System.Text.Encoding.CodePages, Version=4.0.1.0, Culture=" +
	"neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public unsafe partial struct Interop_mincore_CPINFOEXW__CodePageName_e__FixedBuffer__System_Text_Encoding_CodePages
{
	[global::System.Runtime.InteropServices.FieldOffset(0)]
	public byte FixedElementField;
}

[global::System.Runtime.InteropServices.McgRedirectedType("Interop+mincore+GET_FILEEX_INFO_LEVELS,System.IO.FileSystem, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b0" +
	"3f5f7f11d50a3a")]
public enum Interop_mincore_GET_FILEEX_INFO_LEVELS__System_IO_FileSystem : uint
{
	GetFileExInfoStandard = 0x0u,
	GetFileExMaxInfoLevel = 0x1u,
}

[global::System.Runtime.InteropServices.McgRedirectedType("Interop+mincore+WIN32_FILE_ATTRIBUTE_DATA,System.IO.FileSystem, Version=4.0.1.0, Culture=neutral, PublicKeyToken" +
	"=b03f5f7f11d50a3a")]
public unsafe partial struct Interop_mincore_WIN32_FILE_ATTRIBUTE_DATA__System_IO_FileSystem
{
	public int fileAttributes;
	public uint ftCreationTimeLow;
	public uint ftCreationTimeHigh;
	public uint ftLastAccessTimeLow;
	public uint ftLastAccessTimeHigh;
	public uint ftLastWriteTimeLow;
	public uint ftLastWriteTimeHigh;
	public uint fileSizeHigh;
	public uint fileSizeLow;
}

[global::System.Runtime.InteropServices.McgRedirectedType("Interop+mincore+FINDEX_INFO_LEVELS,System.IO.FileSystem, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f" +
	"7f11d50a3a")]
public enum Interop_mincore_FINDEX_INFO_LEVELS__System_IO_FileSystem : uint
{
	FindExInfoStandard = 0x0u,
	FindExInfoBasic = 0x1u,
	FindExInfoMaxInfoLevel = 0x2u,
}

[global::System.Runtime.InteropServices.McgRedirectedType("Interop+mincore+WIN32_FIND_DATA,System.IO.FileSystem, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f7f1" +
	"1d50a3a")]
public unsafe partial struct Interop_mincore_WIN32_FIND_DATA__System_IO_FileSystem
{
	public uint dwFileAttributes;
	public global::Interop_mincore_FILE_TIME__System_IO_FileSystem ftCreationTime;
	public global::Interop_mincore_FILE_TIME__System_IO_FileSystem ftLastAccessTime;
	public global::Interop_mincore_FILE_TIME__System_IO_FileSystem ftLastWriteTime;
	public uint nFileSizeHigh;
	public uint nFileSizeLow;
	public uint dwReserved0;
	public uint dwReserved1;
	public string cFileName;
	public string cAlternateFileName;
}

[global::System.Runtime.InteropServices.McgRedirectedType("Interop+mincore+FILE_TIME,System.IO.FileSystem, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
	"a")]
public unsafe partial struct Interop_mincore_FILE_TIME__System_IO_FileSystem
{
	public uint dwLowDateTime;
	public uint dwHighDateTime;
}

[global::System.Runtime.InteropServices.McgRedirectedType("Interop+mincore+FINDEX_SEARCH_OPS,System.IO.FileSystem, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f7" +
	"f11d50a3a")]
public enum Interop_mincore_FINDEX_SEARCH_OPS__System_IO_FileSystem : uint
{
	FindExSearchNameMatch = 0x0u,
	FindExSearchLimitToDirectories = 0x1u,
	FindExSearchLimitToDevices = 0x2u,
	FindExSearchMaxSearchOp = 0x3u,
}

[global::System.Runtime.InteropServices.McgRedirectedType("Interop+mincore+SECURITY_ATTRIBUTES,System.IO.FileSystem, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5" +
	"f7f11d50a3a")]
public unsafe partial struct Interop_mincore_SECURITY_ATTRIBUTES__System_IO_FileSystem
{
	public uint nLength;
	public global::System.IntPtr lpSecurityDescriptor;
	public global::Interop_BOOL__System_IO_FileSystem bInheritHandle;
}

[global::System.Runtime.InteropServices.McgRedirectedType("Interop+BOOL,System.IO.FileSystem, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public enum Interop_BOOL__System_IO_FileSystem
{
	FALSE = 0,
	TRUE = 1,
}

[global::System.Runtime.InteropServices.McgRedirectedType("Interop+mincore+FILE_INFO_BY_HANDLE_CLASS,System.IO.FileSystem, Version=4.0.1.0, Culture=neutral, PublicKeyToken" +
	"=b03f5f7f11d50a3a")]
public enum Interop_mincore_FILE_INFO_BY_HANDLE_CLASS__System_IO_FileSystem : uint
{
	FileBasicInfo = 0x0u,
	FileStandardInfo = 0x1u,
	FileNameInfo = 0x2u,
	FileRenameInfo = 0x3u,
	FileDispositionInfo = 0x4u,
	FileAllocationInfo = 0x5u,
	FileEndOfFileInfo = 0x6u,
	FileStreamInfo = 0x7u,
	FileCompressionInfo = 0x8u,
	FileAttributeTagInfo = 0x9u,
	FileIdBothDirectoryInfo = 0xAu,
	FileIdBothDirectoryRestartInfo = 0xBu,
	FileIoPriorityHintInfo = 0xCu,
	FileRemoteProtocolInfo = 0xDu,
	FileFullDirectoryInfo = 0xEu,
	FileFullDirectoryRestartInfo = 0xFu,
	FileStorageInfo = 0x10u,
	FileAlignmentInfo = 0x11u,
	FileIdInfo = 0x12u,
	FileIdExtdDirectoryInfo = 0x13u,
	FileIdExtdDirectoryRestartInfo = 0x14u,
	MaximumFileInfoByHandleClass = 0x15u,
}

[global::System.Runtime.InteropServices.McgRedirectedType("Interop+mincore+FILE_STANDARD_INFO,System.IO.FileSystem, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f" +
	"7f11d50a3a")]
public unsafe partial struct Interop_mincore_FILE_STANDARD_INFO__System_IO_FileSystem
{
	public long AllocationSize;
	public long EndOfFile;
	public uint NumberOfLinks;
	public global::Interop_BOOL__System_IO_FileSystem DeletePending;
	public global::Interop_BOOL__System_IO_FileSystem Directory;
}

// Unmanaged Function Pointer - Calling Convention StdCall
[global::System.Runtime.InteropServices.McgRedirectedType("Interop+NativeIoCompletionCallback,System.Threading.Overlapped, Version=4.0.1.0, Culture=neutral, PublicKeyToken" +
	"=b03f5f7f11d50a3a")]
public unsafe delegate void Interop_NativeIoCompletionCallback__System_Threading_Overlapped(
			global::System.IntPtr instance, 
			global::System.IntPtr context, 
			global::System.IntPtr overlapped, 
			uint ioResult, 
			global::System.UIntPtr numberOfBytesTransferred, 
			global::System.IntPtr io);

[global::System.Runtime.InteropServices.McgRedirectedType("Interop+mincore+CREATEFILE2_EXTENDED_PARAMETERS,System.IO.FileSystem, Version=4.0.1.0, Culture=neutral, PublicKe" +
	"yToken=b03f5f7f11d50a3a")]
public unsafe partial struct Interop_mincore_CREATEFILE2_EXTENDED_PARAMETERS__System_IO_FileSystem
{
	public uint dwSize;
	public uint dwFileAttributes;
	public uint dwFileFlags;
	public uint dwSecurityQosFlags;
	public global::System.IntPtr lpSecurityAttributes;
	public global::System.IntPtr hTemplateFile;
}

[global::System.Runtime.InteropServices.McgRedirectedType("EmitParams__WinRTMarshaled,UnityEngine.ParticleSystemModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=nu" +
	"ll")]
public unsafe partial struct EmitParams__WinRTMarshaled__UnityEngine_ParticleSystemModule
{
	public global::UnityEngine.ParticleSystem_Particle__UnityEngine_ParticleSystemModule m_Particle;
	public int m_PositionSet;
	public int m_VelocitySet;
	public int m_AxisOfRotationSet;
	public int m_RotationSet;
	public int m_AngularVelocitySet;
	public int m_StartSizeSet;
	public int m_StartColorSet;
	public int m_RandomSeedSet;
	public int m_StartLifetimeSet;
	public int m_ApplyShapeToPosition;
}

[global::System.Runtime.InteropServices.McgRedirectedType("MinMaxCurve__WinRTMarshaled,UnityEngine.ParticleSystemModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=n" +
	"ull")]
public unsafe partial struct MinMaxCurve__WinRTMarshaled__UnityEngine_ParticleSystemModule
{
	public global::UnityEngine.ParticleSystemCurveMode__UnityEngine_ParticleSystemModule m_Mode;
	public float m_CurveMultiplier;
	public long m_CurveMin;
	public long m_CurveMax;
	public float m_ConstantMin;
	public float m_ConstantMax;
}

[global::System.Runtime.InteropServices.McgRedirectedType("MinMaxGradient__WinRTMarshaled,UnityEngine.ParticleSystemModule, Version=0.0.0.0, Culture=neutral, PublicKeyToke" +
	"n=null")]
public unsafe partial struct MinMaxGradient__WinRTMarshaled__UnityEngine_ParticleSystemModule
{
	public global::UnityEngine.ParticleSystemGradientMode__UnityEngine_ParticleSystemModule m_Mode;
	public long m_GradientMin;
	public long m_GradientMax;
	public global::UnityEngine.Color__UnityEngine_CoreModule m_ColorMin;
	public global::UnityEngine.Color__UnityEngine_CoreModule m_ColorMax;
}

[global::System.Runtime.InteropServices.McgRedirectedType("Burst__WinRTMarshaled,UnityEngine.ParticleSystemModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]
public unsafe partial struct Burst__WinRTMarshaled__UnityEngine_ParticleSystemModule
{
	public float m_Time;
	public global::MinMaxCurve__WinRTMarshaled__UnityEngine_ParticleSystemModule m_Count;
	public int m_RepeatCount;
	public float m_RepeatInterval;
	public float m_InvProbability;
}

