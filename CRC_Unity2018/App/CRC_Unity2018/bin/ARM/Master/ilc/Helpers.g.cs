#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 32-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The '__Interop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 414
// warning CS0414: The private field 'field' is assigned but its value is never used
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace __Interop
{
	internal static partial class Toolbox
	{
	    /// These shared CCW thunk functions can't be put into InternalApis\RH\Include\global::__Interop.McgHelpers.cs due to dependency on EnumeratorToIteratorAdapter or global::Windows.Foundation.Collections.IIterator<T>
	    /// 
	    /// <summary>
	    /// SharedCCW support: Static thunk function for calling methods on IIterator<T>
	    /// </summary>
	    public static object IEnumerableThunk<T>(System.Collections.Generic.IEnumerable<T> enumerable)
	    {
	        return new global::System.Runtime.InteropServices.WindowsRuntime.IIteratorOfT_PrivateCCWAdapter<T>(enumerable.GetEnumerator());
	    }
	}

	#if MCG_WINRT_SUPPORTED

	internal static partial class Toolbox
	{
	    /// These shared CCW thunk functions can't be put into InternalApis\RH\Include\global::__Interop.McgHelpers.cs due to dependency on EnumeratorToIteratorAdapter or global::Windows.Foundation.Collections.IIterator<T>

	    /// <summary>
	    /// SharedCCW support: Static thunk function for calling methods on IIterator<T>
	    /// </summary>
	    public static int IIteratorThunk<T>(Windows.Foundation.Collections.IIterator<T> it, global::System.Runtime.InteropServices.Toolbox.IIterator_Oper oper, ref object item, int len) where T : class
	    {
	        int result = 0;

	        switch (oper)
	        {
	            case global::System.Runtime.InteropServices.Toolbox.IIterator_Oper.get_Current:
	                item = it.get_Current();
	                break;

	            case global::System.Runtime.InteropServices.Toolbox.IIterator_Oper.get_HasCurrent:
	                if (it.get_HasCurrent())
	                {
	                    result = 1;
	                }
	                break;

	            case global::System.Runtime.InteropServices.Toolbox.IIterator_Oper.MoveNext:
	                if (it.MoveNext())
	                {
	                    result = 1;
	                }
	                break;

	            case global::System.Runtime.InteropServices.Toolbox.IIterator_Oper.GetMany:
	                {
	                    T[] array = new T[len];

	                    result = (int)it.GetMany(array);

	                    item = array;
	                }
	                break;

	            default:
	                //Debug.Assert(false, "IIteratorThunk wrong oper");
	                break;
	        }

	        return result;
	    }

	    /// <summary>
	    /// SharedCCW support: Static thunk function for calling methods on IIterator<T>
	    /// </summary>
	    public static global::System.Array IIteratorBlittableThunk<T>(Windows.Foundation.Collections.IIterator<T> it, global::System.Runtime.InteropServices.Toolbox.IIterator_Oper oper, ref T item, ref int len) where T : struct
	    {
	        global::System.Array result = null;

	        switch (oper)
	        {
	            case global::System.Runtime.InteropServices.Toolbox.IIterator_Oper.get_Current:
	                item = it.get_Current();
	                break;

	            case global::System.Runtime.InteropServices.Toolbox.IIterator_Oper.get_HasCurrent:
	                if (it.get_HasCurrent())
	                {
	                    len = 1;
	                }
	                break;

	            case global::System.Runtime.InteropServices.Toolbox.IIterator_Oper.MoveNext:
	                if (it.MoveNext())
	                {
	                    len = 1;
	                }
	                break;

	            case global::System.Runtime.InteropServices.Toolbox.IIterator_Oper.GetMany:
	                {
	                    T[] array = new T[len];

	                    len = (int) it.GetMany(array);

	                    result = array;
	                }
	                break;

	            default:
	                //Debug.Assert(false, "IIteratorThunk wrong oper");
	                break;
	        }

	        return result;
	    }


	    /// <summary>
	    /// SharedCCW support: Static thunk function for calling Invoke method on global::Windows.Foundation.AsyncOperationCompletedHandler<T>
	    /// </summary>
	    public static int AsyncOperationCompletedHandlerThunk<T>(
	        global::Windows.Foundation.AsyncOperationCompletedHandler<T> handler, 
	        global::Windows.Foundation.IAsyncOperation<T> asyncInfo, 
	        global::Windows.Foundation.AsyncStatus asyncStatus
	        )
	    {
	        handler.Invoke(asyncInfo, asyncStatus);

	        return 0;
	    }
	}
	#endif

	#region McgHelpers

	/// <summary>
	/// Helper methods used by MCG. They are typically not safe to be used in System.Private.CoreLib/ProjectK prefast scenarios as
	/// there might be dependencies to System.Private.Interop.dll. Put the safe ones into McgCoreHelpers.cs
	/// </summary>
	internal sealed class McgHelpers
	{
	    /// <summary>
	    /// Failfast for reduced method if the reducer has a bug
	    /// </summary>
	    [global::System.Runtime.CompilerServices.MethodImpl(
	        global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
	    internal static void FailFastForReducedMethod()
	    {
	        // Throwing out a exception so that it is easier to debug (we fail fast now) MCG reducer bugs
	        throw new global::System.InvalidOperationException();
	    }

	#if MCG_WINRT_SUPPORTED
	    internal unsafe static global::System.IntPtr SystemUri2WindowsFoundationUri(global::System.Uri systemUri)
	    {
	        global::System.RuntimeTypeHandle classFactoryTypeHandle = typeof(global::System.Runtime.InteropServices.IUriRuntimeClassFactory).TypeHandle;
	        //[exclusiveto(Windows.Foundation.Uri)]
	        //[uuid(44A9796F-723E-4FDF-A218-033E75B0C084)]
	        //[version(0x06020000)]  
	        //interface IUriRuntimeClassFactory : IInspectable
	        //{  
	        //    HRESULT CreateUri([in] HSTRING uri, [out] [retval] Windows.Foundation.Uri** instance);
	        //    HRESULT CreateWithRelativeUri([in] HSTRING baseUri, [in] HSTRING relativeUri, [out] [retval] Windows.Foundation.Uri** instance);
	        //}
	        const int idx_CreateUri = 6; // 3 methods (IUnknown) + 3 methods (IInspectable) + 0 (the method index in IUriRuntimeClassFactory)

	        global::System.__ComObject uriRuntimeClassFactory = 
	            global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
	                "Windows.Foundation.Uri", 
	                classFactoryTypeHandle
	            );
	        try
	        {
	            string uri = systemUri.OriginalString;
	            global::System.IntPtr instance;
	            fixed (char* pBuffer_uri = uri)
	            {
	                global::System.Runtime.InteropServices.HSTRING unsafe_uri = default(global::System.Runtime.InteropServices.HSTRING);
	                global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_uri;
	                global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_uri, uri, &(hstring_header_uri), &(unsafe_uri));

	                void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
	                                uriRuntimeClassFactory, 
	                                classFactoryTypeHandle
	                            ));

	                global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[idx_CreateUri];
	                int __result =  global::System.Runtime.InteropServices.WindowsRuntime.Intrinsics.StdCall__int__(
	                                    __pTarget, 
	                                    __pThis, 
	                                    unsafe_uri, 
	                                    &instance);

	                global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
	                global::System.GC.KeepAlive(uriRuntimeClassFactory);
	                if (__result < 0)
	                {
	                    throw global::System.Runtime.InteropServices.McgMarshal.GetExceptionForHR(__result, /* isWinRTScenario = */ true);
	                }
	                return instance;
	            }
	        }
	        catch(global::System.ArgumentException ex)
	        {
	            //
	            // Throwing out the same ArgumentException with the same message as Desktop CLR while keeping 
	            // the inner exception thrown from IUriRuntimeClassFactory.CreateUri
	            //
	            throw new global::System.ArgumentException(
	                "The given System.Uri cannot be converted into a Windows.Foundation.Uri. Please see http://go.microsoft.com/fwlink/?LinkID=215849 for details.", 
	                ex
	                );
	        }
	    }

	    internal unsafe static global::System.Uri WindowsFoundationUri2SystemUri(global::System.IntPtr windowsUri)
	    {
	        //[exclusiveto(Windows.Foundation.Uri)]  
	        //[uuid(9E365E57-48B2-4160-956F-C7385120BBFC)]  
	        //[version(0x06020000)]  
	        //interface IUriRuntimeClass : IInspectable
	        //{  
	        //    [propget] HRESULT AbsoluteUri([out] [retval] HSTRING* value);
	        //    [propget] HRESULT DisplayUri([out] [retval] HSTRING* value);
	        //    [propget] HRESULT Domain([out] [retval] HSTRING* value);
	        //    [propget] HRESULT Extension([out] [retval] HSTRING* value);
	        //    [propget] HRESULT Fragment([out] [retval] HSTRING* value);
	        //    [propget] HRESULT Host([out] [retval] HSTRING* value);
	        //    [propget] HRESULT Password([out] [retval] HSTRING* value);
	        //    [propget] HRESULT Path([out] [retval] HSTRING* value);
	        //    [propget] HRESULT Query([out] [retval] HSTRING* value);
	        //    [propget] HRESULT QueryParsed([out] [retval] Windows.Foundation.WwwFormUrlDecoder** ppWwwFormUrlDecoder);  
	        //    [propget] HRESULT RawUri([out] [retval] HSTRING* value);
	        //    [propget] HRESULT SchemeName([out] [retval] HSTRING* value);
	        //    [propget] HRESULT UserName([out] [retval] HSTRING* value);
	        //    [propget] HRESULT Port([out] [retval] INT32* value);
	        //    [propget] HRESULT Suspicious([out] [retval] boolean* value);
	        //    HRESULT Equals([in] Windows.Foundation.Uri* pUri, [out] [retval] boolean* value);
	        //    HRESULT CombineUri([in] HSTRING relativeUri, [out] [retval] Windows.Foundation.Uri** instance);
	        //}  
	        const int idx_get_RawUri = 16; // 3(IUknown) + 3(IInspectable) + 10th method in IUriRuntimeClass
	        global::System.RuntimeTypeHandle defaultInterfaceTypeHandle = typeof(global::System.Runtime.InteropServices.IUriRuntimeClass).TypeHandle;
	        global::System.Runtime.InteropServices.HSTRING unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
	        void* __pThis = (void *)windowsUri;
	        string uri;

	        try
	        {
	            global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[idx_get_RawUri];
	            int __result = global::System.Runtime.InteropServices.WindowsRuntime.Intrinsics.StdCall__int__(
	                __pTarget, 
	                __pThis, 
	                &(unsafe_value__retval)
	            );

	            global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
	            
	            if (__result < 0)
	            {
	                throw global::System.Runtime.InteropServices.McgMarshal.GetExceptionForHR(__result, /* isWinRTScenario = */ true);
	            }
	            uri = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value__retval);
	        } 
	        finally
	        {
	            // Cleanup
	            global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_value__retval.handle);
	        }

	        if (uri == null) return null;
	        return new global::System.Uri(uri);
	    }
	    
	    internal unsafe static global::System.Uri WindowsFoundationUri2SystemUriForUnbox(global::System.__ComObject windowsUri)
	    {
	        global::System.RuntimeTypeHandle defaultInterfaceTypeHandle = typeof(global::System.Runtime.InteropServices.IUriRuntimeClass).TypeHandle;
	        global::System.IntPtr __pThis = global::System.Runtime.InteropServices.McgMarshal.GetInterface(
	            windowsUri, 
	            defaultInterfaceTypeHandle
	        );
	        global::System.Uri uri = WindowsFoundationUri2SystemUri(__pThis);
	        global::System.GC.KeepAlive(windowsUri);
	        return uri;
	    }

	    /// <summary>
	    /// System.Uri to Windows.Foundation.Uri in boxing
	    /// Used in IInspectable based marshalling
	    /// </summary>
	    internal static object BoxSystemUri(object target)
	    {
	        global::System.Uri systemUri = global::System.Runtime.InteropServices.McgMarshal.FastCast<global::System.Uri>(target);

	        // This throws if the uri cannot be created
	        global::System.IntPtr pUri = global::__Interop.McgHelpers.SystemUri2WindowsFoundationUri(systemUri);

	        try
	        {
	            // @TODO - This potentially can be optimized by skipping the RCW creation
	            return global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject_NoUnboxing(
	                pUri, 
	                typeof(global::System.Runtime.InteropServices.__com_IInspectable).TypeHandle
	            ); 
	        }
	        finally
	        {
	            global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(pUri);
	        }
	    }

	    /// <summary>
	    /// Windows.Foundation.Uri to System.Uri in unboxing
	    /// Used in IInspectable based marshalling
	    /// </summary>
	    internal static object UnboxSystemUri(object target)
	    {
	        global::System.__ComObject windowsUri = (global::System.__ComObject) target;
	        return global::__Interop.McgHelpers.WindowsFoundationUri2SystemUriForUnbox(windowsUri);
	    }
	#endif

	    static global::System.Guid IID_IUnknown = new global::System.Guid(0x00000000, 0x0000, 0x0000, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46);

	    /// <summary>
	    /// Given a AddRef-ed pComPtr, return the add refed identity IUnknown and release the existing pComPtr
	    /// </summary>
	    /// <param name="pComPtr"></param>
	    internal static void GetIUnknownForFactoryReturn(ref global::System.IntPtr pComPtr)
	    {
	        global::System.IntPtr pUnk = global::System.Runtime.InteropServices.McgMarshal.ComQueryInterfaceNoThrow(pComPtr, ref IID_IUnknown);
	        global::System.Runtime.InteropServices.McgMarshal.ComRelease(pComPtr);
	        if (pUnk != default(global::System.IntPtr))
	        {
	            pComPtr = pUnk;
	        }
	        else
	        {
	            pComPtr = default(global::System.IntPtr);
	            throw new global::System.InvalidCastException("Failed to cast to IUnknown");
	        }
	    }

	    internal unsafe static int wcslen(char *str)
	    {
	        char* start = str;
	        while (*str != '\0')
	            str++;
	        
	        return (int) (str - start);
	    }

	    /// <summary>
	    /// CoTaskMemAlloc + ZeroMemory
	    /// @TODO - we can probably optimize the zero memory part later
	    /// </summary>
	    internal unsafe static void* CoTaskMemAllocAndZeroMemory(global::System.IntPtr size)
	    {
	        void *ptr = global::System.Runtime.InteropServices.ExternalInterop.CoTaskMemAlloc(size);
	        if (ptr == null)
	            return ptr;

	        byte *pByte = (byte*)ptr;
	        long lSize = size.ToInt64();
	        while (lSize > 0)
	        {
	            lSize--;
	            (*pByte++) = 0;
	        }

	        return ptr;
	    }

	    /// <summary>
	    /// Allocate a buffer with enough size to store the unicode characters saved in source
	    /// Buffer is allocated with CoTaskMemAlloc
	    /// </summary>
	    internal unsafe static void *AllocUnicodeBuffer(string source)
	    {
	        if (source == null)
	            return null;

	        int byteLen = checked((source.Length + 1) * 2);

	        char* pBuf = (char*)global::System.Runtime.InteropServices.ExternalInterop.CoTaskMemAlloc(new global::System.IntPtr(byteLen));
	        if (pBuf == null)
	            throw new global::System.OutOfMemoryException();

	        return pBuf;
	    }

	    /// <summary>
	    /// Copy unicode characters in source into dest, and terminating with null
	    /// </summary>
	    internal unsafe static void CopyUnicodeString(string source, void* _dest)
	    {
	        if (source == null)
	            return;

	        char* dest = (char *)_dest;
	        fixed (char* pSource = source)
	        {
	            int len = source.Length;
	            char* src = pSource;

	            // Copy characters one by one, including the null terminator
	            for (int i = 0; i <= len; ++i)
	            {
	                *(dest++) = *(src++);
	            }
	        }
	    }

	    internal unsafe static ushort* ConvertStringToBSTR(
	            ushort* ptrToFirstCharInBSTR,
	            string strManaged)
	    {
	        if (strManaged == null)
	            return null;

	        if (ptrToFirstCharInBSTR == null)
	        {
	            // If caller don't provided buffer, allocate the buffer and create string using SysAllocStringLen
	            fixed (char* ch = strManaged)
	            {
	                return (ushort*)global::System.Runtime.InteropServices.ExternalInterop.SysAllocStringLen(
	                                    ch,
	                                    (uint)strManaged.Length
	                                );
	            }
	        }
	        else 
	        {
	            // If caller provided a buffer, construct the BSTR manually. 

	            // set length
	            *((int*)ptrToFirstCharInBSTR - 1) = checked(strManaged.Length * 2);

	            // copy characters from the managed string
	            fixed (char* ch = strManaged)
	            {
	                global::System.Runtime.InteropServices.InteropExtensions.Memcpy(
	                    (global::System.IntPtr)ptrToFirstCharInBSTR,
	                    (global::System.IntPtr)ch,
	                    (strManaged.Length + 1) * 2);
	            }

	            return ptrToFirstCharInBSTR;
	        }
	    }

	    internal unsafe static string ConvertBSTRToString(ushort* bstr)
	    {
	        if (bstr == null)
	            return null;
	        return new string((char*)bstr, 0, (int)global::System.Runtime.InteropServices.ExternalInterop.SysStringLen(bstr));
	    }

	    /// <summary>
	    /// Common HRESULT values 
	    /// </summary>
	    internal static class __HResults
	    {
	        internal const int S_OK = unchecked((int)0x00000000);
	        internal const int E_BOUNDS = unchecked((int)0x8000000B);
	        internal const int E_CHANGED_STATE = unchecked((int)0x8000000C);
	        internal const int E_NOTIMPL = unchecked((int)0x80004001);
	        internal const int E_FAIL = unchecked((int)0x80004005);
	        internal const int TYPE_E_TYPEMISMATCH = unchecked((int)0x80028CA0);
	        internal const int DISP_E_OVERFLOW = unchecked((int)0x8002000A);
	    }

	    internal static void AssertAndFailFast(bool condition)
	    {
	        if (condition == false)
	        {
	#if MCG_WINRT_SUPPORTED
	            if (global::System.Diagnostics.Debugger.IsAttached)
	            {
	                global::System.Diagnostics.Debugger.Break();
	            }
	#endif
	            global::System.Environment.FailFast("Assert failed");
	        }
	    }

	    /// <summary>
	    /// Fits the Array that will be passed to native code. Managed Array with length==0 should
	    ///     be marshaled as a valid pointer to the native code. So this helper creates a new fake 
	    ///     Array with 1 default position for zero Length Array. 
	    /// On this way, the fixed (int* pinned_safeHome = safeHome) will store a valid pointer 
	    ///     in the pinned_safeHome.
	    /// </summary>
	    internal static T[] GetArrayForCompat<T>(T[] actual)
	    {
	        if (actual != null)
	        {
	            if (actual.Length == 0)
	            {
	                return new T[1] { default(T) };
	            }
	        }
	        return actual;
	    }


	#if MCG_WINRT_SUPPORTED

	    [global::System.Runtime.CompilerServices.MethodImpl(
	        global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
	    internal static global::System.Collections.IEnumerator GetNonGenericEnumerator(global::System.__ComObject __this,
	        global::System.RuntimeTypeHandle targetInterfaceType)
	    {
	        return global::System.Runtime.InteropServices.McgMarshal.FastCast<global::System.Collections.IEnumerable>(global::System.Runtime.InteropServices.McgMarshal.GetDynamicAdapter(
	            __this,
	            typeof(global::System.Collections.IEnumerable).TypeHandle,
	            targetInterfaceType
	        )).GetEnumerator();
	    }

	    [global::System.Runtime.CompilerServices.MethodImpl(
	        global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
	    internal static object GetGenericEnumerator(global::System.__ComObject __this, 
	        global::System.RuntimeTypeHandle targetInterfaceType)
	    {
	        return global::System.Runtime.InteropServices.McgMarshal.FastCast<global::System.Collections.IEnumerable>(global::System.Runtime.InteropServices.McgMarshal.GetDynamicAdapter(
	            __this,
	            targetInterfaceType
	        )).GetEnumerator();
	    }

	    [global::System.Runtime.CompilerServices.MethodImpl(
	        global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
	    internal static int GetReadOnlyCollectionCount(global::System.__ComObject __this, 
	        global::System.RuntimeTypeHandle instanceTypeIndex)
	    {
	        return global::System.Runtime.InteropServices.McgMarshal.FastCast<global::System.Runtime.InteropServices.WindowsRuntime.IReadOnlyCollectionAdapter>(global::System.Runtime.InteropServices.McgMarshal.GetDynamicAdapter(
	            __this,
	            instanceTypeIndex
	        )).Count;
	    }

	    [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
	    internal static global::System.Exception CheckCopyTo(int count, global::System.Array array, int index)
	    {
	        if (array == null)
	            return new global::System.ArgumentNullException("array");

	        if (index < 0)
	            return new global::System.ArgumentOutOfRangeException("index");

	        // ICollection expects the destination array to be single-dimensional.
	        if (array.Rank != 1)
	            throw new global::System.ArgumentException("Multi-dimensional array not supported");

	        if (array.Length <= index && count > 0)
	            return new global::System.ArgumentException("Index out of array bounds");

	        if (array.Length - index < count)
	            return new global::System.ArgumentException("Insufficient space to copy collection");

	        return null;
	    }

	    public static void CopyMapTo<K,V>(global::System.__ComObject _this, int count, global::System.Collections.Generic.KeyValuePair<K, V>[] array, int arrayIndex)
	    {
	        global::System.Exception error = global::__Interop.McgHelpers.CheckCopyTo(count, array, arrayIndex);

	        if (error != null)
	        {
	            throw error;
	        }

	        global::System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>> iterator = _this as global::System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>;
	        
	        foreach (System.Collections.Generic.KeyValuePair<K, V> mapping in iterator)
	        {
	            array[arrayIndex++] = mapping;
	        }
	    }

	    [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
	    public static bool MapContains<K,V>(global::System.__ComObject _this, global::System.Collections.Generic.KeyValuePair<K, V> item)
	    {
	        global::System.Collections.Generic.IDictionary<K, V> dictionary = _this as global::System.Collections.Generic.IDictionary<K, V>;

	        V value;

	        if (dictionary.TryGetValue(item.Key, out value))
	        {
	            return global::System.Runtime.InteropServices.McgMarshal.ComparerEquals<V>(value, item.Value); 
	        }
	        else
	        {
	            return false;
	        }
	    }
	#endif
	}

	#endregion

	[global::System.Runtime.InteropServices.McgIntrinsics]
	internal unsafe static partial class Intrinsics
	{
		internal static int StdCall__1(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::System.IntPtr AddrOf<T>(T ftn)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static int StdCall__2(
					global::System.IntPtr pfn, 
					void* pthis, 
					uint arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__3(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__4(
					global::System.IntPtr pfn, 
					void* pthis, 
					byte arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__5(
					global::System.IntPtr pfn, 
					void* pthis, 
					uint arg0, 
					uint arg1, 
					void* arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::System.IntPtr VirtualAddrOf<T>(
					object _this, 
					int __targetIndex)
		{
			return default(global::System.IntPtr);
		}

		internal static string HasThisCall__6(
					object __this, 
					global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return default(string);
		}

		internal static int StdCall__7(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					global::System.Type__Impl.UnsafeType arg1, 
					void* arg2, 
					global::System.Runtime.InteropServices.HSTRING arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static object HasThisCall__8(
					object __this, 
					global::System.IntPtr pfn, 
					object arg0, 
					global::System.Type arg1, 
					object arg2, 
					string arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(object);
		}

		internal static int StdCall__9(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__10(
					global::System.IntPtr pfn, 
					void* pthis)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__11(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void HasThisCall__12(
					object __this, 
					global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void HasThisCall__13<TArg0, TArg1>(
					object __this, 
					global::System.IntPtr pfn, 
					TArg0 arg0, 
					TArg1 arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void HasThisCall__14<TArg0>(
					object __this, 
					global::System.IntPtr pfn, 
					TArg0 arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void HasThisCall__15(
					object __this, 
					global::System.IntPtr pfn, 
					string arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static TResult HasThisCall__16<TResult>(
					object __this, 
					global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return default(TResult);
		}

		internal static void HasThisCall__17(
					object __this, 
					global::System.IntPtr pfn, 
					long arg0, 
					int arg1, 
					long arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static long HasThisCall__18(
					object __this, 
					global::System.IntPtr pfn, 
					long arg0, 
					int arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int HasThisCall__19(
					object __this, 
					global::System.IntPtr pfn, 
					long arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long HasThisCall__20(
					object __this, 
					global::System.IntPtr pfn, 
					long arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__21(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__22(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long HasThisCall__23(
					object __this, 
					global::System.IntPtr pfn, 
					int arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static float HasThisCall__24(
					object __this, 
					global::System.IntPtr pfn, 
					long arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static string HasThisCall__25(
					object __this, 
					global::System.IntPtr pfn, 
					long arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(string);
		}

		internal static int HasThisCall__26(
					object __this, 
					global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void HasThisCall__27(
					object __this, 
					global::System.IntPtr pfn, 
					bool arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static int HasThisCall__28(
					object __this, 
					global::System.IntPtr pfn, 
					object arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void HasThisCall__29(
					object __this, 
					global::System.IntPtr pfn, 
					int arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static object HasThisCall__30(
					object __this, 
					global::System.IntPtr pfn, 
					int arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(object);
		}

		internal static int StdCall__31(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					float arg1, 
					global::System.Runtime.InteropServices.HSTRING arg2, 
					global::System.Runtime.InteropServices.HSTRING arg3, 
					long arg4, 
					float arg5, 
					int arg6, 
					int arg7, 
					int arg8, 
					long arg9)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__32(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					long arg1, 
					long arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void HasThisCall__33(
					object __this, 
					global::System.IntPtr pfn, 
					long arg0, 
					long arg1, 
					long arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static int StdCall__34(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					float arg1, 
					float arg2, 
					long arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__35(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					long arg1, 
					long arg2, 
					long arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void HasThisCall__36(
					object __this, 
					global::System.IntPtr pfn, 
					long arg0, 
					long arg1, 
					long arg2, 
					long arg3)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static int StdCall__37(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					long arg1, 
					float arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void HasThisCall__38(
					object __this, 
					global::System.IntPtr pfn, 
					long arg0, 
					long arg1, 
					float arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static int StdCall__39(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					long arg1, 
					long arg2, 
					global::BridgeInterface.ColorWrapper arg3, 
					global::BridgeInterface.ColorWrapper arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__40(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					float arg4, 
					float arg5, 
					float arg6, 
					int arg7, 
					int arg8)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__41(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					long arg1, 
					long arg2, 
					global::BridgeInterface.Vector2Wrapper arg3, 
					global::BridgeInterface.Vector2Wrapper arg4, 
					global::BridgeInterface.Vector4Wrapper arg5, 
					float arg6)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__42(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					int arg1, 
					global::BridgeInterface.RectWrapper arg2, 
					global::BridgeInterface.RectWrapper arg3, 
					float arg4, 
					int arg5, 
					int arg6, 
					sbyte arg7)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__43(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					int arg2, 
					float arg3, 
					float arg4, 
					sbyte arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__44(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					int arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__45(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					long arg1, 
					int arg2, 
					float arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__46(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					long arg1, 
					sbyte arg2, 
					sbyte arg3, 
					sbyte arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__47(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					int arg1, 
					long arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__48(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					long arg1, 
					global::BridgeInterface.ColorWrapper arg2, 
					global::BridgeInterface.ColorWrapper arg3, 
					global::BridgeInterface.ColorWrapper arg4, 
					global::BridgeInterface.ColorWrapper arg5, 
					global::BridgeInterface.ColorWrapper arg6, 
					long arg7, 
					int arg8)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__49(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					long arg1, 
					float arg2, 
					float arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__50(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					global::BridgeInterface.Vector3Wrapper arg1, 
					global::BridgeInterface.Vector3Wrapper arg2, 
					uint arg3, 
					float arg4, 
					global::BridgeInterface.Vector2Wrapper arg5, 
					int arg6)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void HasThisCall__51(
					object __this, 
					global::System.IntPtr pfn, 
					object arg0, 
					int arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void HasThisCall__52(
					object __this, 
					global::System.IntPtr pfn, 
					long arg0, 
					int arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void HasThisCall__53(
					object __this, 
					global::System.IntPtr pfn, 
					long arg0, 
					long arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void HasThisCall__54(
					object __this, 
					global::System.IntPtr pfn, 
					int arg0, 
					long arg1, 
					long arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void HasThisCall__55(
					object __this, 
					global::System.IntPtr pfn, 
					int arg0, 
					long arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static long HasThisCall__56(
					object __this, 
					global::System.IntPtr pfn, 
					long arg0, 
					float arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long HasThisCall__57(
					object __this, 
					global::System.IntPtr pfn, 
					bool arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void HasThisCall__58(
					object __this, 
					global::System.IntPtr pfn, 
					int arg0, 
					int arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static int StdCall__59(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__60(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					long arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool HasThisCall__61(
					object __this, 
					global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static void HasThisCall__62(
					object __this, 
					global::System.IntPtr pfn, 
					int arg0, 
					int arg1, 
					int arg2, 
					int arg3, 
					int arg4, 
					int arg5, 
					int arg6, 
					int arg7)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void HasThisCall__63<TArg0>(
					object __this, 
					global::System.IntPtr pfn, 
					object arg0, 
					TArg0 arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static int StdCall__64(
					global::System.IntPtr pfn, 
					void* pthis, 
					uint arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__65(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__66(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__67(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					int arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__68(
					global::System.IntPtr pfn, 
					void* pthis, 
					sbyte arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__69(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					long arg1, 
					long arg2, 
					float arg3, 
					float arg4, 
					float arg5, 
					float arg6, 
					float arg7, 
					float arg8, 
					float arg9, 
					sbyte arg10)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__70(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					int arg1, 
					sbyte arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__71(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__72(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__73(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					sbyte arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__74(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					sbyte arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__75(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.Runtime.InteropServices.HSTRING arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__76(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.IntPtr arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__77(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::Windows.Foundation.Point arg0, 
					global::Windows.Foundation.Rect arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__78(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::Windows.Foundation.Point arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void HasThisCall__79<TArg0>(
					object __this, 
					global::System.IntPtr pfn, 
					TArg0 arg0, 
					object arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static int StdCall__80(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::Windows.Foundation.Size arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__81(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					sbyte arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__82(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					sbyte arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__83(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.Type__Impl.UnsafeType arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__84(
					global::System.IntPtr pfn, 
					void* pthis, 
					uint arg0, 
					global::System.Type__Impl.UnsafeType arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__85(
					global::System.IntPtr pfn, 
					void* pthis, 
					uint arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__86(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.Type__Impl.UnsafeType arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__87(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__88(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint HasThisCall__89(
					object __this, 
					global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void HasThisCall__90(
					object __this, 
					global::System.IntPtr pfn, 
					uint arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static int StdCall__91(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void HasThisCall__92<TArg0>(
					object __this, 
					global::System.IntPtr pfn, 
					TArg0 arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void HasThisCall__93<TArg0>(
					object __this, 
					global::System.IntPtr pfn, 
					TArg0 arg0, 
					global::Windows.Foundation.AsyncStatus arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static int StdCall__94(
					global::System.IntPtr pfn, 
					void* pthis, 
					ulong arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__95(
					global::System.IntPtr pfn, 
					void* pthis, 
					ulong arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static ulong HasThisCall__96(
					object __this, 
					global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void HasThisCall__97(
					object __this, 
					global::System.IntPtr pfn, 
					ulong arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static TResult HasThisCall__98<TResult>(
					object __this, 
					global::System.IntPtr pfn, 
					ulong arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(TResult);
		}

		internal static int StdCall__99(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					uint arg1, 
					global::Windows.Storage.Streams.InputStreamOptions arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__100(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					int arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__101(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					int arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__102(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::Windows.Storage.StorageItemTypes arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__103(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					uint arg1, 
					uint arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__104(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					uint arg1, 
					global::Windows.Storage.FileProperties.ThumbnailOptions arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__105(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					uint arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__106(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					uint arg1, 
					global::Windows.Storage.FileProperties.ThumbnailOptions arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__107(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					global::Windows.Storage.StorageOpenOptions arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__108(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::Windows.Storage.StorageOpenOptions arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__109(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__110(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					void* arg1, 
					global::System.Runtime.InteropServices.HSTRING arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__111(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					double arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__112(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					uint arg1, 
					void* arg2, 
					uint arg3, 
					void* arg4, 
					void* arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__113(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					int arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__114(
					global::System.IntPtr pfn, 
					void* pthis, 
					uint arg0, 
					void* arg1, 
					uint arg2, 
					void* arg3, 
					uint arg4, 
					void* arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__115(
					global::System.IntPtr pfn, 
					void* pthis, 
					float arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__116(
					global::System.IntPtr pfn, 
					void* pthis, 
					uint arg0, 
					float arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__117(
					global::System.IntPtr pfn, 
					void* pthis, 
					float arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__118(
					global::System.IntPtr pfn, 
					void* pthis, 
					ushort arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__119(
					global::System.IntPtr pfn, 
					void* pthis, 
					long arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__120(
					global::System.IntPtr pfn, 
					void* pthis, 
					double arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__121(
					global::System.IntPtr pfn, 
					void* pthis, 
					uint arg0, 
					double arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__122(
					global::System.IntPtr pfn, 
					void* pthis, 
					double arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__123(
					global::System.IntPtr pfn, 
					void* pthis, 
					sbyte arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__124(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.Exception__Impl.UnsafeType arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__125(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					long arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__126(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					global::System.TimeSpan arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__127(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__128(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::Windows.Graphics.Display.DisplayOrientations arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__129(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					int arg1, 
					global::Windows.System.Threading.WorkItemOptions arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__130(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					int arg1, 
					global::System.Guid arg2, 
					ulong arg3, 
					global::System.Runtime.InteropServices.HSTRING arg4, 
					ulong arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__131(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					int arg1, 
					global::System.Guid arg2, 
					ulong arg3, 
					int arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__132(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					int arg1, 
					int arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__133(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					int arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__134(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					ushort arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__135(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.DateTimeOffset__Impl.UnsafeType arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__136(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					ulong arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__137(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					global::Windows.Web.Http.HttpProgress__Impl.UnsafeType arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__138(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					uint arg1, 
					uint arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__139(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					global::System.IntPtr arg1, 
					uint arg2, 
					global::System.IntPtr arg3, 
					uint arg4, 
					void* arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__140(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.IntPtr arg0, 
					void* arg1, 
					global::System.IntPtr arg2, 
					uint arg3, 
					global::System.IntPtr arg4, 
					uint arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__141(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.IntPtr arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__142(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					void* arg1, 
					int arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__143(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					int arg1, 
					short arg2, 
					void* arg3, 
					global::System.IntPtr arg4, 
					global::System.IntPtr arg5, 
					void* arg6)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__144(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__145(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop arg1, 
					global::System.IntPtr arg2, 
					global::System.IntPtr arg3, 
					global::System.IntPtr arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__146(
					global::System.IntPtr pfn, 
					void* pthis, 
					int arg0, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void StdCall__147(
					global::System.IntPtr pfn, 
					void* pthis, 
					global::System.IntPtr arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static int StdCall__148(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					int arg1, 
					short arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__149(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__150(
					global::System.IntPtr pfn, 
					void* pthis, 
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__151(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__152(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.Guid* arg1, 
					global::System.IntPtr* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint StdCall__153(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__154(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__155(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint* arg1, 
					global::System.IntPtr* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__156(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__157(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__158(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::WinRT.TrustLevel__Microsoft_Windows_MixedReality_DotNetWinRT* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__159(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__160(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__161(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					int* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__162(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__163(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__164(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__165(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					double arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__166(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					double arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__167(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					double arg2, 
					global::WinRT.Interop._TimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__168(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					double arg2, 
					global::WinRT.Interop._TimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__169(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					double arg2, 
					int arg3, 
					global::WinRT.Interop._TimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__170(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					double arg2, 
					int arg3, 
					global::WinRT.Interop._TimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__171(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					ushort* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__172(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::WinRT.Interop._TimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__173(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__174(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__175(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.IntPtr* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__176(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.Numerics.Vector3__System_Numerics_Vectors* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__177(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.Numerics.Quaternion__System_Numerics_Vectors* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__178(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.IntPtr arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__179(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.IntPtr arg2, 
					global::System.IntPtr* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__180(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::WinRT.Interop.EventRegistrationToken__Microsoft_Windows_MixedReality_DotNetWinRT* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__181(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::WinRT.Interop.EventRegistrationToken__Microsoft_Windows_MixedReality_DotNetWinRT arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__182(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::WinRT.Interop.EventRegistrationToken__Microsoft_Windows_MixedReality_DotNetWinRT arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__183(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					double* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__184(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::WinRT.Interop._DateTime__Microsoft_Windows_MixedReality_DotNetWinRT* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__185(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::WinRT.Interop._DateTime__Microsoft_Windows_MixedReality_DotNetWinRT arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__186(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::WinRT.Interop._DateTime__Microsoft_Windows_MixedReality_DotNetWinRT arg1, 
					global::System.IntPtr* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__187(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::WinRT.Interop._TimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__188(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::WinRT.Interop._TimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT arg1, 
					global::System.IntPtr* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__189(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT arg2, 
					void* arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__190(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT arg2, 
					global::Microsoft.Windows.Perception.People.JointPose__Microsoft_Windows_MixedReality_DotNetWinRT* arg3, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__191(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					uint arg2, 
					void* arg3, 
					uint arg4, 
					void* arg5, 
					void* arg6)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__192(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					uint arg2, 
					global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT[] arg3, 
					uint arg4, 
					global::Microsoft.Windows.Perception.People.JointPose__Microsoft_Windows_MixedReality_DotNetWinRT[] arg5, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* arg6)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__193(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT arg1, 
					global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__194(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT arg1, 
					global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT arg2, 
					global::Microsoft.Windows.Perception.People.JointPose__Microsoft_Windows_MixedReality_DotNetWinRT* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__195(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					void* arg2, 
					uint arg3, 
					void* arg4, 
					uint arg5, 
					void* arg6)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__196(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT[] arg2, 
					uint arg3, 
					global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT[] arg4, 
					uint arg5, 
					global::Microsoft.Windows.Perception.People.JointPose__Microsoft_Windows_MixedReality_DotNetWinRT[] arg6)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__197(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__198(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					ushort[] arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__199(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					global::Microsoft.Windows.Perception.People.HandMeshVertex__Microsoft_Windows_MixedReality_DotNetWinRT[] arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__200(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::Microsoft.Windows.Perception.Spatial.SpatialRay__Microsoft_Windows_MixedReality_DotNetWinRT* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__201(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.Guid arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__202(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.Guid arg1, 
					global::System.IntPtr* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__203(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.Guid arg1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__204(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.Guid arg1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors arg2, 
					global::System.IntPtr* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__205(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.Guid arg1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors arg2, 
					global::System.Numerics.Quaternion__System_Numerics_Vectors arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__206(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.Guid arg1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors arg2, 
					global::System.Numerics.Quaternion__System_Numerics_Vectors arg3, 
					global::System.IntPtr* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__207(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.Guid* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__208(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.Numerics.Matrix4x4__System_Numerics_Vectors* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__209(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__210(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors arg2, 
					global::System.IntPtr* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__211(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors arg2, 
					global::System.Numerics.Quaternion__System_Numerics_Vectors arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__212(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors arg2, 
					global::System.Numerics.Quaternion__System_Numerics_Vectors arg3, 
					global::System.IntPtr* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__213(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__214(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__215(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					int arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__216(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					int arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__217(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::WinRT.Interop._Size__Microsoft_Windows_MixedReality_DotNetWinRT* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__218(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::Microsoft.Windows.Graphics.Holographic.HolographicAdapterId__Microsoft_Windows_MixedReality_DotNetWinRT* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__219(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::Microsoft.Windows.Graphics.Holographic.HolographicViewConfigurationKind__Microsoft_Windows_MixedReality_DotNetWinRT arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__220(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::Microsoft.Windows.Graphics.Holographic.HolographicViewConfigurationKind__Microsoft_Windows_MixedReality_DotNetWinRT arg1, 
					global::System.IntPtr* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__221(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors arg2, 
					global::System.Numerics.Quaternion__System_Numerics_Vectors arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__222(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors arg2, 
					global::System.Numerics.Quaternion__System_Numerics_Vectors arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__223(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors arg2, 
					global::System.Numerics.Quaternion__System_Numerics_Vectors arg3, 
					global::System.Numerics.Vector2__System_Numerics_Vectors arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__224(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors arg2, 
					global::System.Numerics.Quaternion__System_Numerics_Vectors arg3, 
					global::System.Numerics.Vector2__System_Numerics_Vectors arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__225(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__226(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.IntPtr arg2, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__227(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.IntPtr arg2, 
					uint arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__228(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.IntPtr arg2, 
					uint arg3, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void StdCall__229(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.IntPtr arg2, 
					uint arg3, 
					global::System.UIntPtr arg4, 
					global::System.IntPtr arg5)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__230(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.IntPtr arg2, 
					uint arg3, 
					global::System.UIntPtr arg4, 
					global::System.IntPtr arg5)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void StdCall__231(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__232(
					global::System.IntPtr pfn, 
					ref uint arg0, 
					ref uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix44_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__233(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					float arg1, 
					float arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix44_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix44_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__234(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					float arg1, 
					float arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix44_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static void StdCall__235(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__236(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					ref float arg1, 
					ref float arg2, 
					ref float arg3, 
					ref float arg4)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static int StdCall__237(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					float arg1, 
					float arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__238(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					float arg1, 
					float arg2, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.DistortionCoordinates_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__239(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__240(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static bool Call__241(
					global::System.IntPtr pfn, 
					ref float arg0, 
					ref ulong arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static int StdCall__242(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__243(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void StdCall__244(
					global::System.IntPtr pfn, 
					void* arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__245(
					global::System.IntPtr pfn, 
					ref int arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void StdCall__246(
					global::System.IntPtr pfn, 
					void* arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETextureType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__247(
					global::System.IntPtr pfn, 
					ref ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETextureType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static bool Call__248(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static int StdCall__249(
					global::System.IntPtr pfn, 
					int arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__250(
					global::System.IntPtr pfn, 
					bool arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static void StdCall__251(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					float arg1, 
					void* arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__252(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					float arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void StdCall__253(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__254(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__255(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__256(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static uint StdCall__257(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceClass__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					void* arg1, 
					uint arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__258(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceClass__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					uint[] arg1, 
					uint arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDeviceActivityLevel__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__259(
					global::System.IntPtr pfn, 
					uint arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDeviceActivityLevel__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDeviceActivityLevel__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__260(
					global::System.IntPtr pfn, 
					uint arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDeviceActivityLevel__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static void StdCall__261(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__262(
					global::System.IntPtr pfn, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static uint StdCall__263(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedControllerRole__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__264(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedControllerRole__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedControllerRole__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__265(
					global::System.IntPtr pfn, 
					uint arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedControllerRole__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedControllerRole__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__266(
					global::System.IntPtr pfn, 
					uint arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedControllerRole__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceClass__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__267(
					global::System.IntPtr pfn, 
					uint arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceClass__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceClass__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__268(
					global::System.IntPtr pfn, 
					uint arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceClass__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static int StdCall__269(
					global::System.IntPtr pfn, 
					uint arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__270(
					global::System.IntPtr pfn, 
					uint arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static int StdCall__271(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__272(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static float StdCall__273(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static float Call__274(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__275(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static ulong StdCall__276(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static ulong Call__277(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__278(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__279(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static uint StdCall__280(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					uint arg2, 
					global::System.IntPtr arg3, 
					uint arg4, 
					void* arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__281(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					uint arg2, 
					global::System.IntPtr arg3, 
					uint arg4, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint StdCall__282(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2, 
					uint arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__283(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::System.Text.StringBuilder arg2, 
					uint arg3, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::System.IntPtr StdCall__284(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::System.IntPtr Call__285(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static bool Call__286(
					global::System.IntPtr pfn, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static int StdCall__287(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					void* arg1, 
					uint arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__288(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					uint arg2, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static global::System.IntPtr StdCall__289(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREventType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::System.IntPtr Call__290(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREventType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HiddenAreaMesh_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__291(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EHiddenAreaMeshType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HiddenAreaMesh_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HiddenAreaMesh_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__292(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EHiddenAreaMeshType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HiddenAreaMesh_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static int StdCall__293(
					global::System.IntPtr pfn, 
					uint arg0, 
					void* arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__294(
					global::System.IntPtr pfn, 
					uint arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRControllerState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static int StdCall__295(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					uint arg1, 
					void* arg2, 
					uint arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__296(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					uint arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRControllerState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					uint arg3, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static void StdCall__297(
					global::System.IntPtr pfn, 
					uint arg0, 
					uint arg1, 
					ushort arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__298(
					global::System.IntPtr pfn, 
					uint arg0, 
					uint arg1, 
					ushort arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static global::System.IntPtr StdCall__299(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRButtonId__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::System.IntPtr Call__300(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRButtonId__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::System.IntPtr StdCall__301(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRControllerAxisType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::System.IntPtr Call__302(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRControllerAxisType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static uint StdCall__303(
					global::System.IntPtr pfn, 
					uint arg0, 
					void* arg1, 
					void* arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__304(
					global::System.IntPtr pfn, 
					uint arg0, 
					string arg1, 
					global::System.Text.StringBuilder arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRFirmwareError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__305(
					global::System.IntPtr pfn, 
					uint arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRFirmwareError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRFirmwareError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__306(
					global::System.IntPtr pfn, 
					uint arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRFirmwareError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static void StdCall__307(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__308(
					global::System.IntPtr pfn, 
					ref int arg0, 
					ref int arg1, 
					ref uint arg2, 
					ref uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__309(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					ref uint arg1, 
					ref uint arg2, 
					ref uint arg3, 
					ref uint arg4)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__310(
					global::System.IntPtr pfn, 
					ref int arg0, 
					ref int arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static global::System.IntPtr StdCall__311(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::System.IntPtr Call__312(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__313(
					global::System.IntPtr pfn, 
					uint arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__314(
					global::System.IntPtr pfn, 
					uint arg0, 
					ref bool arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__315(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__316(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref uint arg2, 
					ref uint arg3, 
					ref uint arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__317(
					global::System.IntPtr pfn, 
					uint arg0, 
					uint arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					void* arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__318(
					global::System.IntPtr pfn, 
					uint arg0, 
					uint arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__319(
					global::System.IntPtr pfn, 
					uint arg0, 
					uint arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					float arg3, 
					float arg4, 
					void* arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__320(
					global::System.IntPtr pfn, 
					uint arg0, 
					uint arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					float arg3, 
					float arg4, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix44_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__321(
					global::System.IntPtr pfn, 
					uint arg0, 
					ref ulong arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__322(
					global::System.IntPtr pfn, 
					ulong arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__323(
					global::System.IntPtr pfn, 
					ulong arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__324(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::System.IntPtr arg2, 
					uint arg3, 
					void* arg4, 
					uint arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__325(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::System.IntPtr arg2, 
					uint arg3, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.CameraVideoStreamFrameHeader_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg4, 
					uint arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__326(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRTextureBounds_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					ref uint arg3, 
					ref uint arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__327(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::System.IntPtr arg2, 
					void* arg3, 
					void* arg4, 
					uint arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__328(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::System.IntPtr arg2, 
					ref global::System.IntPtr arg3, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.CameraVideoStreamFrameHeader_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg4, 
					uint arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__329(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2, 
					void* arg3, 
					uint arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__330(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref uint arg2, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.CameraVideoStreamFrameHeader_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3, 
					uint arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__331(
					global::System.IntPtr pfn, 
					ulong arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__332(
					global::System.IntPtr pfn, 
					ulong arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__333(
					global::System.IntPtr pfn, 
					void* arg0, 
					int arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__334(
					global::System.IntPtr pfn, 
					string arg0, 
					bool arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__335(
					global::System.IntPtr pfn, 
					void* arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__336(
					global::System.IntPtr pfn, 
					string arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static bool Call__337(
					global::System.IntPtr pfn, 
					string arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static uint StdCall__338(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__339(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__340(
					global::System.IntPtr pfn, 
					uint arg0, 
					void* arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__341(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::System.Text.StringBuilder arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__342(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					void* arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__343(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.AppOverrideKeys_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__344(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__345(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__346(
					global::System.IntPtr pfn, 
					uint arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__347(
					global::System.IntPtr pfn, 
					uint arg0, 
					string arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static uint StdCall__348(
					global::System.IntPtr pfn, 
					void* arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__349(
					global::System.IntPtr pfn, 
					string arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::System.IntPtr StdCall__350(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::System.IntPtr Call__351(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static uint StdCall__352(
					global::System.IntPtr pfn, 
					void* arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2, 
					uint arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__353(
					global::System.IntPtr pfn, 
					string arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::System.Text.StringBuilder arg2, 
					uint arg3, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__354(
					global::System.IntPtr pfn, 
					void* arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__355(
					global::System.IntPtr pfn, 
					string arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static ulong StdCall__356(
					global::System.IntPtr pfn, 
					void* arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static ulong Call__357(
					global::System.IntPtr pfn, 
					string arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__358(
					global::System.IntPtr pfn, 
					string arg0, 
					global::System.Text.StringBuilder arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static uint StdCall__359(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__360(
					global::System.IntPtr pfn, 
					string arg0, 
					global::System.Text.StringBuilder arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint StdCall__361(
					global::System.IntPtr pfn, 
					uint arg0, 
					void* arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__362(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::System.Text.StringBuilder arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__363(
					global::System.IntPtr pfn, 
					void* arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__364(
					global::System.IntPtr pfn, 
					global::System.Text.StringBuilder arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationTransitionState__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__365(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationTransitionState__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationTransitionState__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__366(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationTransitionState__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::System.IntPtr StdCall__367(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationTransitionState__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::System.IntPtr Call__368(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationTransitionState__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__369(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__370(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					string arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ChaperoneCalibrationState__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__371(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ChaperoneCalibrationState__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ChaperoneCalibrationState__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__372(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ChaperoneCalibrationState__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static bool Call__373(
					global::System.IntPtr pfn, 
					ref float arg0, 
					ref float arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static bool Call__374(
					global::System.IntPtr pfn, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdQuad_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static void StdCall__375(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__376(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void StdCall__377(
					global::System.IntPtr pfn, 
					void* arg0, 
					int arg1, 
					float arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__378(
					global::System.IntPtr pfn, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					int arg1, 
					float arg2, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void StdCall__379(
					global::System.IntPtr pfn, 
					int arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__380(
					global::System.IntPtr pfn, 
					bool arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static int StdCall__381(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EChaperoneConfigFile__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__382(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EChaperoneConfigFile__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static bool Call__383(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdQuad_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] arg0, 
					ref uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static bool Call__384(
					global::System.IntPtr pfn, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static void StdCall__385(
					global::System.IntPtr pfn, 
					float arg0, 
					float arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__386(
					global::System.IntPtr pfn, 
					float arg0, 
					float arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void StdCall__387(
					global::System.IntPtr pfn, 
					void* arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__388(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdQuad_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__389(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__390(
					global::System.IntPtr pfn, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void StdCall__391(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EChaperoneConfigFile__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__392(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EChaperoneConfigFile__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static bool Call__393(
					global::System.IntPtr pfn, 
					global::System.Text.StringBuilder arg0, 
					ref uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static bool Call__394(
					global::System.IntPtr pfn, 
					string arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static void StdCall__395(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__396(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__397(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__398(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__399(
					global::System.IntPtr pfn, 
					void* arg0, 
					uint arg1, 
					void* arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__400(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] arg0, 
					uint arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__401(
					global::System.IntPtr pfn, 
					uint arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__402(
					global::System.IntPtr pfn, 
					uint arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__403(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					void* arg1, 
					void* arg2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSubmitFlags__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__404(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Texture_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRTextureBounds_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSubmitFlags__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static bool Call__405(
					global::System.IntPtr pfn, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Compositor_FrameTiming__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static uint StdCall__406(
					global::System.IntPtr pfn, 
					void* arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__407(
					global::System.IntPtr pfn, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Compositor_FrameTiming__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static float StdCall__408(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static float Call__409(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void Call__410(
					global::System.IntPtr pfn, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Compositor_CumulativeStats__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void StdCall__411(
					global::System.IntPtr pfn, 
					float arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					float arg4, 
					int arg5)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__412(
					global::System.IntPtr pfn, 
					float arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					float arg4, 
					bool arg5)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__413(
					global::System.IntPtr pfn, 
					int arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__414(
					global::System.IntPtr pfn, 
					bool arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static void StdCall__415(
					global::System.IntPtr pfn, 
					float arg0, 
					int arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__416(
					global::System.IntPtr pfn, 
					float arg0, 
					bool arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__417(
					global::System.IntPtr pfn, 
					void* arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__418(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Texture_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__419(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					global::System.IntPtr arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__420(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					global::System.IntPtr arg1, 
					ref global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static void StdCall__421(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__422(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__423(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					void* arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__424(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					ref uint arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static int StdCall__425(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__426(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static uint Call__427(
					global::System.IntPtr pfn, 
					global::System.Text.StringBuilder arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint StdCall__428(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					void* arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__429(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.Text.StringBuilder arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void StdCall__430(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorTimingMode__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__431(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorTimingMode__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__432(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__433(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__434(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__435(
					global::System.IntPtr pfn, 
					string arg0, 
					ref ulong arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__436(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__437(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					ref ulong arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__438(
					global::System.IntPtr pfn, 
					ulong arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__439(
					global::System.IntPtr pfn, 
					ulong arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static ulong StdCall__440(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static ulong Call__441(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint StdCall__442(
					global::System.IntPtr pfn, 
					ulong arg0, 
					void* arg1, 
					uint arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__443(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::System.Text.StringBuilder arg1, 
					uint arg2, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__444(
					global::System.IntPtr pfn, 
					ulong arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__445(
					global::System.IntPtr pfn, 
					ulong arg0, 
					string arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__446(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::System.IntPtr arg1, 
					uint arg2, 
					void* arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__447(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::System.IntPtr arg1, 
					uint arg2, 
					ref uint arg3, 
					ref uint arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::System.IntPtr StdCall__448(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::System.IntPtr Call__449(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__450(
					global::System.IntPtr pfn, 
					ulong arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__451(
					global::System.IntPtr pfn, 
					ulong arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static uint StdCall__452(
					global::System.IntPtr pfn, 
					ulong arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__453(
					global::System.IntPtr pfn, 
					ulong arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__454(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayFlags__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					int arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__455(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayFlags__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					bool arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__456(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayFlags__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__457(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayFlags__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref bool arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__458(
					global::System.IntPtr pfn, 
					ulong arg0, 
					float arg1, 
					float arg2, 
					float arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__459(
					global::System.IntPtr pfn, 
					ulong arg0, 
					float arg1, 
					float arg2, 
					float arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__460(
					global::System.IntPtr pfn, 
					ulong arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__461(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref float arg1, 
					ref float arg2, 
					ref float arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__462(
					global::System.IntPtr pfn, 
					ulong arg0, 
					float arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__463(
					global::System.IntPtr pfn, 
					ulong arg0, 
					float arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__464(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref float arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__465(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__466(
					global::System.IntPtr pfn, 
					ulong arg0, 
					float arg1, 
					float arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__467(
					global::System.IntPtr pfn, 
					ulong arg0, 
					float arg1, 
					float arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__468(
					global::System.IntPtr pfn, 
					ulong arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__469(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref float arg1, 
					ref float arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__470(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EColorSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__471(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EColorSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__472(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EColorSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__473(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRTextureBounds_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static uint StdCall__474(
					global::System.IntPtr pfn, 
					ulong arg0, 
					void* arg1, 
					uint arg2, 
					void* arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__475(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::System.Text.StringBuilder arg1, 
					uint arg2, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__476(
					global::System.IntPtr pfn, 
					ulong arg0, 
					string arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__477(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayTransformType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__478(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__479(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__480(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__481(
					global::System.IntPtr pfn, 
					ulong arg0, 
					uint arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__482(
					global::System.IntPtr pfn, 
					ulong arg0, 
					uint arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__483(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref uint arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__484(
					global::System.IntPtr pfn, 
					ulong arg0, 
					uint arg1, 
					string arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__485(
					global::System.IntPtr pfn, 
					ulong arg0, 
					void* arg1, 
					void* arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__486(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref uint arg1, 
					global::System.Text.StringBuilder arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__487(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref ulong arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__488(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ulong arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__489(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ulong arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static int StdCall__490(
					global::System.IntPtr pfn, 
					ulong arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__491(
					global::System.IntPtr pfn, 
					ulong arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__492(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__493(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static int StdCall__494(
					global::System.IntPtr pfn, 
					ulong arg0, 
					void* arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__495(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__496(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayInputMethod__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__497(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayInputMethod__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__498(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayInputMethod__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__499(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static int StdCall__500(
					global::System.IntPtr pfn, 
					ulong arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__501(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayIntersectionParams_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayIntersectionResults_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__502(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EOverlayDirection__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					ulong arg1, 
					ulong arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__503(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EOverlayDirection__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					ulong arg1, 
					ulong arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__504(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EOverlayDirection__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					ulong arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__505(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EOverlayDirection__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					ulong arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__506(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDualAnalogWhich__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2, 
					float arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__507(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDualAnalogWhich__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					float arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__508(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDualAnalogWhich__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__509(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDualAnalogWhich__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					ref float arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__510(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Texture_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__511(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::System.IntPtr arg1, 
					uint arg2, 
					uint arg3, 
					uint arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__512(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::System.IntPtr arg1, 
					uint arg2, 
					uint arg3, 
					uint arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__513(
					global::System.IntPtr pfn, 
					ulong arg0, 
					void* arg1, 
					global::System.IntPtr arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5, 
					void* arg6, 
					void* arg7, 
					void* arg8)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__514(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::System.IntPtr arg1, 
					global::System.IntPtr arg2, 
					ref uint arg3, 
					ref uint arg4, 
					ref uint arg5, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETextureType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg6, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EColorSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg7, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRTextureBounds_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg8)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__515(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__516(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__517(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref uint arg1, 
					ref uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__518(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__519(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					ref ulong arg2, 
					ref ulong arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static void Call__520(
					global::System.IntPtr pfn, 
					string arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__521(
					global::System.IntPtr pfn, 
					int arg0, 
					int arg1, 
					void* arg2, 
					uint arg3, 
					void* arg4, 
					int arg5, 
					ulong arg6)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__522(
					global::System.IntPtr pfn, 
					int arg0, 
					int arg1, 
					string arg2, 
					uint arg3, 
					string arg4, 
					bool arg5, 
					ulong arg6)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__523(
					global::System.IntPtr pfn, 
					ulong arg0, 
					int arg1, 
					int arg2, 
					void* arg3, 
					uint arg4, 
					void* arg5, 
					int arg6, 
					ulong arg7)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__524(
					global::System.IntPtr pfn, 
					ulong arg0, 
					int arg1, 
					int arg2, 
					string arg3, 
					uint arg4, 
					string arg5, 
					bool arg6, 
					ulong arg7)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static void StdCall__525(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__526(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void StdCall__527(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdRect2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__528(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdRect2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__529(
					global::System.IntPtr pfn, 
					ulong arg0, 
					void* arg1, 
					uint arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__530(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayIntersectionMaskPrimitive_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					uint arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRMessageOverlayResponse__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__531(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRMessageOverlayResponse__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRMessageOverlayResponse__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__532(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					string arg2, 
					string arg3, 
					string arg4, 
					string arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRMessageOverlayResponse__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__533(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__534(
					global::System.IntPtr pfn, 
					string arg0, 
					ref global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__535(
					global::System.IntPtr pfn, 
					int arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__536(
					global::System.IntPtr pfn, 
					int arg0, 
					ref global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__537(
					global::System.IntPtr pfn, 
					int arg0, 
					global::System.IntPtr arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__538(
					global::System.IntPtr pfn, 
					int arg0, 
					global::System.IntPtr arg1, 
					ref global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__539(
					global::System.IntPtr pfn, 
					int arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__540(
					global::System.IntPtr pfn, 
					int arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static uint StdCall__541(
					global::System.IntPtr pfn, 
					void* arg0, 
					uint arg1, 
					void* arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__542(
					global::System.IntPtr pfn, 
					string arg0, 
					uint arg1, 
					global::System.Text.StringBuilder arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static ulong StdCall__543(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static ulong Call__544(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint StdCall__545(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					void* arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__546(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					global::System.Text.StringBuilder arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__547(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					ulong arg2, 
					void* arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__548(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					ulong arg2, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ControllerMode_State_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ComponentState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static bool Call__549(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRControllerState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ControllerMode_State_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ComponentState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static bool Call__550(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static uint StdCall__551(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					uint arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__552(
					global::System.IntPtr pfn, 
					string arg0, 
					global::System.Text.StringBuilder arg1, 
					uint arg2, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::System.IntPtr StdCall__553(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::System.IntPtr Call__554(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__555(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ulong arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					void* arg3, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationStyle__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg4, 
					void* arg5, 
					void* arg6)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__556(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ulong arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					string arg3, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationStyle__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg4, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.NotificationBitmap_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg5, 
					ref uint arg6)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__557(
					global::System.IntPtr pfn, 
					uint arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__558(
					global::System.IntPtr pfn, 
					uint arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::System.IntPtr StdCall__559(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::System.IntPtr Call__560(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static int StdCall__561(
					global::System.IntPtr pfn, 
					int arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__562(
					global::System.IntPtr pfn, 
					bool arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static void StdCall__563(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					int arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__564(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					bool arg2, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__565(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					int arg2, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void StdCall__566(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					float arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__567(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					float arg2, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__568(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					string arg2, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static bool Call__569(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static int Call__570(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static float StdCall__571(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static float Call__572(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void StdCall__573(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					void* arg2, 
					uint arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__574(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					global::System.Text.StringBuilder arg2, 
					uint arg3, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg4)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__575(
					global::System.IntPtr pfn, 
					string arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__576(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__577(
					global::System.IntPtr pfn, 
					void* arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__578(
					global::System.IntPtr pfn, 
					ref uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					string arg2, 
					string arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__579(
					global::System.IntPtr pfn, 
					void* arg0, 
					int arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__580(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] arg0, 
					int arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__581(
					global::System.IntPtr pfn, 
					uint arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__582(
					global::System.IntPtr pfn, 
					uint arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static uint StdCall__583(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotPropertyFilenames__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2, 
					uint arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__584(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotPropertyFilenames__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::System.Text.StringBuilder arg2, 
					uint arg3, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__585(
					global::System.IntPtr pfn, 
					uint arg0, 
					float arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__586(
					global::System.IntPtr pfn, 
					uint arg0, 
					float arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__587(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__588(
					global::System.IntPtr pfn, 
					ref uint arg0, 
					string arg1, 
					string arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__589(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__590(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					string arg2, 
					string arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static uint Call__591(
					global::System.IntPtr pfn, 
					string arg0, 
					string arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static ulong StdCall__592(
					global::System.IntPtr pfn, 
					void* arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static ulong Call__593(
					global::System.IntPtr pfn, 
					string arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__594(
					global::System.IntPtr pfn, 
					void* arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__595(
					global::System.IntPtr pfn, 
					string arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__596(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__597(
					global::System.IntPtr pfn, 
					string arg0, 
					ref ulong arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__598(
					global::System.IntPtr pfn, 
					void* arg0, 
					uint arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__599(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRActiveActionSet_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] arg0, 
					uint arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__600(
					global::System.IntPtr pfn, 
					ulong arg0, 
					void* arg1, 
					uint arg2, 
					ulong arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__601(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputDigitalActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					uint arg2, 
					ulong arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__602(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputAnalogActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					uint arg2, 
					ulong arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__603(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					float arg2, 
					void* arg3, 
					uint arg4, 
					ulong arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__604(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					float arg2, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputPoseActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg3, 
					uint arg4, 
					ulong arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__605(
					global::System.IntPtr pfn, 
					ulong arg0, 
					void* arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__606(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputSkeletalActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__607(
					global::System.IntPtr pfn, 
					ulong arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__608(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__609(
					global::System.IntPtr pfn, 
					ulong arg0, 
					int[] arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__610(
					global::System.IntPtr pfn, 
					ulong arg0, 
					int arg1, 
					void* arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__611(
					global::System.IntPtr pfn, 
					ulong arg0, 
					int arg1, 
					global::System.Text.StringBuilder arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__612(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTransformSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalReferencePose__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					void* arg3, 
					uint arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__613(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTransformSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalReferencePose__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRBoneTransform_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] arg3, 
					uint arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__614(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTrackingLevel__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__615(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTransformSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalMotionRange__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					void* arg3, 
					uint arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__616(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTransformSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalMotionRange__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRBoneTransform_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] arg3, 
					uint arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__617(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRSkeletalSummaryData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__618(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalMotionRange__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::System.IntPtr arg2, 
					uint arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__619(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalMotionRange__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					global::System.IntPtr arg2, 
					uint arg3, 
					ref uint arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__620(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTransformSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					void* arg3, 
					uint arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__621(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTransformSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRBoneTransform_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] arg3, 
					uint arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__622(
					global::System.IntPtr pfn, 
					ulong arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					float arg4, 
					ulong arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__623(
					global::System.IntPtr pfn, 
					ulong arg0, 
					float arg1, 
					float arg2, 
					float arg3, 
					float arg4, 
					ulong arg5)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__624(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ulong arg1, 
					void* arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__625(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ulong arg1, 
					ulong[] arg2, 
					uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__626(
					global::System.IntPtr pfn, 
					ulong arg0, 
					void* arg1, 
					uint arg2, 
					int arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__627(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::System.Text.StringBuilder arg1, 
					uint arg2, 
					int arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__628(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputOriginInfo_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__629(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ulong arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__630(
					global::System.IntPtr pfn, 
					ulong arg0, 
					ulong arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__631(
					global::System.IntPtr pfn, 
					void* arg0, 
					uint arg1, 
					uint arg2, 
					ulong arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__632(
					global::System.IntPtr pfn, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRActiveActionSet_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR[] arg0, 
					uint arg1, 
					uint arg2, 
					ulong arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__633(
					global::System.IntPtr pfn, 
					void* arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferMode__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					uint arg2, 
					uint arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__634(
					global::System.IntPtr pfn, 
					string arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferMode__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					uint arg2, 
					uint arg3, 
					ref ulong arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__635(
					global::System.IntPtr pfn, 
					ulong arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__636(
					global::System.IntPtr pfn, 
					ulong arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__637(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::System.IntPtr arg1, 
					uint arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__638(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::System.IntPtr arg1, 
					uint arg2, 
					ref uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__639(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::System.IntPtr arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__640(
					global::System.IntPtr pfn, 
					ulong arg0, 
					global::System.IntPtr arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static ulong StdCall__641(
					global::System.IntPtr pfn, 
					ulong arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static ulong Call__642(
					global::System.IntPtr pfn, 
					ulong arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__643(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__644(
					global::System.IntPtr pfn, 
					string arg0, 
					ref uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__645(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__646(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.SpatialAnchorPose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2, 
					ref uint arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__647(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__648(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg1, 
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.SpatialAnchorPose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR StdCall__649(
					global::System.IntPtr pfn, 
					uint arg0, 
					void* arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR Call__650(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::System.Text.StringBuilder arg1, 
					ref uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR);
		}

		internal static void Call__651(
					global::System.IntPtr pfn, 
					global::System.IntPtr* arg0, 
					global::System.IntPtr* arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static int StdCall__652(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__653(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__654(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					int arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__655(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					int arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__656(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					void* arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__657(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					global::System.IntPtr* arg2, 
					uint* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__658(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					global::System.IntPtr* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__659(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					void* arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__660(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1, 
					uint* arg2, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__661(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					uint arg2, 
					void* arg3, 
					void* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__662(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					uint arg2, 
					global::System.IntPtr* arg3, 
					uint* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__663(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__664(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__665(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__666(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__667(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					int* arg2, 
					uint* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__668(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					int* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__669(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__670(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					int arg1, 
					uint* arg2, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* arg3)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__671(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					uint arg2, 
					int* arg3, 
					uint* arg4)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint CCall__672(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::System.IntPtr arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static uint Call__673(
					global::System.IntPtr pfn, 
					uint arg0, 
					global::System.IntPtr arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void CCall__674(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__675(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					uint arg1, 
					uint arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__676(
					global::System.IntPtr pfn, 
					sbyte* arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__677(
					global::System.IntPtr pfn, 
					byte* arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__678(
					global::System.IntPtr pfn, 
					char* arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__679(
					global::System.IntPtr pfn, 
					short* arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__680(
					global::System.IntPtr pfn, 
					ushort* arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__681(
					global::System.IntPtr pfn, 
					int* arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__682(
					global::System.IntPtr pfn, 
					uint* arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__683(
					global::System.IntPtr pfn, 
					long* arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__684(
					global::System.IntPtr pfn, 
					ulong* arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__685(
					global::System.IntPtr pfn, 
					float* arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__686(
					global::System.IntPtr pfn, 
					double* arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__687(
					global::System.IntPtr pfn, 
					char** arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void StdCall__688(
					global::System.IntPtr pfn, 
					void* arg0, 
					void* arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__689(
					global::System.IntPtr pfn, 
					byte** arg0, 
					int* arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void StdCall__690(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__691(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__692(
					global::System.IntPtr pfn, 
					global::UnityEngine.Matrix4x4__UnityEngine_CoreModule* arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__693(
					global::System.IntPtr pfn, 
					global::UnityEngine.Color32__UnityEngine_CoreModule* arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__694(
					global::System.IntPtr pfn, 
					global::UnityEngine.PropertyName__UnityEngine_CoreModule* arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void StdCall__695(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__696(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					int* arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__697(
					global::System.IntPtr pfn, 
					void* arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void StdCall__698(
					global::System.IntPtr pfn, 
					int arg0, 
					int arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__699(
					global::System.IntPtr pfn, 
					int arg0, 
					int arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__700(
					global::System.IntPtr pfn, 
					int arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static long StdCall__701(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long Call__702(global::System.IntPtr pfn)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long StdCall__703(
					global::System.IntPtr pfn, 
					int arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long Call__704(
					global::System.IntPtr pfn, 
					int arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void Call__705(
					global::System.IntPtr pfn, 
					global::UnityEngine.PropertyName__UnityEngine_CoreModule* arg0)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void StdCall__706(
					global::System.IntPtr pfn, 
					long arg0, 
					int arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__707(
					global::System.IntPtr pfn, 
					long arg0, 
					int arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static int StdCall__708(
					global::System.IntPtr pfn, 
					long arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__709(
					global::System.IntPtr pfn, 
					long arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static global::System.IntPtr StdCall__710(
					global::System.IntPtr pfn, 
					int arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static global::System.IntPtr Call__711(
					global::System.IntPtr pfn, 
					int arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(global::System.IntPtr);
		}

		internal static long StdCall__712(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.UIntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long Call__713(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.UIntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long StdCall__714(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.UIntPtr arg1, 
					void* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long Call__715(
					global::System.IntPtr pfn, 
					global::System.IntPtr arg0, 
					global::System.UIntPtr arg1, 
					long* arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long StdCall__716(
					global::System.IntPtr pfn, 
					long arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long Call__717(
					global::System.IntPtr pfn, 
					long arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long StdCall__718(
					global::System.IntPtr pfn, 
					long arg0, 
					void* arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long Call__719(
					global::System.IntPtr pfn, 
					long arg0, 
					long* arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long StdCall__720(
					global::System.IntPtr pfn, 
					long arg0, 
					long arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long Call__721(
					global::System.IntPtr pfn, 
					long arg0, 
					long arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int StdCall__722(
					global::System.IntPtr pfn, 
					long arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static bool Call__723(
					global::System.IntPtr pfn, 
					long arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return default(bool);
		}

		internal static void StdCall__724(
					global::System.IntPtr pfn, 
					long arg0, 
					int arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__725(
					global::System.IntPtr pfn, 
					long arg0, 
					bool arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static float StdCall__726(
					global::System.IntPtr pfn, 
					long arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static float Call__727(
					global::System.IntPtr pfn, 
					long arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void StdCall__728(
					global::System.IntPtr pfn, 
					long arg0, 
					float arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__729(
					global::System.IntPtr pfn, 
					long arg0, 
					float arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static float StdCall__730(
					global::System.IntPtr pfn, 
					long arg0, 
					int arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static float Call__731(
					global::System.IntPtr pfn, 
					long arg0, 
					int arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void StdCall__732(
					global::System.IntPtr pfn, 
					long arg0, 
					float arg1, 
					int arg2, 
					global::System.IntPtr arg3)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__733(
					global::System.IntPtr pfn, 
					long arg0, 
					float arg1, 
					int arg2, 
					global::System.IntPtr arg3)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static int Call__734(
					global::System.IntPtr pfn, 
					long arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void Call__735(
					global::System.IntPtr pfn, 
					long arg0, 
					int arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static long StdCall__736(
					global::System.IntPtr pfn, 
					long arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long Call__737(
					global::System.IntPtr pfn, 
					long arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void StdCall__738(
					global::System.IntPtr pfn, 
					long arg0, 
					long arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__739(
					global::System.IntPtr pfn, 
					long arg0, 
					long arg1, 
					global::System.IntPtr arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void StdCall__740(
					global::System.IntPtr pfn, 
					int arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__741(
					global::System.IntPtr pfn, 
					int arg0, 
					global::System.IntPtr arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static long StdCall__742(
					global::System.IntPtr pfn, 
					int arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long Call__743(
					global::System.IntPtr pfn, 
					int arg0, 
					out long arg1)
		{
			arg1 = 0;
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void StdCall__744(
					global::System.IntPtr pfn, 
					long arg0, 
					void* arg1, 
					int arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__745(
					global::System.IntPtr pfn, 
					long arg0, 
					long* arg1, 
					int arg2)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static long StdCall__746(
					global::System.IntPtr pfn, 
					void* arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static long Call__747(
					global::System.IntPtr pfn, 
					string arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static int Call__748(
					global::System.IntPtr pfn, 
					int arg0)
		{
			// This method is implemented elsewhere in the toolchain
			return 0;
		}

		internal static void StdCall__749(
					global::System.IntPtr pfn, 
					long arg0, 
					void* arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}

		internal static void Call__750(
					global::System.IntPtr pfn, 
					long arg0, 
					int* arg1)
		{
			// This method is implemented elsewhere in the toolchain
		}
	}

	[global::System.Runtime.InteropServices.McgIntrinsics]
	internal unsafe static partial class AddrOfIntrinsics
	{
		public delegate int AddrOfTarget0(
					global::System.IntPtr a0, 
					void* a1, 
					void* a2);

		public delegate int AddrOfTarget1(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					global::System.IntPtr a2);

		public delegate int AddrOfTarget2(
					global::System.IntPtr a0, 
					global::System.IntPtr a1);

		public delegate int AddrOfTarget3(
					global::System.IntPtr a0, 
					global::System.Runtime.InteropServices.HSTRING* a1);

		public delegate int AddrOfTarget4(
					global::System.IntPtr a0, 
					void* a1, 
					global::System.Type__Impl.UnsafeType a2, 
					void* a3, 
					global::System.Runtime.InteropServices.HSTRING a4, 
					void** a5);

		public delegate int AddrOfTarget5(global::System.IntPtr a0);

		public delegate int AddrOfTarget6(
					global::System.IntPtr a0, 
					void* a1);

		public delegate int AddrOfTarget7(
					global::System.IntPtr a0, 
					global::System.Runtime.InteropServices.HSTRING a1);

		public delegate int AddrOfTarget8(
					global::System.IntPtr a0, 
					void** a1);

		public delegate int AddrOfTarget9(
					global::System.IntPtr a0, 
					long a1, 
					int a2, 
					long a3);

		public delegate int AddrOfTarget10(
					global::System.IntPtr a0, 
					long a1, 
					int a2, 
					long* a3);

		public delegate int AddrOfTarget11(
					global::System.IntPtr a0, 
					long a1, 
					int a2, 
					global::System.Runtime.InteropServices.HSTRING a3);

		public delegate int AddrOfTarget12(
					global::System.IntPtr a0, 
					long a1, 
					int a2, 
					global::System.Runtime.InteropServices.HSTRING* a3);

		public delegate int AddrOfTarget13(
					global::System.IntPtr a0, 
					long a1, 
					int a2, 
					int a3);

		public delegate int AddrOfTarget14(
					global::System.IntPtr a0, 
					long a1, 
					int a2, 
					int* a3);

		public delegate int AddrOfTarget15(
					global::System.IntPtr a0, 
					long a1, 
					int* a2);

		public delegate int AddrOfTarget16(
					global::System.IntPtr a0, 
					long a1, 
					void** a2);

		public delegate int AddrOfTarget17(
					global::System.IntPtr a0, 
					long a1, 
					long* a2);

		public delegate int AddrOfTarget18(
					global::System.IntPtr a0, 
					long a1);

		public delegate int AddrOfTarget19(
					global::System.IntPtr a0, 
					long a1, 
					global::System.Runtime.InteropServices.HSTRING a2);

		public delegate int AddrOfTarget20(
					global::System.IntPtr a0, 
					int a1, 
					global::System.Runtime.InteropServices.HSTRING a2);

		public delegate int AddrOfTarget21(
					global::System.IntPtr a0, 
					long a1, 
					global::BridgeInterface.ExceptionDescription__Impl.UnsafeType* a2);

		public delegate int AddrOfTarget22(
					global::System.IntPtr a0, 
					int a1, 
					long* a2);

		public delegate int AddrOfTarget23(
					global::System.IntPtr a0, 
					long a1, 
					sbyte* a2);

		public delegate int AddrOfTarget24(
					global::System.IntPtr a0, 
					long a1, 
					float* a2);

		public delegate int AddrOfTarget25(
					global::System.IntPtr a0, 
					long a1, 
					double* a2);

		public delegate int AddrOfTarget26(
					global::System.IntPtr a0, 
					long a1, 
					global::System.Runtime.InteropServices.HSTRING* a2);

		public delegate int AddrOfTarget27(
					global::System.IntPtr a0, 
					int* a1);

		public delegate int AddrOfTarget28(
					global::System.IntPtr a0, 
					long a1, 
					int a2, 
					int a3, 
					int a4, 
					int a5);

		public delegate int AddrOfTarget29(
					global::System.IntPtr a0, 
					sbyte a1);

		public delegate int AddrOfTarget30(
					global::System.IntPtr a0, 
					void* a1, 
					int* a2);

		public delegate int AddrOfTarget31(
					global::System.IntPtr a0, 
					int a1);

		public delegate int AddrOfTarget32(
					global::System.IntPtr a0, 
					int a1, 
					void** a2);

		public delegate int AddrOfTarget33(
					global::System.IntPtr a0, 
					long a1, 
					int* a2, 
					int* a3, 
					int* a4);

		public delegate int AddrOfTarget34(
					global::System.IntPtr a0, 
					long a1, 
					float a2, 
					global::System.Runtime.InteropServices.HSTRING a3, 
					global::System.Runtime.InteropServices.HSTRING a4, 
					long a5, 
					float a6, 
					int a7, 
					int a8, 
					int a9, 
					long a10);

		public delegate int AddrOfTarget35(
					global::System.IntPtr a0, 
					long a1, 
					long a2, 
					long a3);

		public delegate int AddrOfTarget36(
					global::System.IntPtr a0, 
					long a1, 
					float a2, 
					float a3, 
					long a4);

		public delegate int AddrOfTarget37(
					global::System.IntPtr a0, 
					long a1, 
					long a2, 
					long a3, 
					long a4);

		public delegate int AddrOfTarget38(
					global::System.IntPtr a0, 
					long a1, 
					long a2, 
					float a3);

		public delegate int AddrOfTarget39(
					global::System.IntPtr a0, 
					long a1, 
					long a2, 
					long a3, 
					global::BridgeInterface.ColorWrapper a4, 
					global::BridgeInterface.ColorWrapper a5);

		public delegate int AddrOfTarget40(
					global::System.IntPtr a0, 
					long a1, 
					float a2, 
					float a3, 
					float a4, 
					float a5, 
					float a6, 
					float a7, 
					int a8, 
					int a9);

		public delegate int AddrOfTarget41(
					global::System.IntPtr a0, 
					long a1, 
					long a2, 
					long a3, 
					global::BridgeInterface.Vector2Wrapper a4, 
					global::BridgeInterface.Vector2Wrapper a5, 
					global::BridgeInterface.Vector4Wrapper a6, 
					float a7);

		public delegate int AddrOfTarget42(
					global::System.IntPtr a0, 
					long a1, 
					int a2, 
					global::BridgeInterface.RectWrapper a3, 
					global::BridgeInterface.RectWrapper a4, 
					float a5, 
					int a6, 
					int a7, 
					sbyte a8);

		public delegate int AddrOfTarget43(
					global::System.IntPtr a0, 
					long a1, 
					global::System.Runtime.InteropServices.HSTRING a2, 
					int a3, 
					float a4, 
					float a5, 
					sbyte a6);

		public delegate int AddrOfTarget44(
					global::System.IntPtr a0, 
					long a1, 
					int a2, 
					uint a3);

		public delegate int AddrOfTarget45(
					global::System.IntPtr a0, 
					long a1, 
					long a2, 
					global::BridgeInterface.ColorWrapper a3, 
					global::BridgeInterface.ColorWrapper a4, 
					global::BridgeInterface.ColorWrapper a5, 
					global::BridgeInterface.ColorWrapper a6, 
					global::BridgeInterface.ColorWrapper a7, 
					long a8, 
					int a9);

		public delegate int AddrOfTarget46(
					global::System.IntPtr a0, 
					long a1, 
					long a2, 
					float a3, 
					float a4);

		public delegate int AddrOfTarget47(
					global::System.IntPtr a0, 
					long a1, 
					global::BridgeInterface.Vector3Wrapper a2, 
					global::BridgeInterface.Vector3Wrapper a3, 
					uint a4, 
					float a5, 
					global::BridgeInterface.Vector2Wrapper a6, 
					int a7);

		public delegate int AddrOfTarget48(
					global::System.IntPtr a0, 
					void* a1, 
					int a2);

		public delegate int AddrOfTarget49(
					global::System.IntPtr a0, 
					long a1, 
					int a2);

		public delegate int AddrOfTarget50(
					global::System.IntPtr a0, 
					void* a1, 
					void* a2, 
					void* a3, 
					void* a4, 
					void* a5, 
					void* a6, 
					void* a7, 
					void* a8, 
					void* a9, 
					void* a10, 
					void* a11, 
					void* a12, 
					void* a13, 
					void* a14, 
					void* a15, 
					void* a16, 
					void* a17, 
					void* a18, 
					void* a19, 
					void* a20);

		public delegate int AddrOfTarget51(
					global::System.IntPtr a0, 
					long a1, 
					long a2);

		public delegate int AddrOfTarget52(
					global::System.IntPtr a0, 
					float a1, 
					global::System.Runtime.InteropServices.HSTRING a2, 
					global::System.Runtime.InteropServices.HSTRING a3, 
					long a4, 
					float a5, 
					int a6, 
					int a7, 
					int a8, 
					long a9, 
					int a10, 
					int a11, 
					long* a12);

		public delegate int AddrOfTarget53(
					global::System.IntPtr a0, 
					float a1, 
					float a2, 
					long a3, 
					long* a4);

		public delegate int AddrOfTarget54(
					global::System.IntPtr a0, 
					int a1, 
					void* a2, 
					int a3, 
					long a4);

		public delegate int AddrOfTarget55(
					global::System.IntPtr a0, 
					int a1, 
					long a2, 
					long a3);

		public delegate int AddrOfTarget56(
					global::System.IntPtr a0, 
					int a1, 
					long a2);

		public delegate int AddrOfTarget57(
					global::System.IntPtr a0, 
					long a1, 
					long a2, 
					float a3, 
					float a4, 
					float a5, 
					float a6, 
					float a7, 
					float a8, 
					float a9, 
					float a10, 
					float a11, 
					float a12, 
					int a13, 
					long a14);

		public delegate int AddrOfTarget58(
					global::System.IntPtr a0, 
					long a1, 
					float a2, 
					long a3);

		public delegate int AddrOfTarget59(
					global::System.IntPtr a0, 
					void* a1, 
					void* a2, 
					int a3, 
					int a4, 
					long a5, 
					long* a6);

		public delegate int AddrOfTarget60(
					global::System.IntPtr a0, 
					float a1, 
					float a2, 
					float a3, 
					float a4, 
					float a5, 
					float a6, 
					long a7, 
					long a8, 
					int a9, 
					long a10, 
					long a11, 
					long a12);

		public delegate int AddrOfTarget61(
					global::System.IntPtr a0, 
					long a1, 
					long a2, 
					float a3, 
					float a4, 
					float a5, 
					float a6, 
					float a7, 
					float a8, 
					float a9, 
					float a10, 
					long a11);

		public delegate int AddrOfTarget62(
					global::System.IntPtr a0, 
					float a1, 
					float a2, 
					float a3, 
					float a4, 
					float a5, 
					float a6, 
					int a7, 
					int a8, 
					long a9);

		public delegate int AddrOfTarget63(
					global::System.IntPtr a0, 
					long a1, 
					long a2, 
					global::BridgeInterface.Vector2Wrapper a3, 
					global::BridgeInterface.Vector2Wrapper a4, 
					global::BridgeInterface.Vector4Wrapper a5, 
					float a6, 
					long a7);

		public delegate int AddrOfTarget64(
					global::System.IntPtr a0, 
					long a1, 
					long a2, 
					long a3, 
					long a4, 
					long* a5);

		public delegate int AddrOfTarget65(
					global::System.IntPtr a0, 
					long a1, 
					float a2, 
					long* a3);

		public delegate int AddrOfTarget66(
					global::System.IntPtr a0, 
					global::BridgeInterface.Vector3Wrapper a1, 
					global::BridgeInterface.Vector3Wrapper a2, 
					uint a3, 
					float a4, 
					global::BridgeInterface.Vector2Wrapper a5, 
					int a6, 
					long* a7);

		public delegate int AddrOfTarget67(
					global::System.IntPtr a0, 
					int a1, 
					int a2, 
					int a3, 
					int a4, 
					int a5, 
					float a6, 
					float a7, 
					int a8, 
					long a9, 
					long a10, 
					long a11);

		public delegate int AddrOfTarget68(
					global::System.IntPtr a0, 
					int a1, 
					global::BridgeInterface.RectWrapper a2, 
					global::BridgeInterface.RectWrapper a3, 
					float a4, 
					int a5, 
					int a6, 
					sbyte a7, 
					long* a8);

		public delegate int AddrOfTarget69(
					global::System.IntPtr a0, 
					global::System.Runtime.InteropServices.HSTRING a1, 
					int a2, 
					float a3, 
					int a4, 
					sbyte a5, 
					long* a6);

		public delegate int AddrOfTarget70(
					global::System.IntPtr a0, 
					long a1, 
					int a2, 
					float a3, 
					long* a4);

		public delegate int AddrOfTarget71(
					global::System.IntPtr a0, 
					long a1, 
					sbyte a2, 
					sbyte a3, 
					sbyte a4, 
					long* a5);

		public delegate int AddrOfTarget72(
					global::System.IntPtr a0, 
					sbyte a1, 
					long* a2);

		public delegate int AddrOfTarget73(
					global::System.IntPtr a0, 
					uint a1, 
					long* a2);

		public delegate int AddrOfTarget74(
					global::System.IntPtr a0, 
					global::System.Runtime.InteropServices.HSTRING a1, 
					long* a2);

		public delegate int AddrOfTarget75(
					global::System.IntPtr a0, 
					int a1, 
					int a2, 
					long* a3);

		public delegate int AddrOfTarget76(
					global::System.IntPtr a0, 
					int a1, 
					int a2, 
					int a3, 
					long* a4);

		public delegate int AddrOfTarget77(
					global::System.IntPtr a0, 
					int a1, 
					int a2, 
					int a3, 
					int a4, 
					long* a5);

		public delegate int AddrOfTarget78(
					global::System.IntPtr a0, 
					long* a1);

		public delegate int AddrOfTarget79(
					global::System.IntPtr a0, 
					int a1, 
					void* a2);

		public delegate int AddrOfTarget80(
					global::System.IntPtr a0, 
					int a1, 
					int a2, 
					int* a3);

		public delegate int AddrOfTarget81(
					global::System.IntPtr a0, 
					long* a1, 
					long* a2);

		public delegate int AddrOfTarget82(
					global::System.IntPtr a0, 
					int a1, 
					int a2);

		public delegate int AddrOfTarget83(
					global::System.IntPtr a0, 
					global::System.Runtime.InteropServices.HSTRING a1, 
					global::System.Runtime.InteropServices.HSTRING a2, 
					void* a3);

		public delegate int AddrOfTarget84(
					global::System.IntPtr a0, 
					global::System.Runtime.InteropServices.HSTRING a1, 
					global::System.Runtime.InteropServices.HSTRING a2, 
					long a3);

		public delegate int AddrOfTarget85(
					global::System.IntPtr a0, 
					global::System.Runtime.InteropServices.HSTRING a1, 
					int* a2);

		public delegate int AddrOfTarget86(
					global::System.IntPtr a0, 
					long a1, 
					void* a2);

		public delegate int AddrOfTarget87(
					global::System.IntPtr a0, 
					long a1, 
					long a2, 
					sbyte* a3);

		public delegate int AddrOfTarget88(
					global::System.IntPtr a0, 
					sbyte* a1);

		public delegate int AddrOfTarget89(
					global::System.IntPtr a0, 
					uint a1, 
					void** a2, 
					void** a3);

		public delegate int AddrOfTarget90(
					global::System.IntPtr a0, 
					int a1, 
					int a2, 
					int a3, 
					int a4, 
					int a5, 
					int a6, 
					int a7, 
					int a8);

		public delegate int AddrOfTarget91(
					global::System.IntPtr a0, 
					global::System.Runtime.InteropServices.HSTRING a1, 
					void** a2);

		public delegate int AddrOfTarget92(
					global::System.IntPtr a0, 
					uint* a1);

		public delegate int AddrOfTarget93(
					global::System.IntPtr a0, 
					global::System.Runtime.InteropServices.HSTRING a1, 
					sbyte* a2);

		public delegate int AddrOfTarget94(
					global::System.IntPtr a0, 
					global::System.Runtime.InteropServices.HSTRING a1, 
					void* a2, 
					sbyte* a3);

		public delegate int AddrOfTarget95(
					global::System.IntPtr a0, 
					uint a1, 
					void** a2, 
					uint* a3);

		public delegate int AddrOfTarget96(
					global::System.IntPtr a0, 
					void** a1, 
					void** a2);

		public delegate int AddrOfTarget97(
					global::System.IntPtr a0, 
					global::System.Runtime.InteropServices.HSTRING a1, 
					global::System.Runtime.InteropServices.HSTRING* a2);

		public delegate int AddrOfTarget98(
					global::System.IntPtr a0, 
					global::System.Runtime.InteropServices.HSTRING a1, 
					global::System.Runtime.InteropServices.HSTRING a2, 
					sbyte* a3);

		public delegate int AddrOfTarget99(
					global::System.IntPtr a0, 
					void* a1, 
					void** a2);

		public delegate int AddrOfTarget100(
					global::System.IntPtr a0, 
					uint a1);

		public delegate int AddrOfTarget101(
					global::System.IntPtr a0, 
					void* a1, 
					uint a2);

		public delegate int AddrOfTarget102(
					global::System.IntPtr a0, 
					void* a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate int AddrOfTarget103(
					global::System.IntPtr a0, 
					ulong* a1);

		public delegate int AddrOfTarget104(
					global::System.IntPtr a0, 
					ulong a1);

		public delegate int AddrOfTarget105(
					global::System.IntPtr a0, 
					ulong a1, 
					void** a2);

		public delegate int AddrOfTarget106(
					global::System.IntPtr a0, 
					void* a1, 
					uint a2, 
					global::Windows.Storage.Streams.InputStreamOptions a3, 
					void** a4);

		public delegate int AddrOfTarget107(
					global::System.IntPtr a0, 
					float* a1);

		public delegate int AddrOfTarget108(
					global::System.IntPtr a0, 
					uint a1, 
					float* a2, 
					uint* a3);

		public delegate int AddrOfTarget109(
					global::System.IntPtr a0, 
					uint a1, 
					float* a2);

		public delegate int AddrOfTarget110(
					global::System.IntPtr a0, 
					float a1, 
					uint* a2, 
					sbyte* a3);

		public delegate int AddrOfTarget111(
					global::System.IntPtr a0, 
					uint a1, 
					float a2);

		public delegate int AddrOfTarget112(
					global::System.IntPtr a0, 
					float a1);

		public delegate int AddrOfTarget113(
					global::System.IntPtr a0, 
					uint a1, 
					uint a2, 
					float* a3, 
					uint* a4);

		public delegate int AddrOfTarget114(
					global::System.IntPtr a0, 
					double* a1);

		public delegate int AddrOfTarget115(
					global::System.IntPtr a0, 
					uint a1, 
					double* a2, 
					uint* a3);

		public delegate int AddrOfTarget116(
					global::System.IntPtr a0, 
					uint a1, 
					double* a2);

		public delegate int AddrOfTarget117(
					global::System.IntPtr a0, 
					double a1, 
					uint* a2, 
					sbyte* a3);

		public delegate int AddrOfTarget118(
					global::System.IntPtr a0, 
					uint a1, 
					double a2);

		public delegate int AddrOfTarget119(
					global::System.IntPtr a0, 
					double a1);

		public delegate int AddrOfTarget120(
					global::System.IntPtr a0, 
					uint a1, 
					uint a2, 
					double* a3, 
					uint* a4);

		public delegate int AddrOfTarget121(
					global::System.IntPtr a0, 
					global::System.DateTimeOffset__Impl.UnsafeType* a1);

		public delegate int AddrOfTarget122(
					global::System.IntPtr a0, 
					uint a1, 
					global::System.DateTimeOffset__Impl.UnsafeType* a2, 
					uint* a3);

		public delegate int AddrOfTarget123(
					global::System.IntPtr a0, 
					uint a1, 
					global::System.DateTimeOffset__Impl.UnsafeType* a2);

		public delegate int AddrOfTarget124(
					global::System.IntPtr a0, 
					global::System.DateTimeOffset__Impl.UnsafeType a1, 
					uint* a2, 
					sbyte* a3);

		public delegate int AddrOfTarget125(
					global::System.IntPtr a0, 
					uint a1, 
					global::System.DateTimeOffset__Impl.UnsafeType a2);

		public delegate int AddrOfTarget126(
					global::System.IntPtr a0, 
					global::System.DateTimeOffset__Impl.UnsafeType a1);

		public delegate int AddrOfTarget127(
					global::System.IntPtr a0, 
					uint a1, 
					uint a2, 
					global::System.DateTimeOffset__Impl.UnsafeType* a3, 
					uint* a4);

		public delegate int AddrOfTarget128(
					global::System.IntPtr a0, 
					global::System.TimeSpan* a1);

		public delegate int AddrOfTarget129(
					global::System.IntPtr a0, 
					uint a1, 
					global::System.TimeSpan* a2, 
					uint* a3);

		public delegate int AddrOfTarget130(
					global::System.IntPtr a0, 
					uint a1, 
					global::System.TimeSpan* a2);

		public delegate int AddrOfTarget131(
					global::System.IntPtr a0, 
					global::System.TimeSpan a1, 
					uint* a2, 
					sbyte* a3);

		public delegate int AddrOfTarget132(
					global::System.IntPtr a0, 
					uint a1, 
					global::System.TimeSpan a2);

		public delegate int AddrOfTarget133(
					global::System.IntPtr a0, 
					global::System.TimeSpan a1);

		public delegate int AddrOfTarget134(
					global::System.IntPtr a0, 
					uint a1, 
					uint a2, 
					global::System.TimeSpan* a3, 
					uint* a4);

		public delegate int AddrOfTarget135(
					global::System.IntPtr a0, 
					uint* a1, 
					double** a2);

		public delegate int AddrOfTarget136(
					global::System.IntPtr a0, 
					uint* a1, 
					uint** a2);

		public delegate int AddrOfTarget137(
					global::System.IntPtr a0, 
					uint* a1, 
					long** a2);

		public delegate int AddrOfTarget138(
					global::System.IntPtr a0, 
					uint* a1, 
					float** a2);

		public delegate int AddrOfTarget139(
					global::System.IntPtr a0, 
					uint a1, 
					global::Windows.Perception.People.JointPose* a2);

		public delegate int AddrOfTarget140(
					global::System.IntPtr a0, 
					global::Windows.Perception.People.JointPose a1, 
					uint* a2, 
					sbyte* a3);

		public delegate int AddrOfTarget141(
					global::System.IntPtr a0, 
					uint a1, 
					global::Windows.Perception.People.JointPose a2);

		public delegate int AddrOfTarget142(
					global::System.IntPtr a0, 
					global::Windows.Perception.People.JointPose a1);

		public delegate int AddrOfTarget143(
					global::System.IntPtr a0, 
					uint a1, 
					uint a2, 
					global::Windows.Perception.People.JointPose* a3, 
					uint* a4);

		public delegate int AddrOfTarget144(
					global::System.IntPtr a0, 
					global::Windows.Perception.People.JointPose* a1);

		public delegate int AddrOfTarget145(
					global::System.IntPtr a0, 
					uint a1, 
					global::Windows.Perception.People.JointPose* a2, 
					uint* a3);

		public delegate int AddrOfTarget146(
					global::System.IntPtr a0, 
					uint a1, 
					global::Windows.Perception.People.HandMeshVertex* a2);

		public delegate int AddrOfTarget147(
					global::System.IntPtr a0, 
					global::Windows.Perception.People.HandMeshVertex a1, 
					uint* a2, 
					sbyte* a3);

		public delegate int AddrOfTarget148(
					global::System.IntPtr a0, 
					uint a1, 
					global::Windows.Perception.People.HandMeshVertex a2);

		public delegate int AddrOfTarget149(
					global::System.IntPtr a0, 
					global::Windows.Perception.People.HandMeshVertex a1);

		public delegate int AddrOfTarget150(
					global::System.IntPtr a0, 
					uint a1, 
					uint a2, 
					global::Windows.Perception.People.HandMeshVertex* a3, 
					uint* a4);

		public delegate int AddrOfTarget151(
					global::System.IntPtr a0, 
					global::Windows.Perception.People.HandMeshVertex* a1);

		public delegate int AddrOfTarget152(
					global::System.IntPtr a0, 
					uint a1, 
					global::Windows.Perception.People.HandMeshVertex* a2, 
					uint* a3);

		public delegate int AddrOfTarget153(
					global::System.IntPtr a0, 
					uint* a1, 
					ushort** a2);

		public delegate int AddrOfTarget154(
					global::System.IntPtr a0, 
					uint* a1, 
					short** a2);

		public delegate int AddrOfTarget155(
					global::System.IntPtr a0, 
					uint* a1, 
					global::System.DateTimeOffset__Impl.UnsafeType** a2);

		public delegate int AddrOfTarget156(
					global::System.IntPtr a0, 
					uint* a1, 
					sbyte** a2);

		public delegate int AddrOfTarget157(
					global::System.IntPtr a0, 
					uint* a1, 
					global::System.TimeSpan** a2);

		public delegate int AddrOfTarget158(
					global::System.IntPtr a0, 
					uint a1, 
					global::System.Runtime.InteropServices.__vtable_IInspectable** a2);

		public delegate int AddrOfTarget159(
					global::System.IntPtr a0, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* a1, 
					uint* a2, 
					sbyte* a3);

		public delegate int AddrOfTarget160(
					global::System.IntPtr a0, 
					uint a1, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* a2);

		public delegate int AddrOfTarget161(
					global::System.IntPtr a0, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* a1);

		public delegate int AddrOfTarget162(
					global::System.IntPtr a0, 
					uint a1, 
					uint a2, 
					global::System.Runtime.InteropServices.__vtable_IInspectable** a3, 
					uint* a4);

		public delegate int AddrOfTarget163(
					global::System.IntPtr a0, 
					global::System.Runtime.InteropServices.__vtable_IInspectable** a1);

		public delegate int AddrOfTarget164(
					global::System.IntPtr a0, 
					uint a1, 
					global::System.Runtime.InteropServices.__vtable_IInspectable** a2, 
					uint* a3);

		public delegate int AddrOfTarget165(
					global::System.IntPtr a0, 
					void* a1, 
					ulong a2);

		public delegate int AddrOfTarget166(
					global::System.IntPtr a0, 
					void* a1, 
					global::Windows.Web.Http.HttpProgress__Impl.UnsafeType a2);

		public delegate int AddrOfTarget167(
					global::System.IntPtr a0, 
					global::Windows.Web.Http.HttpStatusCode* a1);

		public delegate int AddrOfTarget168(
					global::System.IntPtr a0, 
					global::System.IntPtr* a1);

		public delegate int AddrOfTarget169(
					global::System.IntPtr a0, 
					global::System.Guid* a1, 
					global::System.IntPtr a2, 
					uint a3, 
					global::System.IntPtr a4, 
					uint a5, 
					global::System.Guid* a6);

		public delegate int AddrOfTarget170(
					global::System.IntPtr a0, 
					global::System.Guid* a1, 
					global::System.IntPtr a2, 
					uint a3, 
					global::System.IntPtr a4, 
					uint a5, 
					uint* a6);

		public delegate int AddrOfTarget171(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					global::System.Guid* a2, 
					global::System.IntPtr a3, 
					uint a4, 
					global::System.IntPtr a5, 
					uint a6);

		public delegate int AddrOfTarget172(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					global::System.Guid* a2, 
					global::System.IntPtr* a3);

		public delegate void AddrOfTarget173(
					global::System.__ComObject a0, 
					object a1, 
					object a2);

		public delegate void AddrOfTarget174(global::System.__ComObject a0);

		public delegate void AddrOfTarget175(
					global::System.__ComObject a0, 
					global::Windows.ApplicationModel.Core.CoreApplicationView a1, 
					global::Windows.ApplicationModel.Activation.IActivatedEventArgs a2);

		public delegate void AddrOfTarget176(
					global::System.__ComObject a0, 
					long a1);

		public delegate void AddrOfTarget177(
					global::System.__ComObject a0, 
					long a1, 
					string a2);

		public delegate void AddrOfTarget178(
					global::System.__ComObject a0, 
					long a1, 
					float a2, 
					string a3, 
					string a4, 
					long a5, 
					float a6, 
					int a7, 
					int a8, 
					int a9, 
					long a10);

		public delegate void AddrOfTarget179(
					global::System.__ComObject a0, 
					long a1, 
					long a2, 
					long a3);

		public delegate void AddrOfTarget180(
					global::System.__ComObject a0, 
					long a1, 
					float a2, 
					float a3, 
					long a4);

		public delegate void AddrOfTarget181(
					global::System.__ComObject a0, 
					long a1, 
					long a2, 
					long a3, 
					long a4);

		public delegate void AddrOfTarget182(
					global::System.__ComObject a0, 
					long a1, 
					long a2, 
					float a3);

		public delegate void AddrOfTarget183(
					global::System.__ComObject a0, 
					long a1, 
					long a2, 
					long a3, 
					global::BridgeInterface.ColorWrapper a4, 
					global::BridgeInterface.ColorWrapper a5);

		public delegate void AddrOfTarget184(
					global::System.__ComObject a0, 
					long a1, 
					float a2, 
					float a3, 
					float a4, 
					float a5, 
					float a6, 
					float a7, 
					int a8, 
					int a9);

		public delegate void AddrOfTarget185(
					global::System.__ComObject a0, 
					long a1, 
					long a2, 
					long a3, 
					global::BridgeInterface.Vector2Wrapper a4, 
					global::BridgeInterface.Vector2Wrapper a5, 
					global::BridgeInterface.Vector4Wrapper a6, 
					float a7);

		public delegate void AddrOfTarget186(
					global::System.__ComObject a0, 
					long a1, 
					int a2, 
					global::BridgeInterface.RectWrapper a3, 
					global::BridgeInterface.RectWrapper a4, 
					float a5, 
					int a6, 
					int a7, 
					bool a8);

		public delegate void AddrOfTarget187(
					global::System.__ComObject a0, 
					long a1, 
					string a2, 
					int a3, 
					float a4, 
					float a5, 
					bool a6);

		public delegate void AddrOfTarget188(
					global::System.__ComObject a0, 
					long a1, 
					int a2, 
					uint a3);

		public delegate void AddrOfTarget189(
					global::System.__ComObject a0, 
					long a1, 
					long a2, 
					int a3, 
					float a4);

		public delegate void AddrOfTarget190(
					global::System.__ComObject a0, 
					long a1, 
					long a2, 
					bool a3, 
					bool a4, 
					bool a5);

		public delegate void AddrOfTarget191(
					global::System.__ComObject a0, 
					long a1, 
					int a2, 
					long a3);

		public delegate void AddrOfTarget192(
					global::System.__ComObject a0, 
					long a1, 
					long a2, 
					global::BridgeInterface.ColorWrapper a3, 
					global::BridgeInterface.ColorWrapper a4, 
					global::BridgeInterface.ColorWrapper a5, 
					global::BridgeInterface.ColorWrapper a6, 
					global::BridgeInterface.ColorWrapper a7, 
					long a8, 
					int a9);

		public delegate void AddrOfTarget193(
					global::System.__ComObject a0, 
					long a1, 
					long a2, 
					float a3, 
					float a4);

		public delegate void AddrOfTarget194(
					global::System.__ComObject a0, 
					long a1, 
					global::BridgeInterface.Vector3Wrapper a2, 
					global::BridgeInterface.Vector3Wrapper a3, 
					uint a4, 
					float a5, 
					global::BridgeInterface.Vector2Wrapper a6, 
					int a7);

		public delegate void AddrOfTarget195(
					global::System.__ComObject a0, 
					string a1, 
					string a2, 
					object a3);

		public delegate void AddrOfTarget196(
					global::System.__ComObject a0, 
					string a1, 
					string a2, 
					long a3);

		public delegate void AddrOfTarget197(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.ApplicationModel.Core.UnhandledErrorDetectedEventArgs a2);

		public delegate void AddrOfTarget198(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.ApplicationModel.SuspendingEventArgs a2);

		public delegate object AddrOfTarget199<T>(global::System.Collections.Generic.IEnumerable<T> a0);

		public delegate void AddrOfTarget200(
					global::System.__ComObject a0, 
					global::Windows.Foundation.Collections.IObservableMap<string, object> a1, 
					global::Windows.Foundation.Collections.IMapChangedEventArgs<string> a2);

		public delegate void AddrOfTarget201(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Core.AppRestartFailureReason> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget202(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs a2);

		public delegate void AddrOfTarget203(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.ApplicationModel.LeavingBackgroundEventArgs a2);

		public delegate void AddrOfTarget204(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.ApplicationModel.EnteredBackgroundEventArgs a2);

		public delegate void AddrOfTarget205(
					global::System.__ComObject a0, 
					long a1, 
					long a2, 
					long a3, 
					float a4, 
					float a5, 
					float a6, 
					float a7, 
					float a8, 
					float a9, 
					float a10, 
					bool a11);

		public delegate void AddrOfTarget206(
					global::System.__ComObject a0, 
					int a1, 
					int a2, 
					bool a3);

		public delegate long AddrOfTarget207(global::System.__ComObject a0);

		public delegate void AddrOfTarget208(
					global::System.__ComObject a0, 
					int a1);

		public delegate int AddrOfTarget209(global::System.__ComObject a0);

		public delegate long AddrOfTarget210(
					global::System.__ComObject a0, 
					int a1);

		public delegate void AddrOfTarget211(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.Input.KeyRoutedEventArgs a2);

		public delegate void AddrOfTarget212(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.RoutedEventArgs a2);

		public delegate void AddrOfTarget213(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.DragEventArgs a2);

		public delegate void AddrOfTarget214(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.Input.PointerRoutedEventArgs a2);

		public delegate void AddrOfTarget215(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.Input.TappedRoutedEventArgs a2);

		public delegate void AddrOfTarget216(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs a2);

		public delegate void AddrOfTarget217(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs a2);

		public delegate void AddrOfTarget218(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs a2);

		public delegate void AddrOfTarget219(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs a2);

		public delegate void AddrOfTarget220(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs a2);

		public delegate void AddrOfTarget221(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs a2);

		public delegate void AddrOfTarget222(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs a2);

		public delegate void AddrOfTarget223(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs a2);

		public delegate void AddrOfTarget224(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.UIElement a1, 
					global::Windows.UI.Xaml.DragStartingEventArgs a2);

		public delegate void AddrOfTarget225(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.UIElement a1, 
					global::Windows.UI.Xaml.DropCompletedEventArgs a2);

		public delegate void AddrOfTarget226(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.UIElement a1, 
					global::Windows.UI.Xaml.Input.ContextRequestedEventArgs a2);

		public delegate void AddrOfTarget227(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.UIElement a1, 
					global::Windows.UI.Xaml.RoutedEventArgs a2);

		public delegate void AddrOfTarget228(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.UIElement a1, 
					global::Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs a2);

		public delegate void AddrOfTarget229(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.UIElement a1, 
					global::Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs a2);

		public delegate void AddrOfTarget230(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.UIElement a1, 
					global::Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs a2);

		public delegate void AddrOfTarget231(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.UIElement a1, 
					global::Windows.UI.Xaml.Input.GettingFocusEventArgs a2);

		public delegate void AddrOfTarget232(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.UIElement a1, 
					global::Windows.UI.Xaml.Input.LosingFocusEventArgs a2);

		public delegate void AddrOfTarget233(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.UIElement a1, 
					global::Windows.UI.Xaml.Input.NoFocusCandidateFoundEventArgs a2);

		public delegate void AddrOfTarget234(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.UIElement a1, 
					global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs a2);

		public delegate void AddrOfTarget235(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.UIElement a1, 
					global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs a2);

		public delegate void AddrOfTarget236(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.UIElement a1, 
					global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs a2);

		public delegate void AddrOfTarget237(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.SizeChangedEventArgs a2);

		public delegate void AddrOfTarget238(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.FrameworkElement a1, 
					global::Windows.UI.Xaml.DataContextChangedEventArgs a2);

		public delegate void AddrOfTarget239(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.FrameworkElement a1, 
					object a2);

		public delegate void AddrOfTarget240(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.FrameworkElement a1, 
					global::Windows.UI.Xaml.EffectiveViewportChangedEventArgs a2);

		public delegate void AddrOfTarget241(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.Controls.SwapChainPanel a1, 
					object a2);

		public delegate object AddrOfTarget242<T>(
					global::System.Collections.Generic.IReadOnlyList<T> a0, 
					global::System.Runtime.InteropServices.Toolbox.IList_Oper a1, 
					ref int a2, 
					ref T a3);

		public delegate int AddrOfTarget243<T>(
					global::Windows.Foundation.AsyncOperationCompletedHandler<T> a0, 
					global::Windows.Foundation.IAsyncOperation<T> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget244(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget245(
					global::System.__ComObject a0, 
					global::Windows.Storage.StreamedFileDataRequest a1);

		public delegate void AddrOfTarget246(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperationWithProgress<uint, uint> a1, 
					uint a2);

		public delegate void AddrOfTarget247(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperationWithProgress<uint, uint> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget248(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<bool> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget249(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IBuffer, uint> a1, 
					uint a2);

		public delegate void AddrOfTarget250(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IBuffer, uint> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget251(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStreamWithContentType> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget252(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.BasicProperties> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget253(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IInputStream> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget254(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget255(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageStreamTransaction> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget256(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Search.IndexedState> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget257(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<uint> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget258(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget259(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFolder>> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget260(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.IStorageItem>> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget261(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.StorageItemThumbnail> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget262(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.MusicProperties> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget263(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.VideoProperties> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget264(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.ImageProperties> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget265(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.FileProperties.DocumentProperties> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget266(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.IStorageItem> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget267(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget268(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs a2);

		public delegate void AddrOfTarget269(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.Controls.Control a1, 
					global::Windows.UI.Xaml.Controls.FocusEngagedEventArgs a2);

		public delegate void AddrOfTarget270(
					global::System.__ComObject a0, 
					global::Windows.UI.Xaml.Controls.Control a1, 
					global::Windows.UI.Xaml.Controls.FocusDisengagedEventArgs a2);

		public delegate void AddrOfTarget271(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.Navigation.NavigationEventArgs a2);

		public delegate void AddrOfTarget272(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs a2);

		public delegate void AddrOfTarget273(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.Navigation.NavigationFailedEventArgs a2);

		public delegate void AddrOfTarget274(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.Pnp.PnpObjectCollection> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget275(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Perception.People.HandMeshObserver> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget276(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.UI.Input.GazeInputAccessStatus> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget277(
					global::System.__ComObject a0, 
					global::Windows.UI.ViewManagement.InputPane a1, 
					global::Windows.UI.ViewManagement.InputPaneVisibilityEventArgs a2);

		public delegate void AddrOfTarget278(
					global::System.__ComObject a0, 
					global::Windows.Foundation.Collections.IObservableMap<string, string> a1, 
					global::Windows.Foundation.Collections.IMapChangedEventArgs<string> a2);

		public delegate void AddrOfTarget279(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncAction a1);

		public delegate void AddrOfTarget280(
					global::System.__ComObject a0, 
					global::Windows.System.Threading.ThreadPoolTimer a1);

		public delegate void AddrOfTarget281(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs a2);

		public delegate int AddrOfTarget282<T>(
					global::System.Collections.Generic.IList<T> a0, 
					global::System.Runtime.InteropServices.Toolbox.IList_Oper a1, 
					int a2, 
					ref object a3);

		public delegate int AddrOfTarget283<T>(
					global::Windows.Foundation.Collections.IIterator<T> a0, 
					global::System.Runtime.InteropServices.Toolbox.IIterator_Oper a1, 
					ref object a2, 
					int a3);

		public delegate int AddrOfTarget284<T>(
					global::System.Collections.Generic.IReadOnlyList<T> a0, 
					global::System.Runtime.InteropServices.Toolbox.IList_Oper a1, 
					int a2, 
					ref T a3);

		public delegate void AddrOfTarget285(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Xaml.UnhandledExceptionEventArgs a2);

		public delegate object AddrOfTarget286<T>(
					global::System.Collections.Generic.IList<T> a0, 
					global::System.Runtime.InteropServices.Toolbox.IList_Oper a1, 
					ref int a2, 
					ref T a3);

		public delegate global::System.Array AddrOfTarget287<T>(
					global::Windows.Foundation.Collections.IIterator<T> a0, 
					global::System.Runtime.InteropServices.Toolbox.IIterator_Oper a1, 
					ref T a2, 
					ref int a3);

		public delegate void AddrOfTarget288(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IDictionary<string, object>> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget289(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageLibraryChange>> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget290(
					global::System.__ComObject a0, 
					global::Windows.Storage.Search.IStorageQueryResultBase a1, 
					object a2);

		public delegate void AddrOfTarget291(
					global::System.__ComObject a0, 
					global::Windows.UI.Input.Spatial.SpatialInteractionManager a1, 
					global::Windows.UI.Input.Spatial.SpatialInteractionDetectedEventArgs a2);

		public delegate void AddrOfTarget292(
					global::System.__ComObject a0, 
					global::Windows.UI.Input.Spatial.SpatialInteractionManager a1, 
					global::Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs a2);

		public delegate void AddrOfTarget293(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IBuffer> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget294(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Core.WindowActivatedEventArgs a2);

		public delegate void AddrOfTarget295(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Core.CoreWindowEventArgs a2);

		public delegate void AddrOfTarget296(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Core.WindowSizeChangedEventArgs a2);

		public delegate void AddrOfTarget297(
					global::System.__ComObject a0, 
					object a1, 
					global::Windows.UI.Core.VisibilityChangedEventArgs a2);

		public delegate void AddrOfTarget298(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> a1, 
					ulong a2);

		public delegate void AddrOfTarget299(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget300(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> a1, 
					global::Windows.Web.Http.HttpProgress a2);

		public delegate void AddrOfTarget301(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate void AddrOfTarget302(
					global::System.__ComObject a0, 
					global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> a1, 
					global::Windows.Foundation.AsyncStatus a2);

		public delegate int AddrOfTarget303(
					global::System.IntPtr a0, 
					global::System.Guid* a1, 
					global::System.IntPtr* a2);

		public delegate uint AddrOfTarget304(global::System.IntPtr a0);

		public delegate int AddrOfTarget305(
					global::System.IntPtr a0, 
					uint* a1, 
					global::System.IntPtr* a2);

		public delegate int AddrOfTarget306(
					global::System.IntPtr a0, 
					global::WinRT.TrustLevel__Microsoft_Windows_MixedReality_DotNetWinRT* a1);

		public delegate int AddrOfTarget307(
					global::System.IntPtr a0, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* a1);

		public delegate int AddrOfTarget308(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					double a2);

		public delegate int AddrOfTarget309(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					double a2, 
					global::WinRT.Interop._TimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT a3);

		public delegate int AddrOfTarget310(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					double a2, 
					int a3, 
					global::WinRT.Interop._TimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT a4);

		public delegate int AddrOfTarget311(
					global::System.IntPtr a0, 
					ushort* a1);

		public delegate int AddrOfTarget312(
					global::System.IntPtr a0, 
					global::WinRT.Interop._TimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT* a1);

		public delegate int AddrOfTarget313(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					global::System.IntPtr* a2);

		public delegate int AddrOfTarget314(
					global::System.IntPtr a0, 
					global::System.Numerics.Vector3__System_Numerics_Vectors* a1);

		public delegate int AddrOfTarget315(
					global::System.IntPtr a0, 
					global::System.Numerics.Quaternion__System_Numerics_Vectors* a1);

		public delegate int AddrOfTarget316(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					global::System.IntPtr a2, 
					global::System.IntPtr* a3);

		public delegate int AddrOfTarget317(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					global::WinRT.Interop.EventRegistrationToken__Microsoft_Windows_MixedReality_DotNetWinRT* a2);

		public delegate int AddrOfTarget318(
					global::System.IntPtr a0, 
					global::WinRT.Interop.EventRegistrationToken__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget319(
					global::System.IntPtr a0, 
					global::WinRT.Interop._DateTime__Microsoft_Windows_MixedReality_DotNetWinRT* a1);

		public delegate int AddrOfTarget320(
					global::System.IntPtr a0, 
					global::WinRT.Interop._DateTime__Microsoft_Windows_MixedReality_DotNetWinRT a1, 
					global::System.IntPtr* a2);

		public delegate int AddrOfTarget321(
					global::System.IntPtr a0, 
					global::WinRT.Interop._TimeSpan__Microsoft_Windows_MixedReality_DotNetWinRT a1, 
					global::System.IntPtr* a2);

		public delegate int AddrOfTarget322(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT a2, 
					global::Microsoft.Windows.Perception.People.JointPose__Microsoft_Windows_MixedReality_DotNetWinRT* a3, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* a4);

		public delegate int AddrOfTarget323(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					uint a2, 
					global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT* a3, 
					uint a4, 
					global::Microsoft.Windows.Perception.People.JointPose__Microsoft_Windows_MixedReality_DotNetWinRT* a5, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* a6);

		public delegate int AddrOfTarget324(
					global::System.IntPtr a0, 
					global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT a1, 
					global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT a2, 
					global::Microsoft.Windows.Perception.People.JointPose__Microsoft_Windows_MixedReality_DotNetWinRT* a3);

		public delegate int AddrOfTarget325(
					global::System.IntPtr a0, 
					uint a1, 
					global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT* a2, 
					uint a3, 
					global::Microsoft.Windows.Perception.People.HandJointKind__Microsoft_Windows_MixedReality_DotNetWinRT* a4, 
					uint a5, 
					global::Microsoft.Windows.Perception.People.JointPose__Microsoft_Windows_MixedReality_DotNetWinRT* a6);

		public delegate int AddrOfTarget326(
					global::System.IntPtr a0, 
					uint a1, 
					ushort* a2);

		public delegate int AddrOfTarget327(
					global::System.IntPtr a0, 
					uint a1, 
					global::Microsoft.Windows.Perception.People.HandMeshVertex__Microsoft_Windows_MixedReality_DotNetWinRT* a2);

		public delegate int AddrOfTarget328(
					global::System.IntPtr a0, 
					global::Microsoft.Windows.Perception.Spatial.SpatialRay__Microsoft_Windows_MixedReality_DotNetWinRT* a1);

		public delegate int AddrOfTarget329(
					global::System.IntPtr a0, 
					global::System.Guid a1, 
					global::System.IntPtr* a2);

		public delegate int AddrOfTarget330(
					global::System.IntPtr a0, 
					global::System.Guid a1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors a2, 
					global::System.IntPtr* a3);

		public delegate int AddrOfTarget331(
					global::System.IntPtr a0, 
					global::System.Guid a1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors a2, 
					global::System.Numerics.Quaternion__System_Numerics_Vectors a3, 
					global::System.IntPtr* a4);

		public delegate int AddrOfTarget332(
					global::System.IntPtr a0, 
					global::System.Guid* a1);

		public delegate int AddrOfTarget333(
					global::System.IntPtr a0, 
					global::System.Numerics.Matrix4x4__System_Numerics_Vectors* a1);

		public delegate int AddrOfTarget334(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors a2, 
					global::System.IntPtr* a3);

		public delegate int AddrOfTarget335(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors a2, 
					global::System.Numerics.Quaternion__System_Numerics_Vectors a3, 
					global::System.IntPtr* a4);

		public delegate int AddrOfTarget336(
					global::System.IntPtr a0, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget337(
					global::System.IntPtr a0, 
					global::WinRT.Interop._Size__Microsoft_Windows_MixedReality_DotNetWinRT* a1);

		public delegate int AddrOfTarget338(
					global::System.IntPtr a0, 
					global::Microsoft.Windows.Graphics.Holographic.HolographicAdapterId__Microsoft_Windows_MixedReality_DotNetWinRT* a1);

		public delegate int AddrOfTarget339(
					global::System.IntPtr a0, 
					global::Microsoft.Windows.Graphics.Holographic.HolographicViewConfigurationKind__Microsoft_Windows_MixedReality_DotNetWinRT a1, 
					global::System.IntPtr* a2);

		public delegate int AddrOfTarget340(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors a2, 
					global::System.Numerics.Quaternion__System_Numerics_Vectors a3);

		public delegate int AddrOfTarget341(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					global::System.Numerics.Vector3__System_Numerics_Vectors a2, 
					global::System.Numerics.Quaternion__System_Numerics_Vectors a3, 
					global::System.Numerics.Vector2__System_Numerics_Vectors a4);

		public delegate int AddrOfTarget342(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* a2);

		public delegate int AddrOfTarget343(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					global::System.IntPtr a2, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* a3);

		public delegate int AddrOfTarget344(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					global::System.IntPtr a2, 
					uint a3, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* a4);

		public delegate void AddrOfTarget345(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					global::System.IntPtr a2, 
					uint a3, 
					global::System.UIntPtr a4, 
					global::System.IntPtr a5);

		public delegate void AddrOfTarget346(
					uint* a0, 
					uint* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix44_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget347(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					float a1, 
					float a2);

		public delegate void AddrOfTarget348(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					float* a1, 
					float* a2, 
					float* a3, 
					float* a4);

		public delegate int AddrOfTarget349(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					float a1, 
					float a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.DistortionCoordinates_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget350(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate int AddrOfTarget351(
					float* a0, 
					ulong* a1);

		public delegate int AddrOfTarget352();

		public delegate void AddrOfTarget353(int* a0);

		public delegate void AddrOfTarget354(
					ulong* a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETextureType__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::System.IntPtr a2);

		public delegate int AddrOfTarget355(int a0);

		public delegate void AddrOfTarget356(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					float a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a2, 
					uint a3);

		public delegate void AddrOfTarget357();

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget358();

		public delegate uint AddrOfTarget359(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceClass__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					uint* a1, 
					uint a2, 
					uint a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDeviceActivityLevel__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget360(uint a0);

		public delegate void AddrOfTarget361(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate uint AddrOfTarget362(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedControllerRole__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedControllerRole__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget363(uint a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceClass__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget364(uint a0);

		public delegate int AddrOfTarget365(uint a0);

		public delegate int AddrOfTarget366(
					uint a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate float AddrOfTarget367(
					uint a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate ulong AddrOfTarget368(
					uint a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget369(
					uint a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate uint AddrOfTarget370(
					uint a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					uint a2, 
					global::System.IntPtr a3, 
					uint a4, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a5);

		public delegate uint AddrOfTarget371(
					uint a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedDeviceProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					byte* a2, 
					uint a3, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a4);

		public delegate global::System.IntPtr AddrOfTarget372(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackedPropertyError__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate int AddrOfTarget373(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a0, 
					uint a1);

		public delegate int AddrOfTarget374(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a1, 
					uint a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a3);

		public delegate global::System.IntPtr AddrOfTarget375(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREventType__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HiddenAreaMesh_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget376(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EHiddenAreaMeshType__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget377(
					uint a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRControllerState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1, 
					uint a2);

		public delegate int AddrOfTarget378(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					uint a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRControllerState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2, 
					uint a3, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a4);

		public delegate void AddrOfTarget379(
					uint a0, 
					uint a1, 
					ushort a2);

		public delegate global::System.IntPtr AddrOfTarget380(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRButtonId__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate global::System.IntPtr AddrOfTarget381(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRControllerAxisType__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate uint AddrOfTarget382(
					uint a0, 
					byte* a1, 
					byte* a2, 
					uint a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRFirmwareError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget383(uint a0);

		public delegate void AddrOfTarget384(
					int* a0, 
					int* a1, 
					uint* a2, 
					uint* a3);

		public delegate void AddrOfTarget385(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					uint* a1, 
					uint* a2, 
					uint* a3, 
					uint* a4);

		public delegate void AddrOfTarget386(
					int* a0, 
					int* a1);

		public delegate global::System.IntPtr AddrOfTarget387(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget388(
					uint a0, 
					int* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget389(
					uint a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					uint* a2, 
					uint* a3, 
					uint* a4);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget390(
					uint a0, 
					uint a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a3, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a4);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget391(
					uint a0, 
					uint a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR a2, 
					float a3, 
					float a4, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix44_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a5);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget392(
					uint a0, 
					ulong* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget393(ulong a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget394(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::System.IntPtr a2, 
					uint a3, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.CameraVideoStreamFrameHeader_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a4, 
					uint a5);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget395(
					uint a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRTextureBounds_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2, 
					uint* a3, 
					uint* a4);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget396(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::System.IntPtr a2, 
					global::System.IntPtr* a3, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.CameraVideoStreamFrameHeader_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a4, 
					uint a5);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget397(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraFrameType__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					uint* a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.CameraVideoStreamFrameHeader_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a3, 
					uint a4);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRTrackedCameraError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget398(
					ulong a0, 
					uint a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget399(
					byte* a0, 
					int a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget400(byte* a0);

		public delegate int AddrOfTarget401(byte* a0);

		public delegate uint AddrOfTarget402();

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget403(
					uint a0, 
					byte* a1, 
					uint a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget404(
					byte* a0, 
					byte* a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.AppOverrideKeys_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2, 
					uint a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget405(
					byte* a0, 
					byte* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget406(
					uint a0, 
					byte* a1);

		public delegate uint AddrOfTarget407(byte* a0);

		public delegate global::System.IntPtr AddrOfTarget408(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate uint AddrOfTarget409(
					byte* a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					byte* a2, 
					uint a3, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a4);

		public delegate int AddrOfTarget410(
					byte* a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate ulong AddrOfTarget411(
					byte* a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationProperty__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate int AddrOfTarget412(
					byte* a0, 
					byte* a1, 
					uint a2);

		public delegate uint AddrOfTarget413(
					byte* a0, 
					byte* a1, 
					uint a2);

		public delegate uint AddrOfTarget414(
					uint a0, 
					byte* a1, 
					uint a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget415(
					byte* a0, 
					uint a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationTransitionState__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget416();

		public delegate global::System.IntPtr AddrOfTarget417(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationTransitionState__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRApplicationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget418(
					byte* a0, 
					byte* a1, 
					byte* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ChaperoneCalibrationState__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget419();

		public delegate int AddrOfTarget420(
					float* a0, 
					float* a1);

		public delegate int AddrOfTarget421(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdQuad_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a0);

		public delegate void AddrOfTarget422(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate void AddrOfTarget423(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a0, 
					int a1, 
					float a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a3);

		public delegate void AddrOfTarget424(int a0);

		public delegate int AddrOfTarget425(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EChaperoneConfigFile__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate int AddrOfTarget426(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdQuad_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a0, 
					uint* a1);

		public delegate int AddrOfTarget427(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a0);

		public delegate void AddrOfTarget428(
					float a0, 
					float a1);

		public delegate void AddrOfTarget429(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdQuad_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a0, 
					uint a1);

		public delegate void AddrOfTarget430(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a0, 
					uint a1);

		public delegate void AddrOfTarget431(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a0);

		public delegate void AddrOfTarget432(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EChaperoneConfigFile__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate int AddrOfTarget433(
					byte* a0, 
					uint* a1);

		public delegate int AddrOfTarget434(
					byte* a0, 
					uint a1);

		public delegate void AddrOfTarget435(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget436();

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget437(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a0, 
					uint a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a2, 
					uint a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget438(
					uint a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget439(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Texture_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRTextureBounds_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSubmitFlags__Microsoft_MixedReality_Toolkit_Providers_OpenVR a3);

		public delegate int AddrOfTarget440(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Compositor_FrameTiming__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a0, 
					uint a1);

		public delegate uint AddrOfTarget441(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Compositor_FrameTiming__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a0, 
					uint a1);

		public delegate float AddrOfTarget442();

		public delegate void AddrOfTarget443(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Compositor_CumulativeStats__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a0, 
					uint a1);

		public delegate void AddrOfTarget444(
					float a0, 
					float a1, 
					float a2, 
					float a3, 
					float a4, 
					int a5);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget445(int a0);

		public delegate void AddrOfTarget446(
					float a0, 
					int a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget447(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Texture_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a0, 
					uint a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget448(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					global::System.IntPtr a1, 
					global::System.IntPtr* a2);

		public delegate void AddrOfTarget449(global::System.IntPtr a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget450(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVREye__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					uint* a1, 
					global::System.IntPtr a2);

		public delegate int AddrOfTarget451(
					uint a0, 
					global::System.IntPtr a1);

		public delegate uint AddrOfTarget452(
					byte* a0, 
					uint a1);

		public delegate uint AddrOfTarget453(
					global::System.IntPtr a0, 
					byte* a1, 
					uint a2);

		public delegate void AddrOfTarget454(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorTimingMode__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRCompositorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget455();

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget456(
					byte* a0, 
					ulong* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget457(
					byte* a0, 
					byte* a1, 
					ulong* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget458(ulong a0);

		public delegate ulong AddrOfTarget459();

		public delegate uint AddrOfTarget460(
					ulong a0, 
					byte* a1, 
					uint a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget461(
					ulong a0, 
					byte* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget462(
					ulong a0, 
					global::System.IntPtr a1, 
					uint a2, 
					uint* a3, 
					uint* a4);

		public delegate global::System.IntPtr AddrOfTarget463(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget464(
					ulong a0, 
					uint a1);

		public delegate uint AddrOfTarget465(ulong a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget466(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayFlags__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					int a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget467(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayFlags__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					int* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget468(
					ulong a0, 
					float a1, 
					float a2, 
					float a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget469(
					ulong a0, 
					float* a1, 
					float* a2, 
					float* a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget470(
					ulong a0, 
					float a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget471(
					ulong a0, 
					float* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget472(
					ulong a0, 
					uint* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget473(
					ulong a0, 
					float a1, 
					float a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget474(
					ulong a0, 
					float* a1, 
					float* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget475(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EColorSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget476(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EColorSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget477(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRTextureBounds_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1);

		public delegate uint AddrOfTarget478(
					ulong a0, 
					byte* a1, 
					uint a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a3, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a4);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget479(
					ulong a0, 
					byte* a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdColor_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget480(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayTransformType__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget481(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget482(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget483(
					ulong a0, 
					uint a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget484(
					ulong a0, 
					uint* a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget485(
					ulong a0, 
					uint a1, 
					byte* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget486(
					ulong a0, 
					uint* a1, 
					byte* a2, 
					uint a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget487(
					ulong a0, 
					ulong* a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget488(
					ulong a0, 
					ulong a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate int AddrOfTarget489(ulong a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget490(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a3);

		public delegate int AddrOfTarget491(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a1, 
					uint a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget492(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayInputMethod__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget493(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayInputMethod__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget494(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1);

		public delegate int AddrOfTarget495(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayIntersectionParams_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayIntersectionResults_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget496(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EOverlayDirection__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					ulong a1, 
					ulong a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget497(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EOverlayDirection__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					ulong a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget498(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDualAnalogWhich__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2, 
					float a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget499(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EDualAnalogWhich__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdVector2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2, 
					float* a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget500(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Texture_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget501(
					ulong a0, 
					global::System.IntPtr a1, 
					uint a2, 
					uint a3, 
					uint a4);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget502(
					ulong a0, 
					global::System.IntPtr* a1, 
					global::System.IntPtr a2, 
					uint* a3, 
					uint* a4, 
					uint* a5, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETextureType__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a6, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EColorSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a7, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRTextureBounds_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a8);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget503(
					ulong a0, 
					global::System.IntPtr a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget504(
					ulong a0, 
					uint* a1, 
					uint* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget505(
					byte* a0, 
					byte* a1, 
					ulong* a2, 
					ulong* a3);

		public delegate void AddrOfTarget506(byte* a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget507(
					int a0, 
					int a1, 
					byte* a2, 
					uint a3, 
					byte* a4, 
					int a5, 
					ulong a6);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget508(
					ulong a0, 
					int a1, 
					int a2, 
					byte* a3, 
					uint a4, 
					byte* a5, 
					int a6, 
					ulong a7);

		public delegate void AddrOfTarget509(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdMatrix34_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1);

		public delegate void AddrOfTarget510(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.HmdRect2_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVROverlayError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget511(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VROverlayIntersectionMaskPrimitive_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1, 
					uint a2, 
					uint a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRMessageOverlayResponse__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget512(
					byte* a0, 
					byte* a1, 
					byte* a2, 
					byte* a3, 
					byte* a4, 
					byte* a5);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget513(
					byte* a0, 
					global::System.IntPtr* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget514(
					int a0, 
					global::System.IntPtr* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget515(
					int a0, 
					global::System.IntPtr a1, 
					global::System.IntPtr* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget516(
					int a0, 
					global::System.IntPtr a1);

		public delegate uint AddrOfTarget517(
					byte* a0, 
					uint a1, 
					byte* a2, 
					uint a3);

		public delegate ulong AddrOfTarget518(
					byte* a0, 
					byte* a1);

		public delegate uint AddrOfTarget519(
					byte* a0, 
					byte* a1, 
					byte* a2, 
					uint a3);

		public delegate int AddrOfTarget520(
					byte* a0, 
					byte* a1, 
					ulong a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ControllerMode_State_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a3, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ComponentState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a4);

		public delegate int AddrOfTarget521(
					byte* a0, 
					byte* a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRControllerState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ControllerMode_State_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a3, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ComponentState_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a4);

		public delegate int AddrOfTarget522(
					byte* a0, 
					byte* a1);

		public delegate uint AddrOfTarget523(
					byte* a0, 
					byte* a1, 
					uint a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a3);

		public delegate global::System.IntPtr AddrOfTarget524(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRRenderModelError__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget525(
					ulong a0, 
					ulong a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationType__Microsoft_MixedReality_Toolkit_Providers_OpenVR a2, 
					byte* a3, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationStyle__Microsoft_MixedReality_Toolkit_Providers_OpenVR a4, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.NotificationBitmap_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a5, 
					uint* a6);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRNotificationError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget526(uint a0);

		public delegate global::System.IntPtr AddrOfTarget527(global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0);

		public delegate int AddrOfTarget528(
					int a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1);

		public delegate void AddrOfTarget529(
					byte* a0, 
					byte* a1, 
					int a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a3);

		public delegate void AddrOfTarget530(
					byte* a0, 
					byte* a1, 
					float a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a3);

		public delegate void AddrOfTarget531(
					byte* a0, 
					byte* a1, 
					byte* a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a3);

		public delegate int AddrOfTarget532(
					byte* a0, 
					byte* a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate float AddrOfTarget533(
					byte* a0, 
					byte* a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate void AddrOfTarget534(
					byte* a0, 
					byte* a1, 
					byte* a2, 
					uint a3, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a4);

		public delegate void AddrOfTarget535(
					byte* a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1);

		public delegate void AddrOfTarget536(
					byte* a0, 
					byte* a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSettingsError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget537(
					uint* a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					byte* a2, 
					byte* a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget538(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a0, 
					int a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget539(
					uint a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1);

		public delegate uint AddrOfTarget540(
					uint a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotPropertyFilenames__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					byte* a2, 
					uint a3, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a4);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget541(
					uint a0, 
					float a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget542(
					uint* a0, 
					byte* a1, 
					byte* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget543(
					uint a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRScreenshotType__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					byte* a2, 
					byte* a3);

		public delegate ulong AddrOfTarget544(byte* a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget545(byte* a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget546(
					byte* a0, 
					ulong* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget547(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRActiveActionSet_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a0, 
					uint a1, 
					uint a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget548(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputDigitalActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a1, 
					uint a2, 
					ulong a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget549(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputAnalogActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a1, 
					uint a2, 
					ulong a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget550(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					float a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputPoseActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a3, 
					uint a4, 
					ulong a5);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget551(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputSkeletalActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType* a1, 
					uint a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget552(
					ulong a0, 
					uint* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget553(
					ulong a0, 
					int* a1, 
					uint a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget554(
					ulong a0, 
					int a1, 
					byte* a2, 
					uint a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget555(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTransformSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalReferencePose__Microsoft_MixedReality_Toolkit_Providers_OpenVR a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRBoneTransform_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a3, 
					uint a4);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget556(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTrackingLevel__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget557(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTransformSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalMotionRange__Microsoft_MixedReality_Toolkit_Providers_OpenVR a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRBoneTransform_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a3, 
					uint a4);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget558(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRSkeletalSummaryData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget559(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalMotionRange__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::System.IntPtr a2, 
					uint a3, 
					uint* a4);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget560(
					global::System.IntPtr a0, 
					uint a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSkeletalTransformSpace__Microsoft_MixedReality_Toolkit_Providers_OpenVR a2, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRBoneTransform_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a3, 
					uint a4);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget561(
					ulong a0, 
					float a1, 
					float a2, 
					float a3, 
					float a4, 
					ulong a5);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget562(
					ulong a0, 
					ulong a1, 
					ulong* a2, 
					uint a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget563(
					ulong a0, 
					byte* a1, 
					uint a2, 
					int a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget564(
					ulong a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputOriginInfo_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a1, 
					uint a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget565(
					ulong a0, 
					ulong a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRInputError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget566(
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VRActiveActionSet_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a0, 
					uint a1, 
					uint a2, 
					ulong a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget567(
					byte* a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferMode__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					uint a2, 
					uint a3, 
					ulong* a4);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget568(ulong a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget569(
					ulong a0, 
					global::System.IntPtr a1, 
					uint a2, 
					uint* a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EIOBufferError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget570(
					ulong a0, 
					global::System.IntPtr a1, 
					uint a2);

		public delegate ulong AddrOfTarget571(ulong a0);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget572(
					byte* a0, 
					uint* a1);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget573(
					uint a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.SpatialAnchorPose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2, 
					uint* a3);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget574(
					uint a0, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.ETrackingUniverseOrigin__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1, 
					global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.SpatialAnchorPose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR* a2);

		public delegate global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.EVRSpatialAnchorError__Microsoft_MixedReality_Toolkit_Providers_OpenVR AddrOfTarget575(
					uint a0, 
					byte* a1, 
					uint* a2);

		public delegate void AddrOfTarget576(
					global::System.IntPtr* a0, 
					global::System.IntPtr* a1);

		public delegate int AddrOfTarget577(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					int a2);

		public delegate int AddrOfTarget578(
					global::System.IntPtr a0, 
					uint a1, 
					global::System.IntPtr* a2, 
					uint* a3);

		public delegate int AddrOfTarget579(
					global::System.IntPtr a0, 
					uint a1, 
					global::System.IntPtr* a2);

		public delegate int AddrOfTarget580(
					global::System.IntPtr a0, 
					global::System.IntPtr a1, 
					uint* a2, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* a3);

		public delegate int AddrOfTarget581(
					global::System.IntPtr a0, 
					uint a1, 
					uint a2, 
					global::System.IntPtr* a3, 
					uint* a4);

		public delegate int AddrOfTarget582(
					global::System.IntPtr a0, 
					uint a1, 
					global::System.IntPtr a2);

		public delegate int AddrOfTarget583(
					global::System.IntPtr a0, 
					uint a1, 
					int* a2, 
					uint* a3);

		public delegate int AddrOfTarget584(
					global::System.IntPtr a0, 
					uint a1, 
					int* a2);

		public delegate int AddrOfTarget585(
					global::System.IntPtr a0, 
					int a1, 
					uint* a2, 
					global::WinRT.Interop._Bool__Microsoft_Windows_MixedReality_DotNetWinRT* a3);

		public delegate int AddrOfTarget586(
					global::System.IntPtr a0, 
					uint a1, 
					uint a2, 
					int* a3, 
					uint* a4);

		public delegate uint AddrOfTarget587(
					uint a0, 
					global::System.IntPtr a1, 
					uint a2);

		public delegate void AddrOfTarget588(
					global::System.IntPtr a0, 
					uint a1, 
					uint a2);

		public delegate void AddrOfTarget589(
					sbyte* a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget590(
					byte* a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget591(
					ushort* a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget592(
					short* a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget593(
					int* a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget594(
					uint* a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget595(
					long* a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget596(
					ulong* a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget597(
					float* a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget598(
					double* a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget599(
					ushort** a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget600(
					byte** a0, 
					int* a1, 
					global::System.IntPtr a2);

		public delegate void AddrOfTarget601(
					global::System.IntPtr a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget602(
					global::UnityEngine.Matrix4x4__UnityEngine_CoreModule* a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget603(
					global::UnityEngine.Color32__UnityEngine_CoreModule* a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget604(
					global::UnityEngine.PropertyName__UnityEngine_CoreModule* a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget605(
					global::System.IntPtr a0, 
					int* a1);

		public delegate void AddrOfTarget606(void* a0);

		public delegate void AddrOfTarget607(
					int a0, 
					int a1);

		public delegate long AddrOfTarget608();

		public delegate long AddrOfTarget609(int a0);

		public delegate void AddrOfTarget610(global::UnityEngine.PropertyName__UnityEngine_CoreModule* a0);

		public delegate void AddrOfTarget611(
					long a0, 
					int a1);

		public delegate int AddrOfTarget612(long a0);

		public delegate global::System.IntPtr AddrOfTarget613(
					int a0, 
					global::System.IntPtr a1);

		public delegate long AddrOfTarget614(
					global::System.IntPtr a0, 
					global::System.UIntPtr a1);

		public delegate long AddrOfTarget615(
					global::System.IntPtr a0, 
					global::System.UIntPtr a1, 
					long* a2);

		public delegate long AddrOfTarget616(long a0);

		public delegate long AddrOfTarget617(
					long a0, 
					long* a1, 
					global::System.IntPtr a2);

		public delegate long AddrOfTarget618(
					long a0, 
					long a1, 
					global::System.IntPtr a2);

		public delegate int AddrOfTarget619(
					long a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget620(
					long a0, 
					int a1, 
					global::System.IntPtr a2);

		public delegate float AddrOfTarget621(
					long a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget622(
					long a0, 
					float a1, 
					global::System.IntPtr a2);

		public delegate float AddrOfTarget623(
					long a0, 
					int a1, 
					global::System.IntPtr a2);

		public delegate void AddrOfTarget624(
					long a0, 
					float a1, 
					int a2, 
					global::System.IntPtr a3);

		public delegate long AddrOfTarget625(
					long a0, 
					global::System.IntPtr a1);

		public delegate void AddrOfTarget626(
					long a0, 
					long a1, 
					global::System.IntPtr a2);

		public delegate void AddrOfTarget627(
					int a0, 
					global::System.IntPtr a1);

		public delegate long AddrOfTarget628(
					int a0, 
					long* a1);

		public delegate void AddrOfTarget629(
					long a0, 
					long* a1, 
					int a2);

		public delegate long AddrOfTarget630(byte* a0);

		public delegate void AddrOfTarget631(
					long a0, 
					int* a1);

		public delegate object AddrOfTarget632(object a0);

		public delegate object AddrOfTarget633(global::System.__ComObject a0);

		public delegate int AddrOfTarget634(
					ref global::BridgeInterface.ExceptionDescription a0, 
					out global::BridgeInterface.ExceptionDescription__Impl.UnsafeType a1);

		public delegate int AddrOfTarget635(
					ref global::BridgeInterface.ExceptionDescription__Impl.UnsafeType a0, 
					out global::BridgeInterface.ExceptionDescription a1);

		public delegate void AddrOfTarget636(ref global::BridgeInterface.ExceptionDescription__Impl.UnsafeType a0);

		public delegate int AddrOfTarget637(
					ref global::Windows.Storage.Search.SortEntry a0, 
					out global::Windows.Storage.Search.SortEntry__Impl.UnsafeType a1);

		public delegate int AddrOfTarget638(
					ref global::Windows.Storage.Search.SortEntry__Impl.UnsafeType a0, 
					out global::Windows.Storage.Search.SortEntry a1);

		public delegate void AddrOfTarget639(ref global::Windows.Storage.Search.SortEntry__Impl.UnsafeType a0);

		public delegate int AddrOfTarget640(
					ref global::Windows.Web.Http.HttpProgress a0, 
					out global::Windows.Web.Http.HttpProgress__Impl.UnsafeType a1);

		public delegate int AddrOfTarget641(
					ref global::Windows.Web.Http.HttpProgress__Impl.UnsafeType a0, 
					out global::Windows.Web.Http.HttpProgress a1);

		public delegate void AddrOfTarget642(ref global::Windows.Web.Http.HttpProgress__Impl.UnsafeType a0);

		public delegate int AddrOfTarget643(
					ref global::WinRT.Interop.IClosable_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::WinRT.Interop.IClosable_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget644(
					ref global::WinRT.Interop.IClosable_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::WinRT.Interop.IClosable_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget645(
					ref global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget646(
					ref global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::WinRT.Interop.IInspectableVftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget647(
					ref global::WinRT.Interop.IUnknownVftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::WinRT.Interop.IUnknownVftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget648(
					ref global::WinRT.Interop.IUnknownVftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::WinRT.Interop.IUnknownVftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget649(
					ref global::WinRT.Interop.IAsyncInfo_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::WinRT.Interop.IAsyncInfo_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget650(
					ref global::WinRT.Interop.IAsyncInfo_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::WinRT.Interop.IAsyncInfo_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget651(
					ref global::Microsoft.Windows.Devices.Haptics.ISimpleHapticsController_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Devices.Haptics.ISimpleHapticsController_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget652(
					ref global::Microsoft.Windows.Devices.Haptics.ISimpleHapticsController_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Devices.Haptics.ISimpleHapticsController_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget653(
					ref global::Microsoft.Windows.Devices.Haptics.ISimpleHapticsControllerFeedback_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Devices.Haptics.ISimpleHapticsControllerFeedback_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget654(
					ref global::Microsoft.Windows.Devices.Haptics.ISimpleHapticsControllerFeedback_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Devices.Haptics.ISimpleHapticsControllerFeedback_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget655(
					ref global::Microsoft.Windows.Devices.Power.IBatteryReport_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Devices.Power.IBatteryReport_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget656(
					ref global::Microsoft.Windows.Devices.Power.IBatteryReport_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Devices.Power.IBatteryReport_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget657(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget658(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget659(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget660(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget661(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget662(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionController3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget663(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget664(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget665(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget666(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget667(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget668(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget669(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource4_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource4_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget670(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource4_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSource4_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget671(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget672(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget673(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget674(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget675(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPoseStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPoseStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget676(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPoseStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPoseStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget677(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget678(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget679(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget680(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget681(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget682(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialPointerPose3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget683(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionManagerStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionManagerStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget684(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionManagerStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionManagerStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget685(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionManager_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionManager_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget686(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionManager_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionManager_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget687(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget688(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget689(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget690(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget691(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget692(
					ref global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.UI.Input.Spatial.ISpatialInteractionSourceState3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget693(
					ref global::Microsoft.Windows.Perception.IPerceptionTimestamp_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Perception.IPerceptionTimestamp_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget694(
					ref global::Microsoft.Windows.Perception.IPerceptionTimestamp_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Perception.IPerceptionTimestamp_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget695(
					ref global::Microsoft.Windows.Perception.IPerceptionTimestamp2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Perception.IPerceptionTimestamp2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget696(
					ref global::Microsoft.Windows.Perception.IPerceptionTimestamp2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Perception.IPerceptionTimestamp2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget697(
					ref global::Microsoft.Windows.Perception.IPerceptionTimestampHelperStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Perception.IPerceptionTimestampHelperStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget698(
					ref global::Microsoft.Windows.Perception.IPerceptionTimestampHelperStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Perception.IPerceptionTimestampHelperStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget699(
					ref global::Microsoft.Windows.Perception.IPerceptionTimestampHelperStatics2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Perception.IPerceptionTimestampHelperStatics2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget700(
					ref global::Microsoft.Windows.Perception.IPerceptionTimestampHelperStatics2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Perception.IPerceptionTimestampHelperStatics2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget701(
					ref global::Microsoft.Windows.Perception.People.IHeadPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Perception.People.IHeadPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget702(
					ref global::Microsoft.Windows.Perception.People.IHeadPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Perception.People.IHeadPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget703(
					ref global::Microsoft.Windows.Perception.People.IEyesPoseStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Perception.People.IEyesPoseStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget704(
					ref global::Microsoft.Windows.Perception.People.IEyesPoseStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Perception.People.IEyesPoseStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget705(
					ref global::Microsoft.Windows.Perception.People.IEyesPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Perception.People.IEyesPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget706(
					ref global::Microsoft.Windows.Perception.People.IEyesPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Perception.People.IEyesPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget707(
					ref global::Microsoft.Windows.Perception.People.IHandPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Perception.People.IHandPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget708(
					ref global::Microsoft.Windows.Perception.People.IHandPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Perception.People.IHandPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget709(
					ref global::Microsoft.Windows.Perception.People.IHandMeshObserver_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Perception.People.IHandMeshObserver_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget710(
					ref global::Microsoft.Windows.Perception.People.IHandMeshObserver_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Perception.People.IHandMeshObserver_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget711(
					ref global::Microsoft.Windows.Perception.People.IHandMeshVertexState_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Perception.People.IHandMeshVertexState_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget712(
					ref global::Microsoft.Windows.Perception.People.IHandMeshVertexState_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Perception.People.IHandMeshVertexState_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget713(
					ref global::Microsoft.Windows.Perception.Spatial.IReference_SpatialRay_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Perception.Spatial.IReference_SpatialRay_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget714(
					ref global::Microsoft.Windows.Perception.Spatial.IReference_SpatialRay_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Perception.Spatial.IReference_SpatialRay_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget715(
					ref global::Microsoft.Windows.Perception.Spatial.ISpatialCoordinateSystem_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Perception.Spatial.ISpatialCoordinateSystem_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget716(
					ref global::Microsoft.Windows.Perception.Spatial.ISpatialCoordinateSystem_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Perception.Spatial.ISpatialCoordinateSystem_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget717(
					ref global::Microsoft.Windows.Perception.Spatial.ISpatialAnchorExporterStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Perception.Spatial.ISpatialAnchorExporterStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget718(
					ref global::Microsoft.Windows.Perception.Spatial.ISpatialAnchorExporterStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Perception.Spatial.ISpatialAnchorExporterStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget719(
					ref global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget720(
					ref global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget721(
					ref global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropFrameOfReferencePreview_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropFrameOfReferencePreview_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget722(
					ref global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropFrameOfReferencePreview_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropFrameOfReferencePreview_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget723(
					ref global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget724(
					ref global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Perception.Spatial.Preview.ISpatialGraphInteropPreviewStatics2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget725(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicFrame_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicFrame_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget726(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicFrame_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicFrame_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget727(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicCamera_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicCamera_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget728(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicCamera_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicCamera_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget729(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicCamera6_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicCamera6_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget730(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicCamera6_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicCamera6_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget731(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicViewConfiguration_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicViewConfiguration_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget732(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicViewConfiguration_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicViewConfiguration_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget733(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicViewConfiguration2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicViewConfiguration2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget734(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicViewConfiguration2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicViewConfiguration2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget735(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicFramePrediction_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicFramePrediction_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget736(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicFramePrediction_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicFramePrediction_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget737(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicCameraPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicCameraPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget738(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicCameraPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicCameraPose_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget739(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicCameraRenderingParameters4_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicCameraRenderingParameters4_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget740(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicCameraRenderingParameters4_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicCameraRenderingParameters4_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget741(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplay_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplay_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget742(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplay_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplay_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget743(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplay2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplay2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget744(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplay2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplay2_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget745(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplay3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplay3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget746(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplay3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplay3_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget747(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplayStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplayStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget748(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplayStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicDisplayStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget749(
					ref global::Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboard_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboard_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget750(
					ref global::Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboard_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboard_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget751(
					ref global::Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboardStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboardStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget752(
					ref global::Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboardStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.ApplicationModel.Holographic.IHolographicKeyboardStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget753(
					ref global::Microsoft.Windows.Foundation.Metadata.IApiInformationStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Foundation.Metadata.IApiInformationStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget754(
					ref global::Microsoft.Windows.Foundation.Metadata.IApiInformationStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Foundation.Metadata.IApiInformationStatics_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget755(
					ref global::Interop_mincore_WIN32_FIND_DATA__System_IO_FileSystem a0, 
					out global::Interop_mincore_WIN32_FIND_DATA__System_IO_FileSystem__Impl.UnsafeType a1);

		public delegate int AddrOfTarget756(
					ref global::Interop_mincore_WIN32_FIND_DATA__System_IO_FileSystem__Impl.UnsafeType a0, 
					out global::Interop_mincore_WIN32_FIND_DATA__System_IO_FileSystem a1);

		public delegate int AddrOfTarget757(
					global::System.Delegate__System_Private_CoreLib a0, 
					out global::System.Delegate__System_Private_CoreLib__Impl.UnsafeType a1);

		public delegate int AddrOfTarget758(
					ref global::System.Delegate__System_Private_CoreLib__Impl.UnsafeType a0, 
					global::System.Delegate__System_Private_CoreLib a1);

		public delegate void AddrOfTarget759(ref global::System.Delegate__System_Private_CoreLib__Impl.UnsafeType a0);

		public delegate int AddrOfTarget760(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget761(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSystem__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget762(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget763(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.TrackedDevicePose_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget764(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Data_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Data_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget765(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Data_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Data_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget766(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Process_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Process_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget767(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Process_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_Process_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget768(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_TouchPadMove_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_TouchPadMove_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget769(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_TouchPadMove_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_TouchPadMove_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget770(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_SeatedZeroPoseReset_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_SeatedZeroPoseReset_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget771(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_SeatedZeroPoseReset_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.VREvent_SeatedZeroPoseReset_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget772(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRExtendedDisplay__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRExtendedDisplay__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget773(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRExtendedDisplay__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRExtendedDisplay__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget774(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget775(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRTrackedCamera__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget776(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.CameraVideoStreamFrameHeader_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.CameraVideoStreamFrameHeader_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget777(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.CameraVideoStreamFrameHeader_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.CameraVideoStreamFrameHeader_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget778(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget779(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRApplications__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget780(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget781(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperone__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget782(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget783(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRChaperoneSetup__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget784(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget785(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRCompositor__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget786(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Compositor_FrameTiming__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Compositor_FrameTiming__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget787(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Compositor_FrameTiming__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.Compositor_FrameTiming__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget788(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget789(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVROverlay__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget790(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget791(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRRenderModels__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget792(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ControllerMode_State_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ControllerMode_State_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget793(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ControllerMode_State_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.RenderModel_ControllerMode_State_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget794(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRNotifications__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRNotifications__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget795(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRNotifications__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRNotifications__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget796(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget797(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSettings__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget798(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget799(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRScreenshots__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget800(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRResources__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRResources__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget801(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRResources__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRResources__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget802(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRDriverManager__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRDriverManager__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget803(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRDriverManager__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRDriverManager__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget804(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget805(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRInput__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget806(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputDigitalActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputDigitalActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget807(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputDigitalActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputDigitalActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget808(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputAnalogActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputAnalogActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget809(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputAnalogActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputAnalogActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget810(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputPoseActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputPoseActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget811(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputPoseActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputPoseActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget812(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputSkeletalActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputSkeletalActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget813(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputSkeletalActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.InputSkeletalActionData_t__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget814(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRIOBuffer__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRIOBuffer__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget815(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRIOBuffer__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRIOBuffer__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget816(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSpatialAnchors__Microsoft_MixedReality_Toolkit_Providers_OpenVR a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSpatialAnchors__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a1);

		public delegate int AddrOfTarget817(
					ref global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSpatialAnchors__Microsoft_MixedReality_Toolkit_Providers_OpenVR__Impl.UnsafeType a0, 
					out global::Microsoft.MixedReality.Toolkit.OpenVR.Headers.IVRSpatialAnchors__Microsoft_MixedReality_Toolkit_Providers_OpenVR a1);

		public delegate int AddrOfTarget818(
					ref global::WinRT.Interop.IActivationFactoryVftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::WinRT.Interop.IActivationFactoryVftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget819(
					ref global::WinRT.Interop.IActivationFactoryVftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::WinRT.Interop.IActivationFactoryVftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget820(
					ref global::WinRT.Interop.IReference_Matrix4x4__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::WinRT.Interop.IReference_Matrix4x4__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget821(
					ref global::WinRT.Interop.IReference_Matrix4x4__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::WinRT.Interop.IReference_Matrix4x4__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget822(
					ref global::WinRT.Interop.IAsyncOperation_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::WinRT.Interop.IAsyncOperation_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget823(
					ref global::WinRT.Interop.IAsyncOperation_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::WinRT.Interop.IAsyncOperation_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget824(
					ref global::WinRT.Interop.IIteratorOfObject__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::WinRT.Interop.IIteratorOfObject__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget825(
					ref global::WinRT.Interop.IIteratorOfObject__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::WinRT.Interop.IIteratorOfObject__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget826(
					ref global::WinRT.Interop.IIterableOfObject__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::WinRT.Interop.IIterableOfObject__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget827(
					ref global::WinRT.Interop.IIterableOfObject__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::WinRT.Interop.IIterableOfObject__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget828(
					ref global::WinRT.Interop.IVectorViewOfObject__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::WinRT.Interop.IVectorViewOfObject__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget829(
					ref global::WinRT.Interop.IVectorViewOfObject__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::WinRT.Interop.IVectorViewOfObject__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget830(
					ref global::WinRT.Interop.IVectorOfObject__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::WinRT.Interop.IVectorOfObject__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget831(
					ref global::WinRT.Interop.IVectorOfObject__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::WinRT.Interop.IVectorOfObject__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget832(
					ref global::WinRT.Interop.IIteratorOfEnum__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::WinRT.Interop.IIteratorOfEnum__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget833(
					ref global::WinRT.Interop.IIteratorOfEnum__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::WinRT.Interop.IIteratorOfEnum__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget834(
					ref global::WinRT.Interop.IIterableOfEnum__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::WinRT.Interop.IIterableOfEnum__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget835(
					ref global::WinRT.Interop.IIterableOfEnum__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::WinRT.Interop.IIterableOfEnum__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget836(
					ref global::WinRT.Interop.IVectorViewOfEnum__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::WinRT.Interop.IVectorViewOfEnum__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget837(
					ref global::WinRT.Interop.IVectorViewOfEnum__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::WinRT.Interop.IVectorViewOfEnum__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget838(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicCameraRenderingParameters_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicCameraRenderingParameters_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a1);

		public delegate int AddrOfTarget839(
					ref global::Microsoft.Windows.Graphics.Holographic.IHolographicCameraRenderingParameters_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT__Impl.UnsafeType a0, 
					out global::Microsoft.Windows.Graphics.Holographic.IHolographicCameraRenderingParameters_Vftbl__Microsoft_Windows_MixedReality_DotNetWinRT a1);

		public delegate int AddrOfTarget840(
					ref global::WinRTBridge.NamedSerializationTransferFunctions__WinRTBridge a0, 
					out global::WinRTBridge.NamedSerializationTransferFunctions__WinRTBridge__Impl.UnsafeType a1);

		public delegate int AddrOfTarget841(
					ref global::WinRTBridge.NamedSerializationTransferFunctions__WinRTBridge__Impl.UnsafeType a0, 
					out global::WinRTBridge.NamedSerializationTransferFunctions__WinRTBridge a1);
	}
}

namespace Mcg
{
	//
	// The RS.Get contain the set of GetString functions that provides the localization infrastructure, 
	// it is used with the RS.cs that provides the string set.
	//
	namespace System
	{
	    internal static partial class SR
	    {
	        /// <summary>
	        /// This function is responsible to provide the string localization. 
	        /// It is called throught the functions with the default strings in the global::Mcg.System.SR.cs file. 
	        /// The localization infrastructure is in the interop.dll, provided by the ResourceManager.GetString function. 
	        /// The whole path is:
	        /// 
	        ///   (Templates\global::Mcg.System.SR.cs) global::Mcg.System.SR.Arg_Localizable 
	        ///     +--> (Templates\global::Mcg.System.SR.Get.cs) global::Mcg.System.SR.GetResourceString 
	        ///            +--> (contracts\Internal.MCG\Internal.MCG.cs) System.Runtime.CompilerServices.McgResource.GetResourceString 
	        ///                   +--> (Interop\System\Runtime\CompilerServices\McgResource.cs) System.Runtime.CompilerServices.McgResource.GetResourceString
	        ///                          +--> (Common\System\global::Mcg.System.SR.cs) global::Mcg.System.SR.GetResourceString 
	        ///                                 +--> ResourceManager.GetString
	        /// </summary>
	        /// <param name="resourceKey">String with the key that represent the invalid string</param>
	        /// <param name="defaultString">default string used if the localized string was not provided</param>
	        /// <returns>The localized string</returns>
	        internal static string GetResourceString(string resourceKey, string defaultString)
	        {
	#if !MCG_WINRT_SUPPORTED
	            return defaultString; 
	#else
	            return global::System.Runtime.CompilerServices.McgResource.GetResourceString(resourceKey, defaultString); 
	#endif
	        }

	        internal static string Format(string resourceId, params object[] args)
	        {
	            if (args != null)
	            {
	#if !MCG_WINRT_SUPPORTED
	                string reportStr = string.Empty;
	                foreach (object item in args)
	                {
	                    reportStr = string.Concat(reportStr, " | ", item.ToString());
	                }
	                reportStr = string.Concat(resourceId, reportStr);
	                return reportStr;
	#else
	                return string.Format(resourceId, args);
	#endif
	            }

	            return resourceId;
	        }

	        // For back compat - this is the old GetString method from SG used by MCG code
	        // Keep this for now to avoid massive renames and potential merge conflicts
	        // @TODO - Get rid of this
	        internal static string GetString(string resourceId, params object[] args)
	        {
	            return Format(resourceId, args);
	        }
	    }
	}

	// This is auto generated file. Please don’t modify manually.
	// The file is generated as part of the build through the ResourceGenerator tool 
	// which takes the project resx resource file and generated this source code file.
	// By default the tool will use Resources\Strings.resx but projects can customize
	// that by overriding the StringResourcesPath property group.
	namespace System
	{
	    internal static partial class SR
	    {
	#pragma warning disable 0414
	        private const string s_resourcesName = "System.Private.Interop.resources"; // assembly Name + .resources
	#pragma warning restore 0414

	        internal static string Arg_BufferTooSmall {
	              get { return SR.GetResourceString("Arg_BufferTooSmall", @"Not enough space available in the buffer."); }
	        }
	        internal static string Arg_DllNotFoundException {
	              get { return SR.GetResourceString("Arg_DllNotFoundException", @"Dll was not found."); }
	        }
	        internal static string Arg_InvalidANSIString {
	              get { return SR.GetResourceString("Arg_InvalidANSIString", @"The ANSI string passed in could not be converted from the default ANSI code page to Unicode."); }
	        }
	        internal static string Arg_InvalidComObjectException {
	              get { return SR.GetResourceString("Arg_InvalidComObjectException", @"Attempt has been made to use a COM object that does not have a backing class factory."); }
	        }
	        internal static string Arg_InvalidHandle {
	              get { return SR.GetResourceString("Arg_InvalidHandle", @"Invalid handle."); }
	        }
	        internal static string Arg_InvalidOleVariantTypeException {
	              get { return SR.GetResourceString("Arg_InvalidOleVariantTypeException", @"Specified OLE variant was invalid."); }
	        }
	        internal static string Arg_VariantTypeNotSupported {
	              get { return SR.GetResourceString("Arg_VariantTypeNotSupported", @"Marshal for the specified variant type {0} not supported."); }
	        }
	        internal static string Arg_InvalidThreshold {
	              get { return SR.GetResourceString("Arg_InvalidThreshold", @"maximumThreshold cannot be less than initialThreshold."); }
	        }
	        internal static string Arg_MarshalDirectiveException {
	              get { return SR.GetResourceString("Arg_MarshalDirectiveException", @"Marshaling directives are invalid."); }
	        }
	        internal static string Arg_MustBeDecimal {
	              get { return SR.GetResourceString("Arg_MustBeDecimal", @"Object must be of type Decimal."); }
	        }
	        internal static string Arg_MustBeInt32 {
	              get { return SR.GetResourceString("Arg_MustBeInt32", @"Object must be of type Int32."); }
	        }
	        internal static string Arg_MustBeStringPtrNotAtom {
	              get { return SR.GetResourceString("Arg_MustBeStringPtrNotAtom", @"The pointer passed in as a String must not be in the bottom 64K of the process's address space."); }
	        }
	        internal static string Arg_NeedNonNegNumRequired {
	              get { return SR.GetResourceString("Arg_NeedNonNegNumRequired", @"Non-negative number required."); }
	        }
	        internal static string Arg_NotIsomorphic {
	              get { return SR.GetResourceString("Arg_NotIsomorphic", @"Object contains non-primitive or non-blittable data."); }
	        }
	        internal static string Arg_SafeArrayRankMismatchException {
	              get { return SR.GetResourceString("Arg_SafeArrayRankMismatchException", @"Specified array was not of the expected rank."); }
	        }
	        internal static string Arg_SafeArrayTypeMismatchException {
	              get { return SR.GetResourceString("Arg_SafeArrayTypeMismatchException", @"Specified array was not of the expected type."); }
	        }
	        internal static string Arg_SizeOfNoTypeSizeInfo {
	              get { return SR.GetResourceString("Arg_SizeOfNoTypeSizeInfo", @"Marshal.SizeOf may only be used with blittable types and types used in the generic SizeOf<T> overload methods."); }
	        }
	        internal static string Arg_SizeOfNonValueType {
	              get { return SR.GetResourceString("Arg_SizeOfNonValueType", @"Marshal.SizeOf may only be used with value types."); }
	        }
	        internal static string Argument_InvalidOffLength {
	              get { return SR.GetResourceString("Argument_InvalidOffLength", @"The offset and length provided do not fit within the bounds of the array"); }
	        }
	        internal static string Argument_NeedNonGenericType {
	              get { return SR.GetResourceString("Argument_NeedNonGenericType", @"The specified Type must not be a generic type definition."); }
	        }
	        internal static string Argument_NeedStructWithNoRefs {
	              get { return SR.GetResourceString("Argument_NeedStructWithNoRefs", @"The specified Type must be a struct containing no references."); }
	        }
	        internal static string Argument_ObjNotComObject {
	              get { return SR.GetResourceString("Argument_ObjNotComObject", @"The object's type must be __ComObject or derived from __ComObject."); }
	        }
	        internal static string ArgumentNull_Buffer {
	              get { return SR.GetResourceString("ArgumentNull_Buffer", @"Buffer cannot be null."); }
	        }
	        internal static string ArgumentOutOfRange_AddressSpace {
	              get { return SR.GetResourceString("ArgumentOutOfRange_AddressSpace", @"The number of bytes cannot exceed the virtual address space on a 32 bit machine."); }
	        }
	        internal static string ArgumentOutOfRange_NeedNonNegNum {
	              get { return SR.GetResourceString("ArgumentOutOfRange_NeedNonNegNum", @"Non-negative number required."); }
	        }
	        internal static string ArgumentOutOfRange_UIntPtrMaxMinusOne {
	              get { return SR.GetResourceString("ArgumentOutOfRange_UIntPtrMaxMinusOne", @"The length of the buffer must be less than the maximum UIntPtr value for your platform."); }
	        }
	        internal static string Null_HString {
	              get { return SR.GetResourceString("Null_HString", @"Null strings may not be marshaled in Windows Runtime arguments."); }
	        }
	        internal static string BadMarshalField_Null_HString {
	              get { return SR.GetResourceString("BadMarshalField_Null_HString", @"Null strings may not be marshaled in Windows Runtime fields."); }
	        }
	        internal static string ArrayWithOffsetOverflow {
	              get { return SR.GetResourceString("ArrayWithOffsetOverflow", @"ArrayWithOffset: offset exceeds array size."); }
	        }
	        internal static string InvalidOperation_HCCountOverflow {
	              get { return SR.GetResourceString("InvalidOperation_HCCountOverflow", @"Handle collector count overflows or underflows."); }
	        }
	        internal static string InvalidOperation_MustCallInitialize {
	              get { return SR.GetResourceString("InvalidOperation_MustCallInitialize", @"You must call Initialize on this object instance before using it."); }
	        }
	        internal static string StructArrayTooLarge {
	              get { return SR.GetResourceString("StructArrayTooLarge", @"Array size exceeds addressing limitations."); }
	        }
	        internal static string WrongSizeArrayInNStruct {
	              get { return SR.GetResourceString("WrongSizeArrayInNStruct", @"Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."); }
	        }
	        internal static string CustomPropertyProvider_DataBindingError {
	              get { return SR.GetResourceString("CustomPropertyProvider_DataBindingError", @"Failed to bind to property '{0}'.  {1}"); }
	        }
	        internal static string CustomPropertyProvider_MissingMetadata {
	              get { return SR.GetResourceString("CustomPropertyProvider_MissingMetadata", @"Failed to bind to property '{0}'.  {1}"); }
	        }
	        internal static string Arg_GetMethNotFnd {
	              get { return SR.GetResourceString("Arg_GetMethNotFnd", @"Property Get method not found."); }
	        }
	        internal static string Arg_SetMethNotFnd {
	              get { return SR.GetResourceString("Arg_SetMethNotFnd", @"Property Set method not found."); }
	        }
	        internal static string Arg_MethodAccessException_WithMethodName {
	              get { return SR.GetResourceString("Arg_MethodAccessException_WithMethodName", @"Attempt to access the method '{0}' on type '{1}' failed."); }
	        }
	        internal static string Arg_RemovedTypeInstantiated {
	              get { return SR.GetResourceString("Arg_RemovedTypeInstantiated", @"A type that was removed by MCG dependency reduction has been instantiated."); }
	        }
	        internal static string Arg_NotImplementedInNonCoreApiSet {
	              get { return SR.GetResourceString("Arg_NotImplementedInNonCoreApiSet", @"{0} is not implemented for non-CORE_API_SET builds."); }
	        }
	        internal static string Arg_DelegateTypeNotRecognized {
	              get { return SR.GetResourceString("Arg_DelegateTypeNotRecognized", @"Delegate type is not recognized."); }
	        }
	        internal static string Arg_NoMarshalCreatedObjectUsedOutOfTreadContext {
	              get { return SR.GetResourceString("Arg_NoMarshalCreatedObjectUsedOutOfTreadContext", @"The Windows Runtime Object can only be used in the threading context where it was created, because it implements INoMarshal or has MarshalingBehaviorAttribute(MarshalingType.None) set."); }
	        }
	        internal static string Arg_UnexpectedTypeKind {
	              get { return SR.GetResourceString("Arg_UnexpectedTypeKind", @"Unexpected TypeKind."); }
	        }
	        internal static string Arg_UnrecognizedTypeName {
	              get { return SR.GetResourceString("Arg_UnrecognizedTypeName", @"Unrecognized type name."); }
	        }
	        internal static string Arg_InvalidCustomTypeNameValue {
	              get { return SR.GetResourceString("Arg_InvalidCustomTypeNameValue", @"Invalid custom TypeName value."); }
	        }
	        internal static string Arg_InteropMarshalUnmappableChar {
	              get { return SR.GetResourceString("Arg_InteropMarshalUnmappableChar", @"Cannot marshal: Encountered unmappable character."); }
	        }
	        internal static string Argument_MustHaveLayoutOrBeBlittable {
	              get { return SR.GetResourceString("Argument_MustHaveLayoutOrBeBlittable", @"The specified structure '{0}' must be blittable or have layout information."); }
	        }
	        internal static string TypeNameMarshalling_MissingMetadata {
	              get { return SR.GetResourceString("TypeNameMarshalling_MissingMetadata", @"Failed to marshal System.Type instance using metadata information. {0}"); }
	        }
	        internal static string Excep_EnumNotStarted {
	              get { return SR.GetResourceString("Excep_EnumNotStarted", @"Enum Not Started"); }
	        }
	        internal static string Excep_EnumEnded {
	              get { return SR.GetResourceString("Excep_EnumEnded", @"Enum ended"); }
	        }
	        internal static string Excep_EnumFailedVersion {
	              get { return SR.GetResourceString("Excep_EnumFailedVersion", @"Collection was modified; enumeration operation may not execute."); }
	        }
	        internal static string Excep_NotSupported {
	              get { return SR.GetResourceString("Excep_NotSupported", @"Not supported exception."); }
	        }
	        internal static string Excep_CollectionBackingListTooLarge {
	              get { return SR.GetResourceString("Excep_CollectionBackingListTooLarge", @"Collection backing list too large"); }
	        }
	        internal static string Excep_KeyNotFound {
	              get { return SR.GetResourceString("Excep_KeyNotFound", @"The given key was not present in the dictionary."); }
	        }
	        internal static string Excep_KeyCollectionSet {
	              get { return SR.GetResourceString("Excep_KeyCollectionSet", @"Key collection set."); }
	        }
	        internal static string Excep_ValueCollectionSet {
	              get { return SR.GetResourceString("Excep_ValueCollectionSet", @"Value collection set."); }
	        }
	        internal static string Excep_InsufficientSpaceToCopyCollection {
	              get { return SR.GetResourceString("Excep_InsufficientSpaceToCopyCollection", @"Insufficient space to copy collection."); }
	        }
	        internal static string Excep_IndexOutOfArrayBounds {
	              get { return SR.GetResourceString("Excep_IndexOutOfArrayBounds", @"Index out of array bounds."); }
	        }
	        internal static string Excep_CannotRemoveFromEmptyCollection {
	              get { return SR.GetResourceString("Excep_CannotRemoveFromEmptyCollection", @"Cannot remove from empty collection."); }
	        }
	        internal static string Excep_IndexLargerThanMaxValue {
	              get { return SR.GetResourceString("Excep_IndexLargerThanMaxValue", @"Index larger than max value."); }
	        }
	        internal static string Excep_IndexOutOfRange {
	              get { return SR.GetResourceString("Excep_IndexOutOfRange", @"The specified index is outside the current index range of this collection."); }
	        }
	        internal static string Excep_AddingDuplicate {
	              get { return SR.GetResourceString("Excep_AddingDuplicate", @"Adding duplicate."); }
	        }
	        internal static string Excep_FromHResult {
	              get { return SR.GetResourceString("Excep_FromHResult", @"Exception from HRESULT:"); }
	        }
	        internal static string Excep_InvalidMarshalAs_Param {
	              get { return SR.GetResourceString("Excep_InvalidMarshalAs_Param", @"Incompatible MarshalAs detected in parameter named '{0}'. Please refer to MCG's warning message for more information."); }
	        }
	        internal static string Excep_InvalidMarshalAs_Field {
	              get { return SR.GetResourceString("Excep_InvalidMarshalAs_Field", @"Incompatible MarshalAs detected in field named '{0}'. Please refer to MCG's warning message for more information."); }
	        }
	        internal static string Excep_InvalidMarshalAs_Return {
	              get { return SR.GetResourceString("Excep_InvalidMarshalAs_Return", @"Incompatible MarshalAs detected in return value. Please refer to MCG's warning message for more information."); }
	        }
	        internal static string Excep_InvalidComObject_NoRCW_Wrapper {
	              get { return SR.GetResourceString("Excep_InvalidComObject_NoRCW_Wrapper", @"COM object that has been separated from its underlying RCW cannot be used."); }
	        }
	        internal static string StructMarshalling_MissingInteropData {
	              get { return SR.GetResourceString("StructMarshalling_MissingInteropData", @"{0} is missing structure marshalling data. To enable structure marshalling data, add a MarshalStructure directive to the application rd.xml file. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=393965"); }
	        }
	        internal static string DelegateMarshalling_MissingInteropData {
	              get { return SR.GetResourceString("DelegateMarshalling_MissingInteropData", @"{0} is missing delegate marshalling data. To enable delegate marshalling data, add a MarshalDelegate directive to the application rd.xml file. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=393965"); }
	        }
	        internal static string ComTypeMarshalling_MissingInteropData {
	              get { return SR.GetResourceString("ComTypeMarshalling_MissingInteropData", @"{0} is missing COM type marshalling data. To enable COM type marshalling data, add a MarshalObject directive to the application rd.xml file. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=393965"); }
	        }
	        internal static string Not_Enough_Thunks {
	              get { return SR.GetResourceString("Not_Enough_Thunks", @"The maximum number of live delegates have been marshaled to function pointers. More aggressively freeing delegate instances that have been marshaled may resolve this problem. Please notify Microsoft that you have encountered this error."); }
	        }
	        internal static string Arg_NativeToManagedCall {
	              get { return SR.GetResourceString("Arg_NativeToManagedCall", @"Function has a parameter or return value of SafeHandle. Marshalling between a Windows HANDLE and .NET SafeHandle is not supported when a method is called from native code."); }
	        }
	        internal static string Arg_NeedsDefaultCtor {
	              get { return SR.GetResourceString("Arg_NeedsDefaultCtor", @"'{0}' does not have a default constructor. Subclasses of SafeHandle must have a default constructor to support marshaling a Windows HANDLE into managed code."); }
	        }
	        internal static string Arg_OutSafeHandleAsFieldNotSupported {
	              get { return SR.GetResourceString("Arg_OutSafeHandleAsFieldNotSupported", @"Marshalling a Windows HANDLE to .NET SafeHandle within a structure field is not currently supported."); }
	        }
	        internal static string PropertyValue_InvalidCoersion {
	              get { return SR.GetResourceString("PropertyValue_InvalidCoersion", @"Object in an IPropertyValue is of type '{0}' with value '{1}', which cannot be converted to a '{2}'."); }
	        }
	        internal static string PropertyValue_InvalidCast {
	              get { return SR.GetResourceString("PropertyValue_InvalidCast", @"Object in an IPropertyValue is of type '{0}', which cannot be converted to a '{1}'."); }
	        }
	        internal static string Arg_MustBeDelegateType {
	              get { return SR.GetResourceString("Arg_MustBeDelegateType", @"Type must derive from Delegate."); }
	        }
	        internal static string Arg_CriticalHandleCannotBeAbstract {
	              get { return SR.GetResourceString("Arg_CriticalHandleCannotBeAbstract", @"'{0}' is abstract. CriticalHandle types must not be abstract to support marshaling CriticalHandles into managed code."); }
	        }
	        internal static string Arg_CriticalHandleMustHaveDefaultCtor {
	              get { return SR.GetResourceString("Arg_CriticalHandleMustHaveDefaultCtor", @"'{0}' does not have a default constructor. CriticalHandle types must have a default constructor to support marshaling CriticalHandles into managed code."); }
	        }
	        internal static string Arg_CriticalHandleReverse {
	              get { return SR.GetResourceString("Arg_CriticalHandleReverse", @"CriticalHandle types cannot be used in signatures of methods called from native code."); }
	        }
	        internal static string Arg_OutCriticalHandleAsFieldNotSupported {
	              get { return SR.GetResourceString("Arg_OutCriticalHandleAsFieldNotSupported", @"Marshalling a Windows HANDLE to .NET CriticalHandle within a structure field is not currently supported."); }
	        }

	    }
	}

	// The StartupCodeTrigger class is used to initialize various framework components
	// and the individual module constructors using IL code injected into initializeMethod
	// in the StartupCodeInjector transform.
	public static partial class StartupCodeTrigger
	{
		static int s_initialized;
		// Actual code for this method will be injected by the StartupCodeInjectorTransform.
		// It will look something like:
		// DeveloperExperienceConnector.Initialize();
		// Internal.WinRT.Interop.WinRTCallback.Initialize();
		// Eager cctor calls followed by module cctors;
		static void InternalInitialize()
		{
		}

		public static void Initialize()
		{
			if (s_initialized != 2)
				if (global::System.Threading.Interlocked.CompareExchange(
									ref s_initialized, 
									1, 
									0
								) == 0)
				{
					InternalInitialize();
					global::System.Threading.Volatile.Write(
										ref s_initialized, 
										2
									);
				}
				else
					while (global::System.Threading.Volatile.Read(ref s_initialized) != 2)
					{
						global::System.Runtime.InteropServices.SpinWaitExtensions.Yield();
					}
		}
	}
}

namespace System.Runtime.InteropServices
{
	[global::System.AttributeUsage((System.AttributeTargets.Method | System.AttributeTargets.Class))]
	internal class McgIntrinsicsAttribute : global::System.Attribute
	{
	}
}

